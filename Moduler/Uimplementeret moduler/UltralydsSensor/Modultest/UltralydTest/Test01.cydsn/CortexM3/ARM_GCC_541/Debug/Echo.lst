ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Echo.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Echo_Write,"ax",%progbits
  20              		.align	2
  21              		.global	Echo_Write
  22              		.thumb
  23              		.thumb_func
  24              		.type	Echo_Write, %function
  25              	Echo_Write:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\Echo.c"
   1:Generated_Source\PSoC5/Echo.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Echo.c **** * File Name: Echo.c  
   3:Generated_Source\PSoC5/Echo.c **** * Version 2.20
   4:Generated_Source\PSoC5/Echo.c **** *
   5:Generated_Source\PSoC5/Echo.c **** * Description:
   6:Generated_Source\PSoC5/Echo.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC5/Echo.c **** *
   8:Generated_Source\PSoC5/Echo.c **** * Note:
   9:Generated_Source\PSoC5/Echo.c **** *
  10:Generated_Source\PSoC5/Echo.c **** ********************************************************************************
  11:Generated_Source\PSoC5/Echo.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:Generated_Source\PSoC5/Echo.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:Generated_Source\PSoC5/Echo.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:Generated_Source\PSoC5/Echo.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/Echo.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/Echo.c **** 
  17:Generated_Source\PSoC5/Echo.c **** #include "cytypes.h"
  18:Generated_Source\PSoC5/Echo.c **** #include "Echo.h"
  19:Generated_Source\PSoC5/Echo.c **** 
  20:Generated_Source\PSoC5/Echo.c **** /* APIs are not generated for P15[7:6] on PSoC 5 */
  21:Generated_Source\PSoC5/Echo.c **** #if !(CY_PSOC5A &&\
  22:Generated_Source\PSoC5/Echo.c **** 	 Echo__PORT == 15 && ((Echo__MASK & 0xC0) != 0))
  23:Generated_Source\PSoC5/Echo.c **** 
  24:Generated_Source\PSoC5/Echo.c **** 
  25:Generated_Source\PSoC5/Echo.c **** /*******************************************************************************
  26:Generated_Source\PSoC5/Echo.c **** * Function Name: Echo_Write
  27:Generated_Source\PSoC5/Echo.c **** ****************************************************************************//**
  28:Generated_Source\PSoC5/Echo.c **** *
  29:Generated_Source\PSoC5/Echo.c **** * \brief Writes the value to the physical port (data output register), masking
  30:Generated_Source\PSoC5/Echo.c **** *  and shifting the bits appropriately. 
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 2


  31:Generated_Source\PSoC5/Echo.c **** *
  32:Generated_Source\PSoC5/Echo.c **** * The data output register controls the signal applied to the physical pin in 
  33:Generated_Source\PSoC5/Echo.c **** * conjunction with the drive mode parameter. This function avoids changing 
  34:Generated_Source\PSoC5/Echo.c **** * other bits in the port by using the appropriate method (read-modify-write or
  35:Generated_Source\PSoC5/Echo.c **** * bit banding).
  36:Generated_Source\PSoC5/Echo.c **** *
  37:Generated_Source\PSoC5/Echo.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  38:Generated_Source\PSoC5/Echo.c **** * as it is driven by the hardware signal attached to it.
  39:Generated_Source\PSoC5/Echo.c **** *
  40:Generated_Source\PSoC5/Echo.c **** * \param value
  41:Generated_Source\PSoC5/Echo.c **** *  Value to write to the component instance.
  42:Generated_Source\PSoC5/Echo.c **** *
  43:Generated_Source\PSoC5/Echo.c **** * \return 
  44:Generated_Source\PSoC5/Echo.c **** *  None 
  45:Generated_Source\PSoC5/Echo.c **** *
  46:Generated_Source\PSoC5/Echo.c **** * \sideeffect
  47:Generated_Source\PSoC5/Echo.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
  48:Generated_Source\PSoC5/Echo.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
  49:Generated_Source\PSoC5/Echo.c **** *  interrupts this function and performs writes to the Pins component data 
  50:Generated_Source\PSoC5/Echo.c **** *  register can cause corrupted port data. To avoid this issue, you should 
  51:Generated_Source\PSoC5/Echo.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
  52:Generated_Source\PSoC5/Echo.c **** *  this function.
  53:Generated_Source\PSoC5/Echo.c **** *
  54:Generated_Source\PSoC5/Echo.c **** * \funcusage
  55:Generated_Source\PSoC5/Echo.c **** *  \snippet Echo_SUT.c usage_Echo_Write
  56:Generated_Source\PSoC5/Echo.c **** *******************************************************************************/
  57:Generated_Source\PSoC5/Echo.c **** void Echo_Write(uint8 value)
  58:Generated_Source\PSoC5/Echo.c **** {
  28              		.loc 1 58 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  59:Generated_Source\PSoC5/Echo.c ****     uint8 staticBits = (Echo_DR & (uint8)(~Echo_MASK));
  34              		.loc 1 59 0
  35 0000 044A     		ldr	r2, .L2
  36 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  37 0004 03F0FE03 		and	r3, r3, #254
  38              	.LVL1:
  60:Generated_Source\PSoC5/Echo.c ****     Echo_DR = staticBits | ((uint8)(value << Echo_SHIFT) & Echo_MASK);
  39              		.loc 1 60 0
  40 0008 00F00100 		and	r0, r0, #1
  41              	.LVL2:
  42 000c 1843     		orrs	r0, r0, r3
  43 000e 1070     		strb	r0, [r2]
  44 0010 7047     		bx	lr
  45              	.L3:
  46 0012 00BF     		.align	2
  47              	.L2:
  48 0014 00510040 		.word	1073762560
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	Echo_Write, .-Echo_Write
  52              		.section	.text.Echo_SetDriveMode,"ax",%progbits
  53              		.align	2
  54              		.global	Echo_SetDriveMode
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 3


  55              		.thumb
  56              		.thumb_func
  57              		.type	Echo_SetDriveMode, %function
  58              	Echo_SetDriveMode:
  59              	.LFB1:
  61:Generated_Source\PSoC5/Echo.c **** }
  62:Generated_Source\PSoC5/Echo.c **** 
  63:Generated_Source\PSoC5/Echo.c **** 
  64:Generated_Source\PSoC5/Echo.c **** /*******************************************************************************
  65:Generated_Source\PSoC5/Echo.c **** * Function Name: Echo_SetDriveMode
  66:Generated_Source\PSoC5/Echo.c **** ****************************************************************************//**
  67:Generated_Source\PSoC5/Echo.c **** *
  68:Generated_Source\PSoC5/Echo.c **** * \brief Sets the drive mode for each of the Pins component's pins.
  69:Generated_Source\PSoC5/Echo.c **** * 
  70:Generated_Source\PSoC5/Echo.c **** * <b>Note</b> This affects all pins in the Pins component instance. Use the
  71:Generated_Source\PSoC5/Echo.c **** * Per-Pin APIs if you wish to control individual pin's drive modes.
  72:Generated_Source\PSoC5/Echo.c **** *
  73:Generated_Source\PSoC5/Echo.c **** * \param mode
  74:Generated_Source\PSoC5/Echo.c **** *  Mode for the selected signals. Valid options are documented in 
  75:Generated_Source\PSoC5/Echo.c **** *  \ref driveMode.
  76:Generated_Source\PSoC5/Echo.c **** *
  77:Generated_Source\PSoC5/Echo.c **** * \return
  78:Generated_Source\PSoC5/Echo.c **** *  None
  79:Generated_Source\PSoC5/Echo.c **** *
  80:Generated_Source\PSoC5/Echo.c **** * \sideeffect
  81:Generated_Source\PSoC5/Echo.c **** *  If you use read-modify-write operations that are not atomic, the ISR can
  82:Generated_Source\PSoC5/Echo.c **** *  cause corruption of this function. An ISR that interrupts this function 
  83:Generated_Source\PSoC5/Echo.c **** *  and performs writes to the Pins component Drive Mode registers can cause 
  84:Generated_Source\PSoC5/Echo.c **** *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  85:Generated_Source\PSoC5/Echo.c **** *  APIs (primary method) or disable interrupts around this function.
  86:Generated_Source\PSoC5/Echo.c **** *
  87:Generated_Source\PSoC5/Echo.c **** * \funcusage
  88:Generated_Source\PSoC5/Echo.c **** *  \snippet Echo_SUT.c usage_Echo_SetDriveMode
  89:Generated_Source\PSoC5/Echo.c **** *******************************************************************************/
  90:Generated_Source\PSoC5/Echo.c **** void Echo_SetDriveMode(uint8 mode)
  91:Generated_Source\PSoC5/Echo.c **** {
  60              		.loc 1 91 0
  61              		.cfi_startproc
  62              		@ args = 0, pretend = 0, frame = 0
  63              		@ frame_needed = 0, uses_anonymous_args = 0
  64              		@ link register save eliminated.
  65              	.LVL3:
  92:Generated_Source\PSoC5/Echo.c **** 	CyPins_SetPinDriveMode(Echo_0, mode);
  66              		.loc 1 92 0
  67 0000 044A     		ldr	r2, .L5
  68 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  69 0004 03F0F103 		and	r3, r3, #241
  70 0008 00F00E00 		and	r0, r0, #14
  71              	.LVL4:
  72 000c 1843     		orrs	r0, r0, r3
  73 000e 1070     		strb	r0, [r2]
  74 0010 7047     		bx	lr
  75              	.L6:
  76 0012 00BF     		.align	2
  77              	.L5:
  78 0014 00500040 		.word	1073762304
  79              		.cfi_endproc
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 4


  80              	.LFE1:
  81              		.size	Echo_SetDriveMode, .-Echo_SetDriveMode
  82              		.section	.text.Echo_Read,"ax",%progbits
  83              		.align	2
  84              		.global	Echo_Read
  85              		.thumb
  86              		.thumb_func
  87              		.type	Echo_Read, %function
  88              	Echo_Read:
  89              	.LFB2:
  93:Generated_Source\PSoC5/Echo.c **** }
  94:Generated_Source\PSoC5/Echo.c **** 
  95:Generated_Source\PSoC5/Echo.c **** 
  96:Generated_Source\PSoC5/Echo.c **** /*******************************************************************************
  97:Generated_Source\PSoC5/Echo.c **** * Function Name: Echo_Read
  98:Generated_Source\PSoC5/Echo.c **** ****************************************************************************//**
  99:Generated_Source\PSoC5/Echo.c **** *
 100:Generated_Source\PSoC5/Echo.c **** * \brief Reads the associated physical port (pin status register) and masks 
 101:Generated_Source\PSoC5/Echo.c **** *  the required bits according to the width and bit position of the component
 102:Generated_Source\PSoC5/Echo.c **** *  instance. 
 103:Generated_Source\PSoC5/Echo.c **** *
 104:Generated_Source\PSoC5/Echo.c **** * The pin's status register returns the current logic level present on the 
 105:Generated_Source\PSoC5/Echo.c **** * physical pin.
 106:Generated_Source\PSoC5/Echo.c **** *
 107:Generated_Source\PSoC5/Echo.c **** * \return 
 108:Generated_Source\PSoC5/Echo.c **** *  The current value for the pins in the component as a right justified number.
 109:Generated_Source\PSoC5/Echo.c **** *
 110:Generated_Source\PSoC5/Echo.c **** * \funcusage
 111:Generated_Source\PSoC5/Echo.c **** *  \snippet Echo_SUT.c usage_Echo_Read  
 112:Generated_Source\PSoC5/Echo.c **** *******************************************************************************/
 113:Generated_Source\PSoC5/Echo.c **** uint8 Echo_Read(void)
 114:Generated_Source\PSoC5/Echo.c **** {
  90              		.loc 1 114 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 0, uses_anonymous_args = 0
  94              		@ link register save eliminated.
 115:Generated_Source\PSoC5/Echo.c ****     return (Echo_PS & Echo_MASK) >> Echo_SHIFT;
  95              		.loc 1 115 0
  96 0000 024B     		ldr	r3, .L8
  97 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 116:Generated_Source\PSoC5/Echo.c **** }
  98              		.loc 1 116 0
  99 0004 00F00100 		and	r0, r0, #1
 100 0008 7047     		bx	lr
 101              	.L9:
 102 000a 00BF     		.align	2
 103              	.L8:
 104 000c 01510040 		.word	1073762561
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	Echo_Read, .-Echo_Read
 108              		.section	.text.Echo_ReadDataReg,"ax",%progbits
 109              		.align	2
 110              		.global	Echo_ReadDataReg
 111              		.thumb
 112              		.thumb_func
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 5


 113              		.type	Echo_ReadDataReg, %function
 114              	Echo_ReadDataReg:
 115              	.LFB3:
 117:Generated_Source\PSoC5/Echo.c **** 
 118:Generated_Source\PSoC5/Echo.c **** 
 119:Generated_Source\PSoC5/Echo.c **** /*******************************************************************************
 120:Generated_Source\PSoC5/Echo.c **** * Function Name: Echo_ReadDataReg
 121:Generated_Source\PSoC5/Echo.c **** ****************************************************************************//**
 122:Generated_Source\PSoC5/Echo.c **** *
 123:Generated_Source\PSoC5/Echo.c **** * \brief Reads the associated physical port's data output register and masks 
 124:Generated_Source\PSoC5/Echo.c **** *  the correct bits according to the width and bit position of the component 
 125:Generated_Source\PSoC5/Echo.c **** *  instance. 
 126:Generated_Source\PSoC5/Echo.c **** *
 127:Generated_Source\PSoC5/Echo.c **** * The data output register controls the signal applied to the physical pin in 
 128:Generated_Source\PSoC5/Echo.c **** * conjunction with the drive mode parameter. This is not the same as the 
 129:Generated_Source\PSoC5/Echo.c **** * preferred Echo_Read() API because the 
 130:Generated_Source\PSoC5/Echo.c **** * Echo_ReadDataReg() reads the data register instead of the status 
 131:Generated_Source\PSoC5/Echo.c **** * register. For output pins this is a useful function to determine the value 
 132:Generated_Source\PSoC5/Echo.c **** * just written to the pin.
 133:Generated_Source\PSoC5/Echo.c **** *
 134:Generated_Source\PSoC5/Echo.c **** * \return 
 135:Generated_Source\PSoC5/Echo.c **** *  The current value of the data register masked and shifted into a right 
 136:Generated_Source\PSoC5/Echo.c **** *  justified number for the component instance.
 137:Generated_Source\PSoC5/Echo.c **** *
 138:Generated_Source\PSoC5/Echo.c **** * \funcusage
 139:Generated_Source\PSoC5/Echo.c **** *  \snippet Echo_SUT.c usage_Echo_ReadDataReg 
 140:Generated_Source\PSoC5/Echo.c **** *******************************************************************************/
 141:Generated_Source\PSoC5/Echo.c **** uint8 Echo_ReadDataReg(void)
 142:Generated_Source\PSoC5/Echo.c **** {
 116              		.loc 1 142 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 143:Generated_Source\PSoC5/Echo.c ****     return (Echo_DR & Echo_MASK) >> Echo_SHIFT;
 121              		.loc 1 143 0
 122 0000 024B     		ldr	r3, .L11
 123 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 144:Generated_Source\PSoC5/Echo.c **** }
 124              		.loc 1 144 0
 125 0004 00F00100 		and	r0, r0, #1
 126 0008 7047     		bx	lr
 127              	.L12:
 128 000a 00BF     		.align	2
 129              	.L11:
 130 000c 00510040 		.word	1073762560
 131              		.cfi_endproc
 132              	.LFE3:
 133              		.size	Echo_ReadDataReg, .-Echo_ReadDataReg
 134              		.section	.text.Echo_SetInterruptMode,"ax",%progbits
 135              		.align	2
 136              		.global	Echo_SetInterruptMode
 137              		.thumb
 138              		.thumb_func
 139              		.type	Echo_SetInterruptMode, %function
 140              	Echo_SetInterruptMode:
 141              	.LFB4:
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 6


 145:Generated_Source\PSoC5/Echo.c **** 
 146:Generated_Source\PSoC5/Echo.c **** 
 147:Generated_Source\PSoC5/Echo.c **** /* If interrupt is connected for this Pins component */ 
 148:Generated_Source\PSoC5/Echo.c **** #if defined(Echo_INTSTAT) 
 149:Generated_Source\PSoC5/Echo.c **** 
 150:Generated_Source\PSoC5/Echo.c ****     /*******************************************************************************
 151:Generated_Source\PSoC5/Echo.c ****     * Function Name: Echo_SetInterruptMode
 152:Generated_Source\PSoC5/Echo.c ****     ****************************************************************************//**
 153:Generated_Source\PSoC5/Echo.c ****     *
 154:Generated_Source\PSoC5/Echo.c ****     * \brief Configures the interrupt mode for each of the Pins component's
 155:Generated_Source\PSoC5/Echo.c ****     *  pins. Alternatively you may set the interrupt mode for all the pins
 156:Generated_Source\PSoC5/Echo.c ****     *  specified in the Pins component.
 157:Generated_Source\PSoC5/Echo.c ****     *
 158:Generated_Source\PSoC5/Echo.c ****     *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 159:Generated_Source\PSoC5/Echo.c ****     *  interrupt may trigger it.
 160:Generated_Source\PSoC5/Echo.c ****     *
 161:Generated_Source\PSoC5/Echo.c ****     * \param position
 162:Generated_Source\PSoC5/Echo.c ****     *  The pin position as listed in the Pins component. You may OR these to be 
 163:Generated_Source\PSoC5/Echo.c ****     *  able to configure the interrupt mode of multiple pins within a Pins 
 164:Generated_Source\PSoC5/Echo.c ****     *  component. Or you may use Echo_INTR_ALL to configure the
 165:Generated_Source\PSoC5/Echo.c ****     *  interrupt mode of all the pins in the Pins component.       
 166:Generated_Source\PSoC5/Echo.c ****     *  - Echo_0_INTR       (First pin in the list)
 167:Generated_Source\PSoC5/Echo.c ****     *  - Echo_1_INTR       (Second pin in the list)
 168:Generated_Source\PSoC5/Echo.c ****     *  - ...
 169:Generated_Source\PSoC5/Echo.c ****     *  - Echo_INTR_ALL     (All pins in Pins component)
 170:Generated_Source\PSoC5/Echo.c ****     *
 171:Generated_Source\PSoC5/Echo.c ****     * \param mode
 172:Generated_Source\PSoC5/Echo.c ****     *  Interrupt mode for the selected pins. Valid options are documented in
 173:Generated_Source\PSoC5/Echo.c ****     *  \ref intrMode.
 174:Generated_Source\PSoC5/Echo.c ****     *
 175:Generated_Source\PSoC5/Echo.c ****     * \return 
 176:Generated_Source\PSoC5/Echo.c ****     *  None
 177:Generated_Source\PSoC5/Echo.c ****     *  
 178:Generated_Source\PSoC5/Echo.c ****     * \sideeffect
 179:Generated_Source\PSoC5/Echo.c ****     *  It is recommended that the interrupt be disabled before calling this 
 180:Generated_Source\PSoC5/Echo.c ****     *  function to avoid unintended interrupt requests. Note that the interrupt
 181:Generated_Source\PSoC5/Echo.c ****     *  type is port wide, and therefore will trigger for any enabled pin on the 
 182:Generated_Source\PSoC5/Echo.c ****     *  port.
 183:Generated_Source\PSoC5/Echo.c ****     *
 184:Generated_Source\PSoC5/Echo.c ****     * \funcusage
 185:Generated_Source\PSoC5/Echo.c ****     *  \snippet Echo_SUT.c usage_Echo_SetInterruptMode
 186:Generated_Source\PSoC5/Echo.c ****     *******************************************************************************/
 187:Generated_Source\PSoC5/Echo.c ****     void Echo_SetInterruptMode(uint16 position, uint16 mode)
 188:Generated_Source\PSoC5/Echo.c ****     {
 142              		.loc 1 188 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147              	.LVL5:
 189:Generated_Source\PSoC5/Echo.c **** 		if((position & Echo_0_INTR) != 0u) 
 148              		.loc 1 189 0
 149 0000 10F0010F 		tst	r0, #1
 150 0004 02D0     		beq	.L13
 190:Generated_Source\PSoC5/Echo.c **** 		{ 
 191:Generated_Source\PSoC5/Echo.c **** 			 Echo_0_INTTYPE_REG = (uint8)mode; 
 151              		.loc 1 191 0
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 7


 152 0006 C9B2     		uxtb	r1, r1
 153              	.LVL6:
 154 0008 014B     		ldr	r3, .L15
 155 000a 1970     		strb	r1, [r3]
 156              	.L13:
 157 000c 7047     		bx	lr
 158              	.L16:
 159 000e 00BF     		.align	2
 160              	.L15:
 161 0010 00450040 		.word	1073759488
 162              		.cfi_endproc
 163              	.LFE4:
 164              		.size	Echo_SetInterruptMode, .-Echo_SetInterruptMode
 165              		.section	.text.Echo_ClearInterrupt,"ax",%progbits
 166              		.align	2
 167              		.global	Echo_ClearInterrupt
 168              		.thumb
 169              		.thumb_func
 170              		.type	Echo_ClearInterrupt, %function
 171              	Echo_ClearInterrupt:
 172              	.LFB5:
 192:Generated_Source\PSoC5/Echo.c **** 		}
 193:Generated_Source\PSoC5/Echo.c ****     }
 194:Generated_Source\PSoC5/Echo.c ****     
 195:Generated_Source\PSoC5/Echo.c ****     
 196:Generated_Source\PSoC5/Echo.c ****     /*******************************************************************************
 197:Generated_Source\PSoC5/Echo.c ****     * Function Name: Echo_ClearInterrupt
 198:Generated_Source\PSoC5/Echo.c ****     ****************************************************************************//**
 199:Generated_Source\PSoC5/Echo.c ****     *
 200:Generated_Source\PSoC5/Echo.c ****     * \brief Clears any active interrupts attached with the component and returns 
 201:Generated_Source\PSoC5/Echo.c ****     *  the value of the interrupt status register allowing determination of which
 202:Generated_Source\PSoC5/Echo.c ****     *  pins generated an interrupt event.
 203:Generated_Source\PSoC5/Echo.c ****     *
 204:Generated_Source\PSoC5/Echo.c ****     * \return 
 205:Generated_Source\PSoC5/Echo.c ****     *  The right-shifted current value of the interrupt status register. Each pin 
 206:Generated_Source\PSoC5/Echo.c ****     *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 207:Generated_Source\PSoC5/Echo.c ****     *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 208:Generated_Source\PSoC5/Echo.c ****     *  
 209:Generated_Source\PSoC5/Echo.c ****     * \sideeffect
 210:Generated_Source\PSoC5/Echo.c ****     *  Clears all bits of the physical port's interrupt status register, not just
 211:Generated_Source\PSoC5/Echo.c ****     *  those associated with the Pins component.
 212:Generated_Source\PSoC5/Echo.c ****     *
 213:Generated_Source\PSoC5/Echo.c ****     * \funcusage
 214:Generated_Source\PSoC5/Echo.c ****     *  \snippet Echo_SUT.c usage_Echo_ClearInterrupt
 215:Generated_Source\PSoC5/Echo.c ****     *******************************************************************************/
 216:Generated_Source\PSoC5/Echo.c ****     uint8 Echo_ClearInterrupt(void)
 217:Generated_Source\PSoC5/Echo.c ****     {
 173              		.loc 1 217 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 218:Generated_Source\PSoC5/Echo.c ****         return (Echo_INTSTAT & Echo_MASK) >> Echo_SHIFT;
 178              		.loc 1 218 0
 179 0000 024B     		ldr	r3, .L18
 180 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 219:Generated_Source\PSoC5/Echo.c ****     }
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 8


 181              		.loc 1 219 0
 182 0004 00F00100 		and	r0, r0, #1
 183 0008 7047     		bx	lr
 184              	.L19:
 185 000a 00BF     		.align	2
 186              	.L18:
 187 000c 80450040 		.word	1073759616
 188              		.cfi_endproc
 189              	.LFE5:
 190              		.size	Echo_ClearInterrupt, .-Echo_ClearInterrupt
 191              		.text
 192              	.Letext0:
 193              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 194              		.section	.debug_info,"",%progbits
 195              	.Ldebug_info0:
 196 0000 6E010000 		.4byte	0x16e
 197 0004 0400     		.2byte	0x4
 198 0006 00000000 		.4byte	.Ldebug_abbrev0
 199 000a 04       		.byte	0x4
 200 000b 01       		.uleb128 0x1
 201 000c 53000000 		.4byte	.LASF24
 202 0010 0C       		.byte	0xc
 203 0011 DC010000 		.4byte	.LASF25
 204 0015 50010000 		.4byte	.LASF26
 205 0019 00000000 		.4byte	.Ldebug_ranges0+0
 206 001d 00000000 		.4byte	0
 207 0021 00000000 		.4byte	.Ldebug_line0
 208 0025 02       		.uleb128 0x2
 209 0026 01       		.byte	0x1
 210 0027 06       		.byte	0x6
 211 0028 50020000 		.4byte	.LASF0
 212 002c 02       		.uleb128 0x2
 213 002d 01       		.byte	0x1
 214 002e 08       		.byte	0x8
 215 002f 45000000 		.4byte	.LASF1
 216 0033 02       		.uleb128 0x2
 217 0034 02       		.byte	0x2
 218 0035 05       		.byte	0x5
 219 0036 0D020000 		.4byte	.LASF2
 220 003a 02       		.uleb128 0x2
 221 003b 02       		.byte	0x2
 222 003c 07       		.byte	0x7
 223 003d F8000000 		.4byte	.LASF3
 224 0041 02       		.uleb128 0x2
 225 0042 04       		.byte	0x4
 226 0043 05       		.byte	0x5
 227 0044 33020000 		.4byte	.LASF4
 228 0048 02       		.uleb128 0x2
 229 0049 04       		.byte	0x4
 230 004a 07       		.byte	0x7
 231 004b E6000000 		.4byte	.LASF5
 232 004f 02       		.uleb128 0x2
 233 0050 08       		.byte	0x8
 234 0051 05       		.byte	0x5
 235 0052 FA010000 		.4byte	.LASF6
 236 0056 02       		.uleb128 0x2
 237 0057 08       		.byte	0x8
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 9


 238 0058 07       		.byte	0x7
 239 0059 39010000 		.4byte	.LASF7
 240 005d 03       		.uleb128 0x3
 241 005e 04       		.byte	0x4
 242 005f 05       		.byte	0x5
 243 0060 696E7400 		.ascii	"int\000"
 244 0064 02       		.uleb128 0x2
 245 0065 04       		.byte	0x4
 246 0066 07       		.byte	0x7
 247 0067 22010000 		.4byte	.LASF8
 248 006b 04       		.uleb128 0x4
 249 006c 17020000 		.4byte	.LASF9
 250 0070 02       		.byte	0x2
 251 0071 E401     		.2byte	0x1e4
 252 0073 2C000000 		.4byte	0x2c
 253 0077 04       		.uleb128 0x4
 254 0078 12010000 		.4byte	.LASF10
 255 007c 02       		.byte	0x2
 256 007d E501     		.2byte	0x1e5
 257 007f 3A000000 		.4byte	0x3a
 258 0083 02       		.uleb128 0x2
 259 0084 04       		.byte	0x4
 260 0085 04       		.byte	0x4
 261 0086 3F000000 		.4byte	.LASF11
 262 008a 02       		.uleb128 0x2
 263 008b 08       		.byte	0x8
 264 008c 04       		.byte	0x4
 265 008d 0B010000 		.4byte	.LASF12
 266 0091 02       		.uleb128 0x2
 267 0092 01       		.byte	0x1
 268 0093 08       		.byte	0x8
 269 0094 08020000 		.4byte	.LASF13
 270 0098 04       		.uleb128 0x4
 271 0099 E1000000 		.4byte	.LASF14
 272 009d 02       		.byte	0x2
 273 009e 8E02     		.2byte	0x28e
 274 00a0 A4000000 		.4byte	0xa4
 275 00a4 05       		.uleb128 0x5
 276 00a5 6B000000 		.4byte	0x6b
 277 00a9 06       		.uleb128 0x6
 278 00aa 34000000 		.4byte	.LASF15
 279 00ae 01       		.byte	0x1
 280 00af 39       		.byte	0x39
 281 00b0 00000000 		.4byte	.LFB0
 282 00b4 18000000 		.4byte	.LFE0-.LFB0
 283 00b8 01       		.uleb128 0x1
 284 00b9 9C       		.byte	0x9c
 285 00ba DB000000 		.4byte	0xdb
 286 00be 07       		.uleb128 0x7
 287 00bf 12000000 		.4byte	.LASF17
 288 00c3 01       		.byte	0x1
 289 00c4 39       		.byte	0x39
 290 00c5 6B000000 		.4byte	0x6b
 291 00c9 00000000 		.4byte	.LLST0
 292 00cd 08       		.uleb128 0x8
 293 00ce 18000000 		.4byte	.LASF27
 294 00d2 01       		.byte	0x1
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 10


 295 00d3 3B       		.byte	0x3b
 296 00d4 6B000000 		.4byte	0x6b
 297 00d8 01       		.uleb128 0x1
 298 00d9 53       		.byte	0x53
 299 00da 00       		.byte	0
 300 00db 06       		.uleb128 0x6
 301 00dc 00000000 		.4byte	.LASF16
 302 00e0 01       		.byte	0x1
 303 00e1 5A       		.byte	0x5a
 304 00e2 00000000 		.4byte	.LFB1
 305 00e6 18000000 		.4byte	.LFE1-.LFB1
 306 00ea 01       		.uleb128 0x1
 307 00eb 9C       		.byte	0x9c
 308 00ec 00010000 		.4byte	0x100
 309 00f0 07       		.uleb128 0x7
 310 00f1 D7010000 		.4byte	.LASF18
 311 00f5 01       		.byte	0x1
 312 00f6 5A       		.byte	0x5a
 313 00f7 6B000000 		.4byte	0x6b
 314 00fb 21000000 		.4byte	.LLST1
 315 00ff 00       		.byte	0
 316 0100 09       		.uleb128 0x9
 317 0101 2F010000 		.4byte	.LASF19
 318 0105 01       		.byte	0x1
 319 0106 71       		.byte	0x71
 320 0107 6B000000 		.4byte	0x6b
 321 010b 00000000 		.4byte	.LFB2
 322 010f 10000000 		.4byte	.LFE2-.LFB2
 323 0113 01       		.uleb128 0x1
 324 0114 9C       		.byte	0x9c
 325 0115 09       		.uleb128 0x9
 326 0116 23000000 		.4byte	.LASF20
 327 011a 01       		.byte	0x1
 328 011b 8D       		.byte	0x8d
 329 011c 6B000000 		.4byte	0x6b
 330 0120 00000000 		.4byte	.LFB3
 331 0124 10000000 		.4byte	.LFE3-.LFB3
 332 0128 01       		.uleb128 0x1
 333 0129 9C       		.byte	0x9c
 334 012a 06       		.uleb128 0x6
 335 012b 1D020000 		.4byte	.LASF21
 336 012f 01       		.byte	0x1
 337 0130 BB       		.byte	0xbb
 338 0131 00000000 		.4byte	.LFB4
 339 0135 14000000 		.4byte	.LFE4-.LFB4
 340 0139 01       		.uleb128 0x1
 341 013a 9C       		.byte	0x9c
 342 013b 5C010000 		.4byte	0x15c
 343 013f 0A       		.uleb128 0xa
 344 0140 19010000 		.4byte	.LASF22
 345 0144 01       		.byte	0x1
 346 0145 BB       		.byte	0xbb
 347 0146 77000000 		.4byte	0x77
 348 014a 01       		.uleb128 0x1
 349 014b 50       		.byte	0x50
 350 014c 07       		.uleb128 0x7
 351 014d D7010000 		.4byte	.LASF18
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 11


 352 0151 01       		.byte	0x1
 353 0152 BB       		.byte	0xbb
 354 0153 77000000 		.4byte	0x77
 355 0157 42000000 		.4byte	.LLST2
 356 015b 00       		.byte	0
 357 015c 09       		.uleb128 0x9
 358 015d 3C020000 		.4byte	.LASF23
 359 0161 01       		.byte	0x1
 360 0162 D8       		.byte	0xd8
 361 0163 6B000000 		.4byte	0x6b
 362 0167 00000000 		.4byte	.LFB5
 363 016b 10000000 		.4byte	.LFE5-.LFB5
 364 016f 01       		.uleb128 0x1
 365 0170 9C       		.byte	0x9c
 366 0171 00       		.byte	0
 367              		.section	.debug_abbrev,"",%progbits
 368              	.Ldebug_abbrev0:
 369 0000 01       		.uleb128 0x1
 370 0001 11       		.uleb128 0x11
 371 0002 01       		.byte	0x1
 372 0003 25       		.uleb128 0x25
 373 0004 0E       		.uleb128 0xe
 374 0005 13       		.uleb128 0x13
 375 0006 0B       		.uleb128 0xb
 376 0007 03       		.uleb128 0x3
 377 0008 0E       		.uleb128 0xe
 378 0009 1B       		.uleb128 0x1b
 379 000a 0E       		.uleb128 0xe
 380 000b 55       		.uleb128 0x55
 381 000c 17       		.uleb128 0x17
 382 000d 11       		.uleb128 0x11
 383 000e 01       		.uleb128 0x1
 384 000f 10       		.uleb128 0x10
 385 0010 17       		.uleb128 0x17
 386 0011 00       		.byte	0
 387 0012 00       		.byte	0
 388 0013 02       		.uleb128 0x2
 389 0014 24       		.uleb128 0x24
 390 0015 00       		.byte	0
 391 0016 0B       		.uleb128 0xb
 392 0017 0B       		.uleb128 0xb
 393 0018 3E       		.uleb128 0x3e
 394 0019 0B       		.uleb128 0xb
 395 001a 03       		.uleb128 0x3
 396 001b 0E       		.uleb128 0xe
 397 001c 00       		.byte	0
 398 001d 00       		.byte	0
 399 001e 03       		.uleb128 0x3
 400 001f 24       		.uleb128 0x24
 401 0020 00       		.byte	0
 402 0021 0B       		.uleb128 0xb
 403 0022 0B       		.uleb128 0xb
 404 0023 3E       		.uleb128 0x3e
 405 0024 0B       		.uleb128 0xb
 406 0025 03       		.uleb128 0x3
 407 0026 08       		.uleb128 0x8
 408 0027 00       		.byte	0
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 12


 409 0028 00       		.byte	0
 410 0029 04       		.uleb128 0x4
 411 002a 16       		.uleb128 0x16
 412 002b 00       		.byte	0
 413 002c 03       		.uleb128 0x3
 414 002d 0E       		.uleb128 0xe
 415 002e 3A       		.uleb128 0x3a
 416 002f 0B       		.uleb128 0xb
 417 0030 3B       		.uleb128 0x3b
 418 0031 05       		.uleb128 0x5
 419 0032 49       		.uleb128 0x49
 420 0033 13       		.uleb128 0x13
 421 0034 00       		.byte	0
 422 0035 00       		.byte	0
 423 0036 05       		.uleb128 0x5
 424 0037 35       		.uleb128 0x35
 425 0038 00       		.byte	0
 426 0039 49       		.uleb128 0x49
 427 003a 13       		.uleb128 0x13
 428 003b 00       		.byte	0
 429 003c 00       		.byte	0
 430 003d 06       		.uleb128 0x6
 431 003e 2E       		.uleb128 0x2e
 432 003f 01       		.byte	0x1
 433 0040 3F       		.uleb128 0x3f
 434 0041 19       		.uleb128 0x19
 435 0042 03       		.uleb128 0x3
 436 0043 0E       		.uleb128 0xe
 437 0044 3A       		.uleb128 0x3a
 438 0045 0B       		.uleb128 0xb
 439 0046 3B       		.uleb128 0x3b
 440 0047 0B       		.uleb128 0xb
 441 0048 27       		.uleb128 0x27
 442 0049 19       		.uleb128 0x19
 443 004a 11       		.uleb128 0x11
 444 004b 01       		.uleb128 0x1
 445 004c 12       		.uleb128 0x12
 446 004d 06       		.uleb128 0x6
 447 004e 40       		.uleb128 0x40
 448 004f 18       		.uleb128 0x18
 449 0050 9742     		.uleb128 0x2117
 450 0052 19       		.uleb128 0x19
 451 0053 01       		.uleb128 0x1
 452 0054 13       		.uleb128 0x13
 453 0055 00       		.byte	0
 454 0056 00       		.byte	0
 455 0057 07       		.uleb128 0x7
 456 0058 05       		.uleb128 0x5
 457 0059 00       		.byte	0
 458 005a 03       		.uleb128 0x3
 459 005b 0E       		.uleb128 0xe
 460 005c 3A       		.uleb128 0x3a
 461 005d 0B       		.uleb128 0xb
 462 005e 3B       		.uleb128 0x3b
 463 005f 0B       		.uleb128 0xb
 464 0060 49       		.uleb128 0x49
 465 0061 13       		.uleb128 0x13
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 13


 466 0062 02       		.uleb128 0x2
 467 0063 17       		.uleb128 0x17
 468 0064 00       		.byte	0
 469 0065 00       		.byte	0
 470 0066 08       		.uleb128 0x8
 471 0067 34       		.uleb128 0x34
 472 0068 00       		.byte	0
 473 0069 03       		.uleb128 0x3
 474 006a 0E       		.uleb128 0xe
 475 006b 3A       		.uleb128 0x3a
 476 006c 0B       		.uleb128 0xb
 477 006d 3B       		.uleb128 0x3b
 478 006e 0B       		.uleb128 0xb
 479 006f 49       		.uleb128 0x49
 480 0070 13       		.uleb128 0x13
 481 0071 02       		.uleb128 0x2
 482 0072 18       		.uleb128 0x18
 483 0073 00       		.byte	0
 484 0074 00       		.byte	0
 485 0075 09       		.uleb128 0x9
 486 0076 2E       		.uleb128 0x2e
 487 0077 00       		.byte	0
 488 0078 3F       		.uleb128 0x3f
 489 0079 19       		.uleb128 0x19
 490 007a 03       		.uleb128 0x3
 491 007b 0E       		.uleb128 0xe
 492 007c 3A       		.uleb128 0x3a
 493 007d 0B       		.uleb128 0xb
 494 007e 3B       		.uleb128 0x3b
 495 007f 0B       		.uleb128 0xb
 496 0080 27       		.uleb128 0x27
 497 0081 19       		.uleb128 0x19
 498 0082 49       		.uleb128 0x49
 499 0083 13       		.uleb128 0x13
 500 0084 11       		.uleb128 0x11
 501 0085 01       		.uleb128 0x1
 502 0086 12       		.uleb128 0x12
 503 0087 06       		.uleb128 0x6
 504 0088 40       		.uleb128 0x40
 505 0089 18       		.uleb128 0x18
 506 008a 9742     		.uleb128 0x2117
 507 008c 19       		.uleb128 0x19
 508 008d 00       		.byte	0
 509 008e 00       		.byte	0
 510 008f 0A       		.uleb128 0xa
 511 0090 05       		.uleb128 0x5
 512 0091 00       		.byte	0
 513 0092 03       		.uleb128 0x3
 514 0093 0E       		.uleb128 0xe
 515 0094 3A       		.uleb128 0x3a
 516 0095 0B       		.uleb128 0xb
 517 0096 3B       		.uleb128 0x3b
 518 0097 0B       		.uleb128 0xb
 519 0098 49       		.uleb128 0x49
 520 0099 13       		.uleb128 0x13
 521 009a 02       		.uleb128 0x2
 522 009b 18       		.uleb128 0x18
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 14


 523 009c 00       		.byte	0
 524 009d 00       		.byte	0
 525 009e 00       		.byte	0
 526              		.section	.debug_loc,"",%progbits
 527              	.Ldebug_loc0:
 528              	.LLST0:
 529 0000 00000000 		.4byte	.LVL0
 530 0004 0C000000 		.4byte	.LVL2
 531 0008 0100     		.2byte	0x1
 532 000a 50       		.byte	0x50
 533 000b 0C000000 		.4byte	.LVL2
 534 000f 18000000 		.4byte	.LFE0
 535 0013 0400     		.2byte	0x4
 536 0015 F3       		.byte	0xf3
 537 0016 01       		.uleb128 0x1
 538 0017 50       		.byte	0x50
 539 0018 9F       		.byte	0x9f
 540 0019 00000000 		.4byte	0
 541 001d 00000000 		.4byte	0
 542              	.LLST1:
 543 0021 00000000 		.4byte	.LVL3
 544 0025 0C000000 		.4byte	.LVL4
 545 0029 0100     		.2byte	0x1
 546 002b 50       		.byte	0x50
 547 002c 0C000000 		.4byte	.LVL4
 548 0030 18000000 		.4byte	.LFE1
 549 0034 0400     		.2byte	0x4
 550 0036 F3       		.byte	0xf3
 551 0037 01       		.uleb128 0x1
 552 0038 50       		.byte	0x50
 553 0039 9F       		.byte	0x9f
 554 003a 00000000 		.4byte	0
 555 003e 00000000 		.4byte	0
 556              	.LLST2:
 557 0042 00000000 		.4byte	.LVL5
 558 0046 08000000 		.4byte	.LVL6
 559 004a 0100     		.2byte	0x1
 560 004c 51       		.byte	0x51
 561 004d 08000000 		.4byte	.LVL6
 562 0051 14000000 		.4byte	.LFE4
 563 0055 0400     		.2byte	0x4
 564 0057 F3       		.byte	0xf3
 565 0058 01       		.uleb128 0x1
 566 0059 51       		.byte	0x51
 567 005a 9F       		.byte	0x9f
 568 005b 00000000 		.4byte	0
 569 005f 00000000 		.4byte	0
 570              		.section	.debug_aranges,"",%progbits
 571 0000 44000000 		.4byte	0x44
 572 0004 0200     		.2byte	0x2
 573 0006 00000000 		.4byte	.Ldebug_info0
 574 000a 04       		.byte	0x4
 575 000b 00       		.byte	0
 576 000c 0000     		.2byte	0
 577 000e 0000     		.2byte	0
 578 0010 00000000 		.4byte	.LFB0
 579 0014 18000000 		.4byte	.LFE0-.LFB0
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 15


 580 0018 00000000 		.4byte	.LFB1
 581 001c 18000000 		.4byte	.LFE1-.LFB1
 582 0020 00000000 		.4byte	.LFB2
 583 0024 10000000 		.4byte	.LFE2-.LFB2
 584 0028 00000000 		.4byte	.LFB3
 585 002c 10000000 		.4byte	.LFE3-.LFB3
 586 0030 00000000 		.4byte	.LFB4
 587 0034 14000000 		.4byte	.LFE4-.LFB4
 588 0038 00000000 		.4byte	.LFB5
 589 003c 10000000 		.4byte	.LFE5-.LFB5
 590 0040 00000000 		.4byte	0
 591 0044 00000000 		.4byte	0
 592              		.section	.debug_ranges,"",%progbits
 593              	.Ldebug_ranges0:
 594 0000 00000000 		.4byte	.LFB0
 595 0004 18000000 		.4byte	.LFE0
 596 0008 00000000 		.4byte	.LFB1
 597 000c 18000000 		.4byte	.LFE1
 598 0010 00000000 		.4byte	.LFB2
 599 0014 10000000 		.4byte	.LFE2
 600 0018 00000000 		.4byte	.LFB3
 601 001c 10000000 		.4byte	.LFE3
 602 0020 00000000 		.4byte	.LFB4
 603 0024 14000000 		.4byte	.LFE4
 604 0028 00000000 		.4byte	.LFB5
 605 002c 10000000 		.4byte	.LFE5
 606 0030 00000000 		.4byte	0
 607 0034 00000000 		.4byte	0
 608              		.section	.debug_line,"",%progbits
 609              	.Ldebug_line0:
 610 0000 B1000000 		.section	.debug_str,"MS",%progbits,1
 610      02004100 
 610      00000201 
 610      FB0E0D00 
 610      01010101 
 611              	.LASF16:
 612 0000 4563686F 		.ascii	"Echo_SetDriveMode\000"
 612      5F536574 
 612      44726976 
 612      654D6F64 
 612      6500
 613              	.LASF17:
 614 0012 76616C75 		.ascii	"value\000"
 614      6500
 615              	.LASF27:
 616 0018 73746174 		.ascii	"staticBits\000"
 616      69634269 
 616      747300
 617              	.LASF20:
 618 0023 4563686F 		.ascii	"Echo_ReadDataReg\000"
 618      5F526561 
 618      64446174 
 618      61526567 
 618      00
 619              	.LASF15:
 620 0034 4563686F 		.ascii	"Echo_Write\000"
 620      5F577269 
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 16


 620      746500
 621              	.LASF11:
 622 003f 666C6F61 		.ascii	"float\000"
 622      7400
 623              	.LASF1:
 624 0045 756E7369 		.ascii	"unsigned char\000"
 624      676E6564 
 624      20636861 
 624      7200
 625              	.LASF24:
 626 0053 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 626      43313120 
 626      352E342E 
 626      31203230 
 626      31363036 
 627 0086 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 627      20726576 
 627      6973696F 
 627      6E203233 
 627      37373135 
 628 00b9 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 628      66756E63 
 628      74696F6E 
 628      2D736563 
 628      74696F6E 
 629              	.LASF14:
 630 00e1 72656738 		.ascii	"reg8\000"
 630      00
 631              	.LASF5:
 632 00e6 6C6F6E67 		.ascii	"long unsigned int\000"
 632      20756E73 
 632      69676E65 
 632      6420696E 
 632      7400
 633              	.LASF3:
 634 00f8 73686F72 		.ascii	"short unsigned int\000"
 634      7420756E 
 634      7369676E 
 634      65642069 
 634      6E7400
 635              	.LASF12:
 636 010b 646F7562 		.ascii	"double\000"
 636      6C6500
 637              	.LASF10:
 638 0112 75696E74 		.ascii	"uint16\000"
 638      313600
 639              	.LASF22:
 640 0119 706F7369 		.ascii	"position\000"
 640      74696F6E 
 640      00
 641              	.LASF8:
 642 0122 756E7369 		.ascii	"unsigned int\000"
 642      676E6564 
 642      20696E74 
 642      00
 643              	.LASF19:
 644 012f 4563686F 		.ascii	"Echo_Read\000"
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 17


 644      5F526561 
 644      6400
 645              	.LASF7:
 646 0139 6C6F6E67 		.ascii	"long long unsigned int\000"
 646      206C6F6E 
 646      6720756E 
 646      7369676E 
 646      65642069 
 647              	.LASF26:
 648 0150 453A5C55 		.ascii	"E:\\User folders\\Documents\\GitHub\\Pandekage-tast"
 648      73657220 
 648      666F6C64 
 648      6572735C 
 648      446F6375 
 649 017f 726F6665 		.ascii	"rofe\\Moduler\\Uimplementeret moduler\\UltralydsSen"
 649      5C4D6F64 
 649      756C6572 
 649      5C55696D 
 649      706C656D 
 650 01af 736F725C 		.ascii	"sor\\Modultest\\UltralydTest\\Test01.cydsn\000"
 650      4D6F6475 
 650      6C746573 
 650      745C556C 
 650      7472616C 
 651              	.LASF18:
 652 01d7 6D6F6465 		.ascii	"mode\000"
 652      00
 653              	.LASF25:
 654 01dc 47656E65 		.ascii	"Generated_Source\\PSoC5\\Echo.c\000"
 654      72617465 
 654      645F536F 
 654      75726365 
 654      5C50536F 
 655              	.LASF6:
 656 01fa 6C6F6E67 		.ascii	"long long int\000"
 656      206C6F6E 
 656      6720696E 
 656      7400
 657              	.LASF13:
 658 0208 63686172 		.ascii	"char\000"
 658      00
 659              	.LASF2:
 660 020d 73686F72 		.ascii	"short int\000"
 660      7420696E 
 660      7400
 661              	.LASF9:
 662 0217 75696E74 		.ascii	"uint8\000"
 662      3800
 663              	.LASF21:
 664 021d 4563686F 		.ascii	"Echo_SetInterruptMode\000"
 664      5F536574 
 664      496E7465 
 664      72727570 
 664      744D6F64 
 665              	.LASF4:
 666 0233 6C6F6E67 		.ascii	"long int\000"
 666      20696E74 
ARM GAS  C:\Users\oskar\AppData\Local\Temp\ccTwYJYa.s 			page 18


 666      00
 667              	.LASF23:
 668 023c 4563686F 		.ascii	"Echo_ClearInterrupt\000"
 668      5F436C65 
 668      6172496E 
 668      74657272 
 668      75707400 
 669              	.LASF0:
 670 0250 7369676E 		.ascii	"signed char\000"
 670      65642063 
 670      68617200 
 671              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran

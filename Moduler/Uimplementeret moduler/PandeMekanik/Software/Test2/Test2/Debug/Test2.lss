
Test2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000dd4  00000e68  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dd4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002b  00800102  00800102  00000e6a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000edc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001018  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000966  00000000  00000000  00001fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ae1  00000000  00000000  0000293a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  0000341c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000083a  00000000  00000000  000036d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005d4  00000000  00000000  00003f0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  000044de  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 06 01 	jmp	0x20c	; 0x20c <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ed       	ldi	r30, 0xD4	; 212
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ad 32       	cpi	r26, 0x2D	; 45
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 a4 04 	call	0x948	; 0x948 <main>
  9e:	0c 94 e8 06 	jmp	0xdd0	; 0xdd0 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_SLAVE_sendBit>:

void startTimePan1(){
	
	//Set internal flag
	pan1_cooking_time = 0;
	pan1Free = false;
  a6:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <I2C_SLAVE_dataReady>
  aa:	91 30       	cpi	r25, 0x01	; 1
  ac:	41 f4       	brne	.+16     	; 0xbe <I2C_SLAVE_sendBit+0x18>
  ae:	90 91 24 01 	lds	r25, 0x0124	; 0x800124 <I2C_SLAVE_toSend>
  b2:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <I2C_SLAVE_tempSave>
  b6:	92 e0       	ldi	r25, 0x02	; 2
  b8:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <I2C_SLAVE_dataReady>
  bc:	03 c0       	rjmp	.+6      	; 0xc4 <I2C_SLAVE_sendBit+0x1e>
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	90 93 22 01 	sts	0x0122, r25	; 0x800122 <I2C_SLAVE_dataReady>
  c4:	87 95       	ror	r24
  c6:	88 27       	eor	r24, r24
  c8:	87 95       	ror	r24
  ca:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <I2C_SLAVE_toSend>
  ce:	87 e0       	ldi	r24, 0x07	; 7
  d0:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <I2C_SLAVE_haveSended>
  d4:	08 95       	ret

000000d6 <I2C_SLAVE_beginSend>:
  d6:	e9 e6       	ldi	r30, 0x69	; 105
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	80 83       	st	Z, r24
  e0:	80 81       	ld	r24, Z
  e2:	8e 7f       	andi	r24, 0xFE	; 254
  e4:	80 83       	st	Z, r24
  e6:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_dataReady>
  ea:	82 30       	cpi	r24, 0x02	; 2
  ec:	21 f4       	brne	.+8      	; 0xf6 <I2C_SLAVE_beginSend+0x20>
  ee:	83 e0       	ldi	r24, 0x03	; 3
  f0:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <I2C_SLAVE_dataReady>
  f4:	08 95       	ret
  f6:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <I2C_SLAVE_dataReady>
  fa:	08 95       	ret

000000fc <setPWMLevel>:
  fc:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <curr_pan>
 100:	22 23       	and	r18, r18
 102:	f1 f0       	breq	.+60     	; 0x140 <setPWMLevel+0x44>
 104:	85 36       	cpi	r24, 0x65	; 101
 106:	91 05       	cpc	r25, r1
 108:	70 f4       	brcc	.+28     	; 0x126 <setPWMLevel+0x2a>
 10a:	dc 01       	movw	r26, r24
 10c:	20 e9       	ldi	r18, 0x90	; 144
 10e:	3d ef       	ldi	r19, 0xFD	; 253
 110:	4f ef       	ldi	r20, 0xFF	; 255
 112:	5f ef       	ldi	r21, 0xFF	; 255
 114:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__muluhisi3>
 118:	6d 5d       	subi	r22, 0xDD	; 221
 11a:	7b 40       	sbci	r23, 0x0B	; 11
 11c:	8f 4f       	sbci	r24, 0xFF	; 255
 11e:	9f 4f       	sbci	r25, 0xFF	; 255
 120:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
 124:	04 c0       	rjmp	.+8      	; 0x12e <setPWMLevel+0x32>
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	86 ec       	ldi	r24, 0xC6	; 198
 12c:	92 e4       	ldi	r25, 0x42	; 66
 12e:	0e 94 45 05 	call	0xa8a	; 0xa8a <ceil>
 132:	0e 94 63 05 	call	0xac6	; 0xac6 <__fixunssfsi>
 136:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 13a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
 13e:	08 95       	ret
 140:	85 36       	cpi	r24, 0x65	; 101
 142:	91 05       	cpc	r25, r1
 144:	70 f4       	brcc	.+28     	; 0x162 <setPWMLevel+0x66>
 146:	dc 01       	movw	r26, r24
 148:	20 e9       	ldi	r18, 0x90	; 144
 14a:	3d ef       	ldi	r19, 0xFD	; 253
 14c:	4f ef       	ldi	r20, 0xFF	; 255
 14e:	5f ef       	ldi	r21, 0xFF	; 255
 150:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__muluhisi3>
 154:	6d 5d       	subi	r22, 0xDD	; 221
 156:	7b 40       	sbci	r23, 0x0B	; 11
 158:	8f 4f       	sbci	r24, 0xFF	; 255
 15a:	9f 4f       	sbci	r25, 0xFF	; 255
 15c:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
 160:	04 c0       	rjmp	.+8      	; 0x16a <setPWMLevel+0x6e>
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	86 ec       	ldi	r24, 0xC6	; 198
 168:	92 e4       	ldi	r25, 0x42	; 66
 16a:	0e 94 45 05 	call	0xa8a	; 0xa8a <ceil>
 16e:	0e 94 63 05 	call	0xac6	; 0xac6 <__fixunssfsi>
 172:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 176:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
 17a:	08 95       	ret

0000017c <setMotorPWM>:
 17c:	61 11       	cpse	r22, r1
 17e:	18 c0       	rjmp	.+48     	; 0x1b0 <setMotorPWM+0x34>
 180:	68 2f       	mov	r22, r24
 182:	70 e0       	ldi	r23, 0x00	; 0
 184:	66 0f       	add	r22, r22
 186:	77 1f       	adc	r23, r23
 188:	07 2e       	mov	r0, r23
 18a:	00 0c       	add	r0, r0
 18c:	88 0b       	sbc	r24, r24
 18e:	99 0b       	sbc	r25, r25
 190:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
 194:	0e 94 45 05 	call	0xa8a	; 0xa8a <ceil>
 198:	9b 01       	movw	r18, r22
 19a:	ac 01       	movw	r20, r24
 19c:	60 e0       	ldi	r22, 0x00	; 0
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	8f e7       	ldi	r24, 0x7F	; 127
 1a2:	93 e4       	ldi	r25, 0x43	; 67
 1a4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__subsf3>
 1a8:	0e 94 63 05 	call	0xac6	; 0xac6 <__fixunssfsi>
 1ac:	67 bd       	out	0x27, r22	; 39
 1ae:	08 95       	ret
 1b0:	68 2f       	mov	r22, r24
 1b2:	70 e0       	ldi	r23, 0x00	; 0
 1b4:	66 0f       	add	r22, r22
 1b6:	77 1f       	adc	r23, r23
 1b8:	07 2e       	mov	r0, r23
 1ba:	00 0c       	add	r0, r0
 1bc:	88 0b       	sbc	r24, r24
 1be:	99 0b       	sbc	r25, r25
 1c0:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
 1c4:	0e 94 45 05 	call	0xa8a	; 0xa8a <ceil>
 1c8:	9b 01       	movw	r18, r22
 1ca:	ac 01       	movw	r20, r24
 1cc:	60 e0       	ldi	r22, 0x00	; 0
 1ce:	70 e0       	ldi	r23, 0x00	; 0
 1d0:	8f e7       	ldi	r24, 0x7F	; 127
 1d2:	93 e4       	ldi	r25, 0x43	; 67
 1d4:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__subsf3>
 1d8:	0e 94 63 05 	call	0xac6	; 0xac6 <__fixunssfsi>
 1dc:	68 bd       	out	0x28, r22	; 40
 1de:	08 95       	ret

000001e0 <__vector_3>:
 1e0:	1f 92       	push	r1
 1e2:	0f 92       	push	r0
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	0f 92       	push	r0
 1e8:	11 24       	eor	r1, r1
 1ea:	8f 93       	push	r24
 1ec:	9f 93       	push	r25
 1ee:	18 9b       	sbis	0x03, 0	; 3
 1f0:	06 c0       	rjmp	.+12     	; 0x1fe <__vector_3+0x1e>
 1f2:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <heat_on_ctrl>
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	89 27       	eor	r24, r25
 1fa:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <heat_on_ctrl>
 1fe:	9f 91       	pop	r25
 200:	8f 91       	pop	r24
 202:	0f 90       	pop	r0
 204:	0f be       	out	0x3f, r0	; 63
 206:	0f 90       	pop	r0
 208:	1f 90       	pop	r1
 20a:	18 95       	reti

0000020c <__vector_21>:
 20c:	1f 92       	push	r1
 20e:	0f 92       	push	r0
 210:	0f b6       	in	r0, 0x3f	; 63
 212:	0f 92       	push	r0
 214:	11 24       	eor	r1, r1
 216:	8f 92       	push	r8
 218:	9f 92       	push	r9
 21a:	af 92       	push	r10
 21c:	bf 92       	push	r11
 21e:	cf 92       	push	r12
 220:	df 92       	push	r13
 222:	ef 92       	push	r14
 224:	ff 92       	push	r15
 226:	2f 93       	push	r18
 228:	3f 93       	push	r19
 22a:	4f 93       	push	r20
 22c:	5f 93       	push	r21
 22e:	6f 93       	push	r22
 230:	7f 93       	push	r23
 232:	8f 93       	push	r24
 234:	9f 93       	push	r25
 236:	af 93       	push	r26
 238:	bf 93       	push	r27
 23a:	ef 93       	push	r30
 23c:	ff 93       	push	r31
 23e:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 242:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 246:	83 70       	andi	r24, 0x03	; 3
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	98 2f       	mov	r25, r24
 24c:	88 27       	eor	r24, r24
 24e:	82 0f       	add	r24, r18
 250:	91 1d       	adc	r25, r1
 252:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <curr_pan>
 256:	21 11       	cpse	r18, r1
 258:	0d c0       	rjmp	.+26     	; 0x274 <__vector_21+0x68>
 25a:	9c 01       	movw	r18, r24
 25c:	22 5a       	subi	r18, 0xA2	; 162
 25e:	33 40       	sbci	r19, 0x03	; 3
 260:	2f 31       	cpi	r18, 0x1F	; 31
 262:	31 05       	cpc	r19, r1
 264:	20 f4       	brcc	.+8      	; 0x26e <__vector_21+0x62>
 266:	21 e0       	ldi	r18, 0x01	; 1
 268:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <heat_ok_pan1>
 26c:	0f c0       	rjmp	.+30     	; 0x28c <__vector_21+0x80>
 26e:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <heat_ok_pan1>
 272:	0c c0       	rjmp	.+24     	; 0x28c <__vector_21+0x80>
 274:	9c 01       	movw	r18, r24
 276:	22 5a       	subi	r18, 0xA2	; 162
 278:	33 40       	sbci	r19, 0x03	; 3
 27a:	2f 31       	cpi	r18, 0x1F	; 31
 27c:	31 05       	cpc	r19, r1
 27e:	20 f4       	brcc	.+8      	; 0x288 <__vector_21+0x7c>
 280:	21 e0       	ldi	r18, 0x01	; 1
 282:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <heat_ok_pan2>
 286:	02 c0       	rjmp	.+4      	; 0x28c <__vector_21+0x80>
 288:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <heat_ok_pan2>
 28c:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <heat_ok_pan1>
 290:	22 23       	and	r18, r18
 292:	19 f0       	breq	.+6      	; 0x29a <__vector_21+0x8e>
 294:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <heat_ok_pan2>
 298:	02 c0       	rjmp	.+4      	; 0x29e <__vector_21+0x92>
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	21 70       	andi	r18, 0x01	; 1
 2a0:	20 93 07 01 	sts	0x0107, r18	; 0x800107 <heat_ok>
 2a4:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <heat_on_ctrl>
 2a8:	21 11       	cpse	r18, r1
 2aa:	0d c0       	rjmp	.+26     	; 0x2c6 <__vector_21+0xba>
 2ac:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <integral>
 2b0:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <integral+0x1>
 2b4:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <integral+0x2>
 2b8:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <integral+0x3>
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	0e 94 7e 00 	call	0xfc	; 0xfc <setPWMLevel>
 2c4:	4e c0       	rjmp	.+156    	; 0x362 <__vector_21+0x156>
 2c6:	61 eb       	ldi	r22, 0xB1	; 177
 2c8:	73 e0       	ldi	r23, 0x03	; 3
 2ca:	68 1b       	sub	r22, r24
 2cc:	79 0b       	sbc	r23, r25
 2ce:	07 2e       	mov	r0, r23
 2d0:	00 0c       	add	r0, r0
 2d2:	88 0b       	sbc	r24, r24
 2d4:	99 0b       	sbc	r25, r25
 2d6:	0e 94 94 05 	call	0xb28	; 0xb28 <__floatsisf>
 2da:	6b 01       	movw	r12, r22
 2dc:	7c 01       	movw	r14, r24
 2de:	80 90 28 01 	lds	r8, 0x0128	; 0x800128 <integral>
 2e2:	90 90 29 01 	lds	r9, 0x0129	; 0x800129 <integral+0x1>
 2e6:	a0 90 2a 01 	lds	r10, 0x012A	; 0x80012a <integral+0x2>
 2ea:	b0 90 2b 01 	lds	r11, 0x012B	; 0x80012b <integral+0x3>
 2ee:	20 e0       	ldi	r18, 0x00	; 0
 2f0:	30 e0       	ldi	r19, 0x00	; 0
 2f2:	a9 01       	movw	r20, r18
 2f4:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__mulsf3>
 2f8:	a5 01       	movw	r20, r10
 2fa:	94 01       	movw	r18, r8
 2fc:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__addsf3>
 300:	60 93 28 01 	sts	0x0128, r22	; 0x800128 <integral>
 304:	70 93 29 01 	sts	0x0129, r23	; 0x800129 <integral+0x1>
 308:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <integral+0x2>
 30c:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <integral+0x3>
 310:	80 90 28 01 	lds	r8, 0x0128	; 0x800128 <integral>
 314:	90 90 29 01 	lds	r9, 0x0129	; 0x800129 <integral+0x1>
 318:	a0 90 2a 01 	lds	r10, 0x012A	; 0x80012a <integral+0x2>
 31c:	b0 90 2b 01 	lds	r11, 0x012B	; 0x80012b <integral+0x3>
 320:	25 ec       	ldi	r18, 0xC5	; 197
 322:	30 e2       	ldi	r19, 0x20	; 32
 324:	40 e8       	ldi	r20, 0x80	; 128
 326:	5f e3       	ldi	r21, 0x3F	; 63
 328:	c7 01       	movw	r24, r14
 32a:	b6 01       	movw	r22, r12
 32c:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__mulsf3>
 330:	6b 01       	movw	r12, r22
 332:	7c 01       	movw	r14, r24
 334:	2f e6       	ldi	r18, 0x6F	; 111
 336:	32 e1       	ldi	r19, 0x12	; 18
 338:	43 e8       	ldi	r20, 0x83	; 131
 33a:	5a e3       	ldi	r21, 0x3A	; 58
 33c:	c5 01       	movw	r24, r10
 33e:	b4 01       	movw	r22, r8
 340:	0e 94 61 06 	call	0xcc2	; 0xcc2 <__mulsf3>
 344:	9b 01       	movw	r18, r22
 346:	ac 01       	movw	r20, r24
 348:	c7 01       	movw	r24, r14
 34a:	b6 01       	movw	r22, r12
 34c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__addsf3>
 350:	0e 94 5c 05 	call	0xab8	; 0xab8 <__fixsfsi>
 354:	cb 01       	movw	r24, r22
 356:	99 23       	and	r25, r25
 358:	14 f4       	brge	.+4      	; 0x35e <__vector_21+0x152>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 7e 00 	call	0xfc	; 0xfc <setPWMLevel>
 362:	90 91 2c 01 	lds	r25, 0x012C	; 0x80012c <curr_pan>
 366:	81 e0       	ldi	r24, 0x01	; 1
 368:	98 27       	eor	r25, r24
 36a:	90 93 2c 01 	sts	0x012C, r25	; 0x80012c <curr_pan>
 36e:	ec e7       	ldi	r30, 0x7C	; 124
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	90 81       	ld	r25, Z
 374:	89 27       	eor	r24, r25
 376:	80 83       	st	Z, r24
 378:	ea e7       	ldi	r30, 0x7A	; 122
 37a:	f0 e0       	ldi	r31, 0x00	; 0
 37c:	80 81       	ld	r24, Z
 37e:	80 64       	ori	r24, 0x40	; 64
 380:	80 83       	st	Z, r24
 382:	ff 91       	pop	r31
 384:	ef 91       	pop	r30
 386:	bf 91       	pop	r27
 388:	af 91       	pop	r26
 38a:	9f 91       	pop	r25
 38c:	8f 91       	pop	r24
 38e:	7f 91       	pop	r23
 390:	6f 91       	pop	r22
 392:	5f 91       	pop	r21
 394:	4f 91       	pop	r20
 396:	3f 91       	pop	r19
 398:	2f 91       	pop	r18
 39a:	ff 90       	pop	r15
 39c:	ef 90       	pop	r14
 39e:	df 90       	pop	r13
 3a0:	cf 90       	pop	r12
 3a2:	bf 90       	pop	r11
 3a4:	af 90       	pop	r10
 3a6:	9f 90       	pop	r9
 3a8:	8f 90       	pop	r8
 3aa:	0f 90       	pop	r0
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	0f 90       	pop	r0
 3b0:	1f 90       	pop	r1
 3b2:	18 95       	reti

000003b4 <__vector_1>:
 3b4:	1f 92       	push	r1
 3b6:	0f 92       	push	r0
 3b8:	0f b6       	in	r0, 0x3f	; 63
 3ba:	0f 92       	push	r0
 3bc:	11 24       	eor	r1, r1
 3be:	2f 93       	push	r18
 3c0:	3f 93       	push	r19
 3c2:	4f 93       	push	r20
 3c4:	5f 93       	push	r21
 3c6:	6f 93       	push	r22
 3c8:	7f 93       	push	r23
 3ca:	8f 93       	push	r24
 3cc:	9f 93       	push	r25
 3ce:	af 93       	push	r26
 3d0:	bf 93       	push	r27
 3d2:	ef 93       	push	r30
 3d4:	ff 93       	push	r31
 3d6:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <I2C_SLAVE_startRecived>
 3da:	88 23       	and	r24, r24
 3dc:	09 f4       	brne	.+2      	; 0x3e0 <__vector_1+0x2c>
 3de:	55 c1       	rjmp	.+682    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 3e0:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 3e4:	83 70       	andi	r24, 0x03	; 3
 3e6:	83 30       	cpi	r24, 0x03	; 3
 3e8:	09 f0       	breq	.+2      	; 0x3ec <__vector_1+0x38>
 3ea:	af c0       	rjmp	.+350    	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 3ec:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <I2C_SLAVE_haveSended>
 3f0:	88 30       	cpi	r24, 0x08	; 8
 3f2:	40 f0       	brcs	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3f4:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <I2C_SLAVE_haveSended>
 3f8:	8a b1       	in	r24, 0x0a	; 10
 3fa:	8b 7e       	andi	r24, 0xEB	; 235
 3fc:	8a b9       	out	0x0a, r24	; 10
 3fe:	8b b1       	in	r24, 0x0b	; 11
 400:	84 61       	ori	r24, 0x14	; 20
 402:	8b b9       	out	0x0b, r24	; 11
 404:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <I2C_SLAVE_recevedBits>
 408:	87 30       	cpi	r24, 0x07	; 7
 40a:	20 f5       	brcc	.+72     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 40c:	66 e0       	ldi	r22, 0x06	; 6
 40e:	70 e0       	ldi	r23, 0x00	; 0
 410:	68 1b       	sub	r22, r24
 412:	71 09       	sbc	r23, r1
 414:	21 e0       	ldi	r18, 0x01	; 1
 416:	30 e0       	ldi	r19, 0x00	; 0
 418:	a9 01       	movw	r20, r18
 41a:	06 2e       	mov	r0, r22
 41c:	02 c0       	rjmp	.+4      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41e:	44 0f       	add	r20, r20
 420:	55 1f       	adc	r21, r21
 422:	0a 94       	dec	r0
 424:	e2 f7       	brpl	.-8      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 426:	99 b1       	in	r25, 0x09	; 9
 428:	54 2f       	mov	r21, r20
 42a:	50 95       	com	r21
 42c:	20 91 26 01 	lds	r18, 0x0126	; 0x800126 <I2C_SLAVE_recevedAddr>
 430:	52 23       	and	r21, r18
 432:	92 95       	swap	r25
 434:	9f 70       	andi	r25, 0x0F	; 15
 436:	29 2f       	mov	r18, r25
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	02 c0       	rjmp	.+4      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43c:	22 0f       	add	r18, r18
 43e:	33 1f       	adc	r19, r19
 440:	6a 95       	dec	r22
 442:	e2 f7       	brpl	.-8      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 444:	24 23       	and	r18, r20
 446:	25 0f       	add	r18, r21
 448:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <I2C_SLAVE_recevedAddr>
 44c:	8f 5f       	subi	r24, 0xFF	; 255
 44e:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <I2C_SLAVE_recevedBits>
 452:	1b c1       	rjmp	.+566    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 454:	90 91 26 01 	lds	r25, 0x0126	; 0x800126 <I2C_SLAVE_recevedAddr>
 458:	90 37       	cpi	r25, 0x70	; 112
 45a:	09 f0       	breq	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45c:	16 c1       	rjmp	.+556    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 45e:	88 30       	cpi	r24, 0x08	; 8
 460:	b8 f4       	brcc	.+46     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 462:	8f 5f       	subi	r24, 0xFF	; 255
 464:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <I2C_SLAVE_recevedBits>
 468:	89 b1       	in	r24, 0x09	; 9
 46a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <I2C_SLAVE_shouldWrite>
 46e:	9e 7f       	andi	r25, 0xFE	; 254
 470:	82 95       	swap	r24
 472:	81 70       	andi	r24, 0x01	; 1
 474:	89 0f       	add	r24, r25
 476:	80 93 27 01 	sts	0x0127, r24	; 0x800127 <I2C_SLAVE_shouldWrite>
 47a:	88 23       	and	r24, r24
 47c:	19 f0       	breq	.+6      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47e:	81 e0       	ldi	r24, 0x01	; 1
 480:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <I2C_SLAVE_beginHold>
 484:	80 e0       	ldi	r24, 0x00	; 0
 486:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_SLAVE_sendBit>
 48a:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_SLAVE_beginSend>
 48e:	fd c0       	rjmp	.+506    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 490:	81 31       	cpi	r24, 0x11	; 17
 492:	08 f0       	brcs	.+2      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 494:	fa c0       	rjmp	.+500    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 496:	6f e0       	ldi	r22, 0x0F	; 15
 498:	70 e0       	ldi	r23, 0x00	; 0
 49a:	68 1b       	sub	r22, r24
 49c:	71 09       	sbc	r23, r1
 49e:	21 e0       	ldi	r18, 0x01	; 1
 4a0:	30 e0       	ldi	r19, 0x00	; 0
 4a2:	a9 01       	movw	r20, r18
 4a4:	06 2e       	mov	r0, r22
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a8:	44 0f       	add	r20, r20
 4aa:	55 1f       	adc	r21, r21
 4ac:	0a 94       	dec	r0
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 4b0:	99 b1       	in	r25, 0x09	; 9
 4b2:	54 2f       	mov	r21, r20
 4b4:	50 95       	com	r21
 4b6:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <I2C_SLAVE_recevedData>
 4ba:	52 23       	and	r21, r18
 4bc:	92 95       	swap	r25
 4be:	9f 70       	andi	r25, 0x0F	; 15
 4c0:	29 2f       	mov	r18, r25
 4c2:	30 e0       	ldi	r19, 0x00	; 0
 4c4:	02 c0       	rjmp	.+4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c6:	22 0f       	add	r18, r18
 4c8:	33 1f       	adc	r19, r19
 4ca:	6a 95       	dec	r22
 4cc:	e2 f7       	brpl	.-8      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ce:	24 23       	and	r18, r20
 4d0:	25 0f       	add	r18, r21
 4d2:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <I2C_SLAVE_recevedData>
 4d6:	8f 5f       	subi	r24, 0xFF	; 255
 4d8:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <I2C_SLAVE_recevedBits>
 4dc:	80 31       	cpi	r24, 0x10	; 16
 4de:	09 f0       	breq	.+2      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4e0:	d4 c0       	rjmp	.+424    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 4e2:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_SLAVE_full>
 4e6:	88 23       	and	r24, r24
 4e8:	69 f0       	breq	.+26     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ea:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_SLAVE_first>
 4ee:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_SLAVE_first>
 4f2:	8f 5f       	subi	r24, 0xFF	; 255
 4f4:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <I2C_SLAVE_first>
 4f8:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_SLAVE_first>
 4fc:	8a 30       	cpi	r24, 0x0A	; 10
 4fe:	10 f0       	brcs	.+4      	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 500:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <I2C_SLAVE_first>
 504:	e0 91 1b 01 	lds	r30, 0x011B	; 0x80011b <I2C_SLAVE_last>
 508:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <I2C_SLAVE_last>
 50c:	8f 5f       	subi	r24, 0xFF	; 255
 50e:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <I2C_SLAVE_last>
 512:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <I2C_SLAVE_last>
 516:	8a 30       	cpi	r24, 0x0A	; 10
 518:	10 f0       	brcs	.+4      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 51a:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <I2C_SLAVE_last>
 51e:	f0 e0       	ldi	r31, 0x00	; 0
 520:	e0 5f       	subi	r30, 0xF0	; 240
 522:	fe 4f       	sbci	r31, 0xFE	; 254
 524:	20 83       	st	Z, r18
 526:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <I2C_SLAVE_last>
 52a:	80 91 1c 01 	lds	r24, 0x011C	; 0x80011c <I2C_SLAVE_first>
 52e:	98 13       	cpse	r25, r24
 530:	03 c0       	rjmp	.+6      	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 532:	81 e0       	ldi	r24, 0x01	; 1
 534:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_SLAVE_full>
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_SLAVE_sendBit>
 53e:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_SLAVE_beginSend>
 542:	88 e0       	ldi	r24, 0x08	; 8
 544:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <I2C_SLAVE_recevedBits>
 548:	a0 c0       	rjmp	.+320    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 54a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__TEXT_REGION_LENGTH__+0x7e0069>
 54e:	83 70       	andi	r24, 0x03	; 3
 550:	82 30       	cpi	r24, 0x02	; 2
 552:	09 f0       	breq	.+2      	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 554:	9a c0       	rjmp	.+308    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 556:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <I2C_SLAVE_haveSended>
 55a:	38 30       	cpi	r19, 0x08	; 8
 55c:	08 f4       	brcc	.+2      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55e:	5d c0       	rjmp	.+186    	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 560:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_dataReady>
 564:	82 50       	subi	r24, 0x02	; 2
 566:	82 30       	cpi	r24, 0x02	; 2
 568:	c8 f5       	brcc	.+114    	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <I2C_SLAVE_dataReady>
 570:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <I2C_SLAVE_tempSave>
 574:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <I2C_SLAVE_toSend>
 578:	80 91 27 01 	lds	r24, 0x0127	; 0x800127 <I2C_SLAVE_shouldWrite>
 57c:	88 23       	and	r24, r24
 57e:	59 f1       	breq	.+86     	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <I2C_SLAVE_haveSended>
 586:	2a b1       	in	r18, 0x0a	; 10
 588:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_SLAVE_toSend>
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	80 95       	com	r24
 590:	90 95       	com	r25
 592:	88 0f       	add	r24, r24
 594:	89 2f       	mov	r24, r25
 596:	88 1f       	adc	r24, r24
 598:	99 0b       	sbc	r25, r25
 59a:	82 95       	swap	r24
 59c:	92 95       	swap	r25
 59e:	90 7f       	andi	r25, 0xF0	; 240
 5a0:	98 27       	eor	r25, r24
 5a2:	80 7f       	andi	r24, 0xF0	; 240
 5a4:	98 27       	eor	r25, r24
 5a6:	80 71       	andi	r24, 0x10	; 16
 5a8:	92 2f       	mov	r25, r18
 5aa:	9f 7e       	andi	r25, 0xEF	; 239
 5ac:	89 0f       	add	r24, r25
 5ae:	8a b9       	out	0x0a, r24	; 10
 5b0:	2b b1       	in	r18, 0x0b	; 11
 5b2:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_SLAVE_toSend>
 5b6:	88 1f       	adc	r24, r24
 5b8:	88 27       	eor	r24, r24
 5ba:	88 1f       	adc	r24, r24
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	82 95       	swap	r24
 5c0:	92 95       	swap	r25
 5c2:	90 7f       	andi	r25, 0xF0	; 240
 5c4:	98 27       	eor	r25, r24
 5c6:	80 7f       	andi	r24, 0xF0	; 240
 5c8:	98 27       	eor	r25, r24
 5ca:	80 71       	andi	r24, 0x10	; 16
 5cc:	92 2f       	mov	r25, r18
 5ce:	9f 7e       	andi	r25, 0xEF	; 239
 5d0:	89 0f       	add	r24, r25
 5d2:	8b b9       	out	0x0b, r24	; 11
 5d4:	07 c0       	rjmp	.+14     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d6:	54 98       	cbi	0x0a, 4	; 10
 5d8:	5c 9a       	sbi	0x0b, 4	; 11
 5da:	04 c0       	rjmp	.+8      	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5dc:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <I2C_SLAVE_dataReady>
 5e0:	54 98       	cbi	0x0a, 4	; 10
 5e2:	5c 9a       	sbi	0x0b, 4	; 11
 5e4:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <I2C_SLAVE_beginHold>
 5e8:	88 23       	and	r24, r24
 5ea:	71 f0       	breq	.+28     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5ec:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_dataReady>
 5f0:	81 50       	subi	r24, 0x01	; 1
 5f2:	82 30       	cpi	r24, 0x02	; 2
 5f4:	18 f4       	brcc	.+6      	; 0x5fc <__LOCK_REGION_LENGTH__+0x1fc>
 5f6:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <I2C_SLAVE_beginHold>
 5fa:	47 c0       	rjmp	.+142    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 5fc:	81 e0       	ldi	r24, 0x01	; 1
 5fe:	80 93 1e 01 	sts	0x011E, r24	; 0x80011e <I2C_SLAVE_canSend>
 602:	52 9a       	sbi	0x0a, 2	; 10
 604:	5a 98       	cbi	0x0b, 2	; 11
 606:	41 c0       	rjmp	.+130    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 608:	e9 e6       	ldi	r30, 0x69	; 105
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	80 81       	ld	r24, Z
 60e:	82 60       	ori	r24, 0x02	; 2
 610:	80 83       	st	Z, r24
 612:	80 81       	ld	r24, Z
 614:	81 60       	ori	r24, 0x01	; 1
 616:	80 83       	st	Z, r24
 618:	38 c0       	rjmp	.+112    	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 61a:	2a b1       	in	r18, 0x0a	; 10
 61c:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_SLAVE_toSend>
 620:	90 e0       	ldi	r25, 0x00	; 0
 622:	80 95       	com	r24
 624:	90 95       	com	r25
 626:	47 e0       	ldi	r20, 0x07	; 7
 628:	50 e0       	ldi	r21, 0x00	; 0
 62a:	ba 01       	movw	r22, r20
 62c:	63 1b       	sub	r22, r19
 62e:	71 09       	sbc	r23, r1
 630:	02 c0       	rjmp	.+4      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 632:	95 95       	asr	r25
 634:	87 95       	ror	r24
 636:	6a 95       	dec	r22
 638:	e2 f7       	brpl	.-8      	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 63a:	82 95       	swap	r24
 63c:	92 95       	swap	r25
 63e:	90 7f       	andi	r25, 0xF0	; 240
 640:	98 27       	eor	r25, r24
 642:	80 7f       	andi	r24, 0xF0	; 240
 644:	98 27       	eor	r25, r24
 646:	80 71       	andi	r24, 0x10	; 16
 648:	92 2f       	mov	r25, r18
 64a:	9f 7e       	andi	r25, 0xEF	; 239
 64c:	89 0f       	add	r24, r25
 64e:	8a b9       	out	0x0a, r24	; 10
 650:	2b b1       	in	r18, 0x0b	; 11
 652:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <I2C_SLAVE_toSend>
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	30 91 21 01 	lds	r19, 0x0121	; 0x800121 <I2C_SLAVE_haveSended>
 65c:	43 1b       	sub	r20, r19
 65e:	51 09       	sbc	r21, r1
 660:	02 c0       	rjmp	.+4      	; 0x666 <__LOCK_REGION_LENGTH__+0x266>
 662:	95 95       	asr	r25
 664:	87 95       	ror	r24
 666:	4a 95       	dec	r20
 668:	e2 f7       	brpl	.-8      	; 0x662 <__LOCK_REGION_LENGTH__+0x262>
 66a:	82 95       	swap	r24
 66c:	92 95       	swap	r25
 66e:	90 7f       	andi	r25, 0xF0	; 240
 670:	98 27       	eor	r25, r24
 672:	80 7f       	andi	r24, 0xF0	; 240
 674:	98 27       	eor	r25, r24
 676:	80 71       	andi	r24, 0x10	; 16
 678:	92 2f       	mov	r25, r18
 67a:	9f 7e       	andi	r25, 0xEF	; 239
 67c:	89 0f       	add	r24, r25
 67e:	8b b9       	out	0x0b, r24	; 11
 680:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <I2C_SLAVE_haveSended>
 684:	8f 5f       	subi	r24, 0xFF	; 255
 686:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <I2C_SLAVE_haveSended>
 68a:	ff 91       	pop	r31
 68c:	ef 91       	pop	r30
 68e:	bf 91       	pop	r27
 690:	af 91       	pop	r26
 692:	9f 91       	pop	r25
 694:	8f 91       	pop	r24
 696:	7f 91       	pop	r23
 698:	6f 91       	pop	r22
 69a:	5f 91       	pop	r21
 69c:	4f 91       	pop	r20
 69e:	3f 91       	pop	r19
 6a0:	2f 91       	pop	r18
 6a2:	0f 90       	pop	r0
 6a4:	0f be       	out	0x3f, r0	; 63
 6a6:	0f 90       	pop	r0
 6a8:	1f 90       	pop	r1
 6aa:	18 95       	reti

000006ac <__vector_5>:
 6ac:	1f 92       	push	r1
 6ae:	0f 92       	push	r0
 6b0:	0f b6       	in	r0, 0x3f	; 63
 6b2:	0f 92       	push	r0
 6b4:	11 24       	eor	r1, r1
 6b6:	8f 93       	push	r24
 6b8:	ef 93       	push	r30
 6ba:	ff 93       	push	r31
 6bc:	4a 9b       	sbis	0x09, 2	; 9
 6be:	1e c0       	rjmp	.+60     	; 0x6fc <__vector_5+0x50>
 6c0:	4c 9b       	sbis	0x09, 4	; 9
 6c2:	03 c0       	rjmp	.+6      	; 0x6ca <__vector_5+0x1e>
 6c4:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <I2C_SLAVE_startRecived>
 6c8:	03 c0       	rjmp	.+6      	; 0x6d0 <__vector_5+0x24>
 6ca:	81 e0       	ldi	r24, 0x01	; 1
 6cc:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <I2C_SLAVE_startRecived>
 6d0:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <I2C_SLAVE_startRecived>
 6d4:	81 11       	cpse	r24, r1
 6d6:	12 c0       	rjmp	.+36     	; 0x6fc <__vector_5+0x50>
 6d8:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <I2C_SLAVE_beginHold>
 6dc:	10 92 1e 01 	sts	0x011E, r1	; 0x80011e <I2C_SLAVE_canSend>
 6e0:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <I2C_SLAVE_recevedAddr>
 6e4:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <I2C_SLAVE_shouldWrite>
 6e8:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <I2C_SLAVE_recevedBits>
 6ec:	e9 e6       	ldi	r30, 0x69	; 105
 6ee:	f0 e0       	ldi	r31, 0x00	; 0
 6f0:	80 81       	ld	r24, Z
 6f2:	82 60       	ori	r24, 0x02	; 2
 6f4:	80 83       	st	Z, r24
 6f6:	80 81       	ld	r24, Z
 6f8:	81 60       	ori	r24, 0x01	; 1
 6fa:	80 83       	st	Z, r24
 6fc:	ff 91       	pop	r31
 6fe:	ef 91       	pop	r30
 700:	8f 91       	pop	r24
 702:	0f 90       	pop	r0
 704:	0f be       	out	0x3f, r0	; 63
 706:	0f 90       	pop	r0
 708:	1f 90       	pop	r1
 70a:	18 95       	reti

0000070c <init_motors>:
 70c:	1f 93       	push	r17
 70e:	cf 93       	push	r28
 710:	df 93       	push	r29
 712:	8a b1       	in	r24, 0x0a	; 10
 714:	88 68       	ori	r24, 0x88	; 136
 716:	8a b9       	out	0x0a, r24	; 10
 718:	87 b1       	in	r24, 0x07	; 7
 71a:	80 63       	ori	r24, 0x30	; 48
 71c:	87 b9       	out	0x07, r24	; 7
 71e:	55 9a       	sbi	0x0a, 5	; 10
 720:	56 9a       	sbi	0x0a, 6	; 10
 722:	5d 98       	cbi	0x0b, 5	; 11
 724:	5e 98       	cbi	0x0b, 6	; 11
 726:	5b 9a       	sbi	0x0b, 3	; 11
 728:	5f 9a       	sbi	0x0b, 7	; 11
 72a:	44 9a       	sbi	0x08, 4	; 8
 72c:	45 9a       	sbi	0x08, 5	; 8
 72e:	84 b5       	in	r24, 0x24	; 36
 730:	8f 7c       	andi	r24, 0xCF	; 207
 732:	84 bd       	out	0x24, r24	; 36
 734:	84 b5       	in	r24, 0x24	; 36
 736:	8f 73       	andi	r24, 0x3F	; 63
 738:	84 bd       	out	0x24, r24	; 36
 73a:	c4 e6       	ldi	r28, 0x64	; 100
 73c:	d0 e0       	ldi	r29, 0x00	; 0
 73e:	88 81       	ld	r24, Y
 740:	8f 7d       	andi	r24, 0xDF	; 223
 742:	88 83       	st	Y, r24
 744:	11 e0       	ldi	r17, 0x01	; 1
 746:	14 bd       	out	0x24, r17	; 36
 748:	85 b5       	in	r24, 0x25	; 37
 74a:	84 60       	ori	r24, 0x04	; 4
 74c:	85 bd       	out	0x25, r24	; 37
 74e:	60 e0       	ldi	r22, 0x00	; 0
 750:	80 e0       	ldi	r24, 0x00	; 0
 752:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
 756:	61 e0       	ldi	r22, 0x01	; 1
 758:	80 e0       	ldi	r24, 0x00	; 0
 75a:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
 75e:	88 81       	ld	r24, Y
 760:	8f 7b       	andi	r24, 0xBF	; 191
 762:	88 83       	st	Y, r24
 764:	83 e0       	ldi	r24, 0x03	; 3
 766:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
 76a:	88 e0       	ldi	r24, 0x08	; 8
 76c:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
 770:	89 ef       	ldi	r24, 0xF9	; 249
 772:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
 776:	10 93 70 00 	sts	0x0070, r17	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
 77a:	df 91       	pop	r29
 77c:	cf 91       	pop	r28
 77e:	1f 91       	pop	r17
 780:	08 95       	ret

00000782 <flipPan1>:
	}
}

void flipPan1(){
	
	motor_flipping = MOTOR1;
 782:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <motor_flipping>
	setMotorPWM(MOTOR_OPTIMUM_PWM_FORWARD, motor_flipping);
 786:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 78a:	82 e3       	ldi	r24, 0x32	; 50
 78c:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
	
	//Flip forward
	MOTOR1_SETING(MOTOR_FORWARD);
 790:	5b 9a       	sbi	0x0b, 3	; 11
 792:	5f 98       	cbi	0x0b, 7	; 11
	MOTOR1_ENABLE();
 794:	84 b5       	in	r24, 0x24	; 36
 796:	80 63       	ori	r24, 0x30	; 48
 798:	84 bd       	out	0x24, r24	; 36
	startTimer2();
	
}

static void startTimer2(){
	curr_time = 0;
 79a:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <curr_time>
 79e:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <curr_time+0x1>
 7a2:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <curr_time+0x2>
 7a6:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <curr_time+0x3>
	TCCR2B |= (1 << CS22) | (1 << CS20);
 7aa:	e1 eb       	ldi	r30, 0xB1	; 177
 7ac:	f0 e0       	ldi	r31, 0x00	; 0
 7ae:	80 81       	ld	r24, Z
 7b0:	85 60       	ori	r24, 0x05	; 5
 7b2:	80 83       	st	Z, r24
 7b4:	08 95       	ret

000007b6 <flipPan2>:
	startTimer2();
}

void flipPan2(){
	
	motor_flipping = MOTOR2;
 7b6:	81 e0       	ldi	r24, 0x01	; 1
 7b8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <motor_flipping>
	setMotorPWM(MOTOR_OPTIMUM_PWM_FORWARD, motor_flipping);
 7bc:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 7c0:	82 e3       	ldi	r24, 0x32	; 50
 7c2:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
	
	//Flip forward
	MOTOR2_SETING(MOTOR_FORWARD);
 7c6:	44 9a       	sbi	0x08, 4	; 8
 7c8:	45 98       	cbi	0x08, 5	; 8
	MOTOR2_ENABLE();
 7ca:	84 b5       	in	r24, 0x24	; 36
 7cc:	80 6c       	ori	r24, 0xC0	; 192
 7ce:	84 bd       	out	0x24, r24	; 36
	startTimer2();
	
}

static void startTimer2(){
	curr_time = 0;
 7d0:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <curr_time>
 7d4:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <curr_time+0x1>
 7d8:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <curr_time+0x2>
 7dc:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <curr_time+0x3>
	TCCR2B |= (1 << CS22) | (1 << CS20);
 7e0:	e1 eb       	ldi	r30, 0xB1	; 177
 7e2:	f0 e0       	ldi	r31, 0x00	; 0
 7e4:	80 81       	ld	r24, Z
 7e6:	85 60       	ori	r24, 0x05	; 5
 7e8:	80 83       	st	Z, r24
 7ea:	08 95       	ret

000007ec <__vector_9>:
	
	//Reset count
	TCNT2 = 0x00;
}

ISR(TIMER2_OVF_vect) {
 7ec:	1f 92       	push	r1
 7ee:	0f 92       	push	r0
 7f0:	0f b6       	in	r0, 0x3f	; 63
 7f2:	0f 92       	push	r0
 7f4:	11 24       	eor	r1, r1
 7f6:	2f 93       	push	r18
 7f8:	3f 93       	push	r19
 7fa:	4f 93       	push	r20
 7fc:	5f 93       	push	r21
 7fe:	6f 93       	push	r22
 800:	7f 93       	push	r23
 802:	8f 93       	push	r24
 804:	9f 93       	push	r25
 806:	af 93       	push	r26
 808:	bf 93       	push	r27
 80a:	ef 93       	push	r30
 80c:	ff 93       	push	r31
	
	switch (curr_time++) {
 80e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <curr_time>
 812:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <curr_time+0x1>
 816:	a0 91 0e 01 	lds	r26, 0x010E	; 0x80010e <curr_time+0x2>
 81a:	b0 91 0f 01 	lds	r27, 0x010F	; 0x80010f <curr_time+0x3>
 81e:	ac 01       	movw	r20, r24
 820:	bd 01       	movw	r22, r26
 822:	4f 5f       	subi	r20, 0xFF	; 255
 824:	5f 4f       	sbci	r21, 0xFF	; 255
 826:	6f 4f       	sbci	r22, 0xFF	; 255
 828:	7f 4f       	sbci	r23, 0xFF	; 255
 82a:	40 93 0c 01 	sts	0x010C, r20	; 0x80010c <curr_time>
 82e:	50 93 0d 01 	sts	0x010D, r21	; 0x80010d <curr_time+0x1>
 832:	60 93 0e 01 	sts	0x010E, r22	; 0x80010e <curr_time+0x2>
 836:	70 93 0f 01 	sts	0x010F, r23	; 0x80010f <curr_time+0x3>
 83a:	8a 3f       	cpi	r24, 0xFA	; 250
 83c:	91 05       	cpc	r25, r1
 83e:	a1 05       	cpc	r26, r1
 840:	b1 05       	cpc	r27, r1
 842:	89 f1       	breq	.+98     	; 0x8a6 <__vector_9+0xba>
 844:	30 f4       	brcc	.+12     	; 0x852 <__vector_9+0x66>
 846:	8d 37       	cpi	r24, 0x7D	; 125
 848:	91 05       	cpc	r25, r1
 84a:	a1 05       	cpc	r26, r1
 84c:	b1 05       	cpc	r27, r1
 84e:	71 f0       	breq	.+28     	; 0x86c <__vector_9+0x80>
 850:	6a c0       	rjmp	.+212    	; 0x926 <__stack+0x27>
 852:	87 37       	cpi	r24, 0x77	; 119
 854:	21 e0       	ldi	r18, 0x01	; 1
 856:	92 07       	cpc	r25, r18
 858:	a1 05       	cpc	r26, r1
 85a:	b1 05       	cpc	r27, r1
 85c:	39 f0       	breq	.+14     	; 0x86c <__vector_9+0x80>
 85e:	84 3f       	cpi	r24, 0xF4	; 244
 860:	91 40       	sbci	r25, 0x01	; 1
 862:	a1 05       	cpc	r26, r1
 864:	b1 05       	cpc	r27, r1
 866:	09 f4       	brne	.+2      	; 0x86a <__vector_9+0x7e>
 868:	40 c0       	rjmp	.+128    	; 0x8ea <__vector_9+0xfe>
 86a:	5d c0       	rjmp	.+186    	; 0x926 <__stack+0x27>
		
		//Mid way time to break
		case MOTOR_FORWARD_TIME_S:
		case MOTOR_BACKWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 86c:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 870:	81 11       	cpse	r24, r1
 872:	0b c0       	rjmp	.+22     	; 0x88a <__vector_9+0x9e>
				MOTOR1_DISABLE();
 874:	84 b5       	in	r24, 0x24	; 36
 876:	8f 7c       	andi	r24, 0xCF	; 207
 878:	84 bd       	out	0x24, r24	; 36
				OCR0A = 125;
 87a:	8d e7       	ldi	r24, 0x7D	; 125
 87c:	87 bd       	out	0x27, r24	; 39
				//setMotorPWM(MOTOR_OPTIMUM_PWM_BREAK, motor_flipping);
				MOTOR1_SETING(MOTOR_BREAK);
 87e:	5b 98       	cbi	0x0b, 3	; 11
 880:	5f 98       	cbi	0x0b, 7	; 11
				MOTOR1_ENABLE();
 882:	84 b5       	in	r24, 0x24	; 36
 884:	80 63       	ori	r24, 0x30	; 48
 886:	84 bd       	out	0x24, r24	; 36
 888:	4e c0       	rjmp	.+156    	; 0x926 <__stack+0x27>
			}
			else {
				MOTOR2_DISABLE();
 88a:	84 b5       	in	r24, 0x24	; 36
 88c:	8f 73       	andi	r24, 0x3F	; 63
 88e:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BREAK, motor_flipping);
 890:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 894:	88 ec       	ldi	r24, 0xC8	; 200
 896:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR2_SETING(MOTOR_BREAK);
 89a:	44 98       	cbi	0x08, 4	; 8
 89c:	45 98       	cbi	0x08, 5	; 8
				MOTOR2_ENABLE();
 89e:	84 b5       	in	r24, 0x24	; 36
 8a0:	80 6c       	ori	r24, 0xC0	; 192
 8a2:	84 bd       	out	0x24, r24	; 36
 8a4:	40 c0       	rjmp	.+128    	; 0x926 <__stack+0x27>
			}
			break;
		
		//We have stopped the pan at pancake destination time to go back
		case MOTOR_BREAK_FORWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 8a6:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 8aa:	81 11       	cpse	r24, r1
 8ac:	10 c0       	rjmp	.+32     	; 0x8ce <__vector_9+0xe2>
				MOTOR1_DISABLE();
 8ae:	84 b5       	in	r24, 0x24	; 36
 8b0:	8f 7c       	andi	r24, 0xCF	; 207
 8b2:	84 bd       	out	0x24, r24	; 36
				OCR0A = 0;
 8b4:	17 bc       	out	0x27, r1	; 39
				//setMotorPWM(MOTOR_OPTIMUM_PWM_BACKWARD, motor_flipping);
				MOTOR1_SETING(MOTOR_BACKWARD);
 8b6:	5b 98       	cbi	0x0b, 3	; 11
 8b8:	5f 9a       	sbi	0x0b, 7	; 11
				MOTOR1_ENABLE();
 8ba:	84 b5       	in	r24, 0x24	; 36
 8bc:	80 63       	ori	r24, 0x30	; 48
 8be:	84 bd       	out	0x24, r24	; 36
}

static void startTimePan2(){
	
	//Set internal flag
	pan2_cooking_time = 0;
 8c0:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 8c4:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	pan2Free = false;
 8c8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 8cc:	2c c0       	rjmp	.+88     	; 0x926 <__stack+0x27>
				MOTOR1_SETING(MOTOR_BACKWARD);
				MOTOR1_ENABLE();
				startTimePan2();
			}
			else {
				MOTOR2_DISABLE();
 8ce:	84 b5       	in	r24, 0x24	; 36
 8d0:	8f 73       	andi	r24, 0x3F	; 63
 8d2:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BACKWARD, motor_flipping);
 8d4:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 8d8:	84 e6       	ldi	r24, 0x64	; 100
 8da:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR2_SETING(MOTOR_BACKWARD);
 8de:	44 98       	cbi	0x08, 4	; 8
 8e0:	45 9a       	sbi	0x08, 5	; 8
				MOTOR2_ENABLE();
 8e2:	84 b5       	in	r24, 0x24	; 36
 8e4:	80 6c       	ori	r24, 0xC0	; 192
 8e6:	84 bd       	out	0x24, r24	; 36
 8e8:	1e c0       	rjmp	.+60     	; 0x926 <__stack+0x27>
			}
			break;
		
		//We have reached the starting position set flags
		case MOTOR_BREAK_BACKWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 8ea:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 8ee:	81 11       	cpse	r24, r1
 8f0:	09 c0       	rjmp	.+18     	; 0x904 <__stack+0x5>
				MOTOR1_DISABLE();
 8f2:	84 b5       	in	r24, 0x24	; 36
 8f4:	8f 7c       	andi	r24, 0xCF	; 207
 8f6:	84 bd       	out	0x24, r24	; 36
				MOTOR1_SETING(MOTOR_OFF);
 8f8:	5b 9a       	sbi	0x0b, 3	; 11
 8fa:	5f 9a       	sbi	0x0b, 7	; 11
				pan1Free = true;
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pan1Free>
 902:	0a c0       	rjmp	.+20     	; 0x918 <__stack+0x19>
			}
			else {
				MOTOR2_DISABLE();
 904:	84 b5       	in	r24, 0x24	; 36
 906:	8f 73       	andi	r24, 0x3F	; 63
 908:	84 bd       	out	0x24, r24	; 36
				MOTOR2_SETING(MOTOR_OFF);
 90a:	44 9a       	sbi	0x08, 4	; 8
 90c:	45 9a       	sbi	0x08, 5	; 8
				pancake_done = true;
 90e:	81 e0       	ldi	r24, 0x01	; 1
 910:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pancake_done>
				pan2Free = true;
 914:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	TCCR2B |= (1 << CS22) | (1 << CS20);
}

static void stopTimer2(){
	//Stop clock
	TCCR2B &= ~((1 << CS22) | (1 << CS20));
 918:	e1 eb       	ldi	r30, 0xB1	; 177
 91a:	f0 e0       	ldi	r31, 0x00	; 0
 91c:	80 81       	ld	r24, Z
 91e:	8a 7f       	andi	r24, 0xFA	; 250
 920:	80 83       	st	Z, r24
	
	//Reset count
	TCNT2 = 0x00;
 922:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
			}
			//Stop the timer
			stopTimer2();
			break;
	}
}
 926:	ff 91       	pop	r31
 928:	ef 91       	pop	r30
 92a:	bf 91       	pop	r27
 92c:	af 91       	pop	r26
 92e:	9f 91       	pop	r25
 930:	8f 91       	pop	r24
 932:	7f 91       	pop	r23
 934:	6f 91       	pop	r22
 936:	5f 91       	pop	r21
 938:	4f 91       	pop	r20
 93a:	3f 91       	pop	r19
 93c:	2f 91       	pop	r18
 93e:	0f 90       	pop	r0
 940:	0f be       	out	0x3f, r0	; 63
 942:	0f 90       	pop	r0
 944:	1f 90       	pop	r1
 946:	18 95       	reti

00000948 <main>:
void init_1Hz_timer();

int main(void)
{
	//Enable interrupts
	sei();
 948:	78 94       	sei
	//init_1Hz_timer();
	init_motors();				//Initialize the motor pins and PWMs
 94a:	0e 94 86 03 	call	0x70c	; 0x70c <init_motors>
	pan1_cooking_time = 0;
 94e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <pan1_cooking_time+0x1>
 952:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <pan1_cooking_time>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 956:	2f ef       	ldi	r18, 0xFF	; 255
 958:	83 ed       	ldi	r24, 0xD3	; 211
 95a:	90 e3       	ldi	r25, 0x30	; 48
 95c:	21 50       	subi	r18, 0x01	; 1
 95e:	80 40       	sbci	r24, 0x00	; 0
 960:	90 40       	sbci	r25, 0x00	; 0
 962:	e1 f7       	brne	.-8      	; 0x95c <main+0x14>
 964:	00 c0       	rjmp	.+0      	; 0x966 <main+0x1e>
 966:	00 00       	nop
    while (1) 
    {	
		_delay_ms(1000);
		pan1_cooking_time++;	
 968:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 96c:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 970:	01 96       	adiw	r24, 0x01	; 1
 972:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <pan1_cooking_time+0x1>
 976:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <pan1_cooking_time>
	
		if (pan1_cooking_time >= 10) {
 97a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 97e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 982:	0a 97       	sbiw	r24, 0x0a	; 10
 984:	20 f0       	brcs	.+8      	; 0x98e <main+0x46>
			pan1_cooking_time = 0;
 986:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <pan1_cooking_time+0x1>
 98a:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <pan1_cooking_time>
		}
		
		if (pan1_cooking_time == 0){
 98e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 992:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 996:	89 2b       	or	r24, r25
 998:	11 f4       	brne	.+4      	; 0x99e <main+0x56>
			flipPan1();
 99a:	0e 94 c1 03 	call	0x782	; 0x782 <flipPan1>
		}
		
		if (pan1_cooking_time == 3){
 99e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 9a2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 9a6:	03 97       	sbiw	r24, 0x03	; 3
 9a8:	b1 f6       	brne	.-84     	; 0x956 <main+0xe>
			flipPan2();
 9aa:	0e 94 db 03 	call	0x7b6	; 0x7b6 <flipPan2>
 9ae:	d3 cf       	rjmp	.-90     	; 0x956 <main+0xe>

000009b0 <__subsf3>:
 9b0:	50 58       	subi	r21, 0x80	; 128

000009b2 <__addsf3>:
 9b2:	bb 27       	eor	r27, r27
 9b4:	aa 27       	eor	r26, r26
 9b6:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <__addsf3x>
 9ba:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__fp_round>
 9be:	0e 94 01 06 	call	0xc02	; 0xc02 <__fp_pscA>
 9c2:	38 f0       	brcs	.+14     	; 0x9d2 <__addsf3+0x20>
 9c4:	0e 94 08 06 	call	0xc10	; 0xc10 <__fp_pscB>
 9c8:	20 f0       	brcs	.+8      	; 0x9d2 <__addsf3+0x20>
 9ca:	39 f4       	brne	.+14     	; 0x9da <__addsf3+0x28>
 9cc:	9f 3f       	cpi	r25, 0xFF	; 255
 9ce:	19 f4       	brne	.+6      	; 0x9d6 <__addsf3+0x24>
 9d0:	26 f4       	brtc	.+8      	; 0x9da <__addsf3+0x28>
 9d2:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_nan>
 9d6:	0e f4       	brtc	.+2      	; 0x9da <__addsf3+0x28>
 9d8:	e0 95       	com	r30
 9da:	e7 fb       	bst	r30, 7
 9dc:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>

000009e0 <__addsf3x>:
 9e0:	e9 2f       	mov	r30, r25
 9e2:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_split3>
 9e6:	58 f3       	brcs	.-42     	; 0x9be <__addsf3+0xc>
 9e8:	ba 17       	cp	r27, r26
 9ea:	62 07       	cpc	r22, r18
 9ec:	73 07       	cpc	r23, r19
 9ee:	84 07       	cpc	r24, r20
 9f0:	95 07       	cpc	r25, r21
 9f2:	20 f0       	brcs	.+8      	; 0x9fc <__addsf3x+0x1c>
 9f4:	79 f4       	brne	.+30     	; 0xa14 <__addsf3x+0x34>
 9f6:	a6 f5       	brtc	.+104    	; 0xa60 <__addsf3x+0x80>
 9f8:	0c 94 5a 06 	jmp	0xcb4	; 0xcb4 <__fp_zero>
 9fc:	0e f4       	brtc	.+2      	; 0xa00 <__addsf3x+0x20>
 9fe:	e0 95       	com	r30
 a00:	0b 2e       	mov	r0, r27
 a02:	ba 2f       	mov	r27, r26
 a04:	a0 2d       	mov	r26, r0
 a06:	0b 01       	movw	r0, r22
 a08:	b9 01       	movw	r22, r18
 a0a:	90 01       	movw	r18, r0
 a0c:	0c 01       	movw	r0, r24
 a0e:	ca 01       	movw	r24, r20
 a10:	a0 01       	movw	r20, r0
 a12:	11 24       	eor	r1, r1
 a14:	ff 27       	eor	r31, r31
 a16:	59 1b       	sub	r21, r25
 a18:	99 f0       	breq	.+38     	; 0xa40 <__addsf3x+0x60>
 a1a:	59 3f       	cpi	r21, 0xF9	; 249
 a1c:	50 f4       	brcc	.+20     	; 0xa32 <__addsf3x+0x52>
 a1e:	50 3e       	cpi	r21, 0xE0	; 224
 a20:	68 f1       	brcs	.+90     	; 0xa7c <__addsf3x+0x9c>
 a22:	1a 16       	cp	r1, r26
 a24:	f0 40       	sbci	r31, 0x00	; 0
 a26:	a2 2f       	mov	r26, r18
 a28:	23 2f       	mov	r18, r19
 a2a:	34 2f       	mov	r19, r20
 a2c:	44 27       	eor	r20, r20
 a2e:	58 5f       	subi	r21, 0xF8	; 248
 a30:	f3 cf       	rjmp	.-26     	; 0xa18 <__addsf3x+0x38>
 a32:	46 95       	lsr	r20
 a34:	37 95       	ror	r19
 a36:	27 95       	ror	r18
 a38:	a7 95       	ror	r26
 a3a:	f0 40       	sbci	r31, 0x00	; 0
 a3c:	53 95       	inc	r21
 a3e:	c9 f7       	brne	.-14     	; 0xa32 <__addsf3x+0x52>
 a40:	7e f4       	brtc	.+30     	; 0xa60 <__addsf3x+0x80>
 a42:	1f 16       	cp	r1, r31
 a44:	ba 0b       	sbc	r27, r26
 a46:	62 0b       	sbc	r22, r18
 a48:	73 0b       	sbc	r23, r19
 a4a:	84 0b       	sbc	r24, r20
 a4c:	ba f0       	brmi	.+46     	; 0xa7c <__addsf3x+0x9c>
 a4e:	91 50       	subi	r25, 0x01	; 1
 a50:	a1 f0       	breq	.+40     	; 0xa7a <__addsf3x+0x9a>
 a52:	ff 0f       	add	r31, r31
 a54:	bb 1f       	adc	r27, r27
 a56:	66 1f       	adc	r22, r22
 a58:	77 1f       	adc	r23, r23
 a5a:	88 1f       	adc	r24, r24
 a5c:	c2 f7       	brpl	.-16     	; 0xa4e <__addsf3x+0x6e>
 a5e:	0e c0       	rjmp	.+28     	; 0xa7c <__addsf3x+0x9c>
 a60:	ba 0f       	add	r27, r26
 a62:	62 1f       	adc	r22, r18
 a64:	73 1f       	adc	r23, r19
 a66:	84 1f       	adc	r24, r20
 a68:	48 f4       	brcc	.+18     	; 0xa7c <__addsf3x+0x9c>
 a6a:	87 95       	ror	r24
 a6c:	77 95       	ror	r23
 a6e:	67 95       	ror	r22
 a70:	b7 95       	ror	r27
 a72:	f7 95       	ror	r31
 a74:	9e 3f       	cpi	r25, 0xFE	; 254
 a76:	08 f0       	brcs	.+2      	; 0xa7a <__addsf3x+0x9a>
 a78:	b0 cf       	rjmp	.-160    	; 0x9da <__addsf3+0x28>
 a7a:	93 95       	inc	r25
 a7c:	88 0f       	add	r24, r24
 a7e:	08 f0       	brcs	.+2      	; 0xa82 <__addsf3x+0xa2>
 a80:	99 27       	eor	r25, r25
 a82:	ee 0f       	add	r30, r30
 a84:	97 95       	ror	r25
 a86:	87 95       	ror	r24
 a88:	08 95       	ret

00000a8a <ceil>:
 a8a:	0e 94 42 06 	call	0xc84	; 0xc84 <__fp_trunc>
 a8e:	90 f0       	brcs	.+36     	; 0xab4 <ceil+0x2a>
 a90:	9f 37       	cpi	r25, 0x7F	; 127
 a92:	48 f4       	brcc	.+18     	; 0xaa6 <ceil+0x1c>
 a94:	91 11       	cpse	r25, r1
 a96:	16 f4       	brtc	.+4      	; 0xa9c <ceil+0x12>
 a98:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>
 a9c:	60 e0       	ldi	r22, 0x00	; 0
 a9e:	70 e0       	ldi	r23, 0x00	; 0
 aa0:	80 e8       	ldi	r24, 0x80	; 128
 aa2:	9f e3       	ldi	r25, 0x3F	; 63
 aa4:	08 95       	ret
 aa6:	26 f0       	brts	.+8      	; 0xab0 <ceil+0x26>
 aa8:	1b 16       	cp	r1, r27
 aaa:	61 1d       	adc	r22, r1
 aac:	71 1d       	adc	r23, r1
 aae:	81 1d       	adc	r24, r1
 ab0:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_mintl>
 ab4:	0c 94 f0 05 	jmp	0xbe0	; 0xbe0 <__fp_mpack>

00000ab8 <__fixsfsi>:
 ab8:	0e 94 63 05 	call	0xac6	; 0xac6 <__fixunssfsi>
 abc:	68 94       	set
 abe:	b1 11       	cpse	r27, r1
 ac0:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>
 ac4:	08 95       	ret

00000ac6 <__fixunssfsi>:
 ac6:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_splitA>
 aca:	88 f0       	brcs	.+34     	; 0xaee <__fixunssfsi+0x28>
 acc:	9f 57       	subi	r25, 0x7F	; 127
 ace:	98 f0       	brcs	.+38     	; 0xaf6 <__fixunssfsi+0x30>
 ad0:	b9 2f       	mov	r27, r25
 ad2:	99 27       	eor	r25, r25
 ad4:	b7 51       	subi	r27, 0x17	; 23
 ad6:	b0 f0       	brcs	.+44     	; 0xb04 <__fixunssfsi+0x3e>
 ad8:	e1 f0       	breq	.+56     	; 0xb12 <__fixunssfsi+0x4c>
 ada:	66 0f       	add	r22, r22
 adc:	77 1f       	adc	r23, r23
 ade:	88 1f       	adc	r24, r24
 ae0:	99 1f       	adc	r25, r25
 ae2:	1a f0       	brmi	.+6      	; 0xaea <__fixunssfsi+0x24>
 ae4:	ba 95       	dec	r27
 ae6:	c9 f7       	brne	.-14     	; 0xada <__fixunssfsi+0x14>
 ae8:	14 c0       	rjmp	.+40     	; 0xb12 <__fixunssfsi+0x4c>
 aea:	b1 30       	cpi	r27, 0x01	; 1
 aec:	91 f0       	breq	.+36     	; 0xb12 <__fixunssfsi+0x4c>
 aee:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <__fp_zero>
 af2:	b1 e0       	ldi	r27, 0x01	; 1
 af4:	08 95       	ret
 af6:	0c 94 5a 06 	jmp	0xcb4	; 0xcb4 <__fp_zero>
 afa:	67 2f       	mov	r22, r23
 afc:	78 2f       	mov	r23, r24
 afe:	88 27       	eor	r24, r24
 b00:	b8 5f       	subi	r27, 0xF8	; 248
 b02:	39 f0       	breq	.+14     	; 0xb12 <__fixunssfsi+0x4c>
 b04:	b9 3f       	cpi	r27, 0xF9	; 249
 b06:	cc f3       	brlt	.-14     	; 0xafa <__fixunssfsi+0x34>
 b08:	86 95       	lsr	r24
 b0a:	77 95       	ror	r23
 b0c:	67 95       	ror	r22
 b0e:	b3 95       	inc	r27
 b10:	d9 f7       	brne	.-10     	; 0xb08 <__fixunssfsi+0x42>
 b12:	3e f4       	brtc	.+14     	; 0xb22 <__fixunssfsi+0x5c>
 b14:	90 95       	com	r25
 b16:	80 95       	com	r24
 b18:	70 95       	com	r23
 b1a:	61 95       	neg	r22
 b1c:	7f 4f       	sbci	r23, 0xFF	; 255
 b1e:	8f 4f       	sbci	r24, 0xFF	; 255
 b20:	9f 4f       	sbci	r25, 0xFF	; 255
 b22:	08 95       	ret

00000b24 <__floatunsisf>:
 b24:	e8 94       	clt
 b26:	09 c0       	rjmp	.+18     	; 0xb3a <__floatsisf+0x12>

00000b28 <__floatsisf>:
 b28:	97 fb       	bst	r25, 7
 b2a:	3e f4       	brtc	.+14     	; 0xb3a <__floatsisf+0x12>
 b2c:	90 95       	com	r25
 b2e:	80 95       	com	r24
 b30:	70 95       	com	r23
 b32:	61 95       	neg	r22
 b34:	7f 4f       	sbci	r23, 0xFF	; 255
 b36:	8f 4f       	sbci	r24, 0xFF	; 255
 b38:	9f 4f       	sbci	r25, 0xFF	; 255
 b3a:	99 23       	and	r25, r25
 b3c:	a9 f0       	breq	.+42     	; 0xb68 <__floatsisf+0x40>
 b3e:	f9 2f       	mov	r31, r25
 b40:	96 e9       	ldi	r25, 0x96	; 150
 b42:	bb 27       	eor	r27, r27
 b44:	93 95       	inc	r25
 b46:	f6 95       	lsr	r31
 b48:	87 95       	ror	r24
 b4a:	77 95       	ror	r23
 b4c:	67 95       	ror	r22
 b4e:	b7 95       	ror	r27
 b50:	f1 11       	cpse	r31, r1
 b52:	f8 cf       	rjmp	.-16     	; 0xb44 <__floatsisf+0x1c>
 b54:	fa f4       	brpl	.+62     	; 0xb94 <__floatsisf+0x6c>
 b56:	bb 0f       	add	r27, r27
 b58:	11 f4       	brne	.+4      	; 0xb5e <__floatsisf+0x36>
 b5a:	60 ff       	sbrs	r22, 0
 b5c:	1b c0       	rjmp	.+54     	; 0xb94 <__floatsisf+0x6c>
 b5e:	6f 5f       	subi	r22, 0xFF	; 255
 b60:	7f 4f       	sbci	r23, 0xFF	; 255
 b62:	8f 4f       	sbci	r24, 0xFF	; 255
 b64:	9f 4f       	sbci	r25, 0xFF	; 255
 b66:	16 c0       	rjmp	.+44     	; 0xb94 <__floatsisf+0x6c>
 b68:	88 23       	and	r24, r24
 b6a:	11 f0       	breq	.+4      	; 0xb70 <__floatsisf+0x48>
 b6c:	96 e9       	ldi	r25, 0x96	; 150
 b6e:	11 c0       	rjmp	.+34     	; 0xb92 <__floatsisf+0x6a>
 b70:	77 23       	and	r23, r23
 b72:	21 f0       	breq	.+8      	; 0xb7c <__floatsisf+0x54>
 b74:	9e e8       	ldi	r25, 0x8E	; 142
 b76:	87 2f       	mov	r24, r23
 b78:	76 2f       	mov	r23, r22
 b7a:	05 c0       	rjmp	.+10     	; 0xb86 <__floatsisf+0x5e>
 b7c:	66 23       	and	r22, r22
 b7e:	71 f0       	breq	.+28     	; 0xb9c <__floatsisf+0x74>
 b80:	96 e8       	ldi	r25, 0x86	; 134
 b82:	86 2f       	mov	r24, r22
 b84:	70 e0       	ldi	r23, 0x00	; 0
 b86:	60 e0       	ldi	r22, 0x00	; 0
 b88:	2a f0       	brmi	.+10     	; 0xb94 <__floatsisf+0x6c>
 b8a:	9a 95       	dec	r25
 b8c:	66 0f       	add	r22, r22
 b8e:	77 1f       	adc	r23, r23
 b90:	88 1f       	adc	r24, r24
 b92:	da f7       	brpl	.-10     	; 0xb8a <__floatsisf+0x62>
 b94:	88 0f       	add	r24, r24
 b96:	96 95       	lsr	r25
 b98:	87 95       	ror	r24
 b9a:	97 f9       	bld	r25, 7
 b9c:	08 95       	ret

00000b9e <__fp_inf>:
 b9e:	97 f9       	bld	r25, 7
 ba0:	9f 67       	ori	r25, 0x7F	; 127
 ba2:	80 e8       	ldi	r24, 0x80	; 128
 ba4:	70 e0       	ldi	r23, 0x00	; 0
 ba6:	60 e0       	ldi	r22, 0x00	; 0
 ba8:	08 95       	ret

00000baa <__fp_mintl>:
 baa:	88 23       	and	r24, r24
 bac:	71 f4       	brne	.+28     	; 0xbca <__fp_mintl+0x20>
 bae:	77 23       	and	r23, r23
 bb0:	21 f0       	breq	.+8      	; 0xbba <__fp_mintl+0x10>
 bb2:	98 50       	subi	r25, 0x08	; 8
 bb4:	87 2b       	or	r24, r23
 bb6:	76 2f       	mov	r23, r22
 bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <__fp_mintl+0x1e>
 bba:	66 23       	and	r22, r22
 bbc:	11 f4       	brne	.+4      	; 0xbc2 <__fp_mintl+0x18>
 bbe:	99 27       	eor	r25, r25
 bc0:	0d c0       	rjmp	.+26     	; 0xbdc <__fp_mintl+0x32>
 bc2:	90 51       	subi	r25, 0x10	; 16
 bc4:	86 2b       	or	r24, r22
 bc6:	70 e0       	ldi	r23, 0x00	; 0
 bc8:	60 e0       	ldi	r22, 0x00	; 0
 bca:	2a f0       	brmi	.+10     	; 0xbd6 <__fp_mintl+0x2c>
 bcc:	9a 95       	dec	r25
 bce:	66 0f       	add	r22, r22
 bd0:	77 1f       	adc	r23, r23
 bd2:	88 1f       	adc	r24, r24
 bd4:	da f7       	brpl	.-10     	; 0xbcc <__fp_mintl+0x22>
 bd6:	88 0f       	add	r24, r24
 bd8:	96 95       	lsr	r25
 bda:	87 95       	ror	r24
 bdc:	97 f9       	bld	r25, 7
 bde:	08 95       	ret

00000be0 <__fp_mpack>:
 be0:	9f 3f       	cpi	r25, 0xFF	; 255
 be2:	31 f0       	breq	.+12     	; 0xbf0 <__fp_mpack_finite+0xc>

00000be4 <__fp_mpack_finite>:
 be4:	91 50       	subi	r25, 0x01	; 1
 be6:	20 f4       	brcc	.+8      	; 0xbf0 <__fp_mpack_finite+0xc>
 be8:	87 95       	ror	r24
 bea:	77 95       	ror	r23
 bec:	67 95       	ror	r22
 bee:	b7 95       	ror	r27
 bf0:	88 0f       	add	r24, r24
 bf2:	91 1d       	adc	r25, r1
 bf4:	96 95       	lsr	r25
 bf6:	87 95       	ror	r24
 bf8:	97 f9       	bld	r25, 7
 bfa:	08 95       	ret

00000bfc <__fp_nan>:
 bfc:	9f ef       	ldi	r25, 0xFF	; 255
 bfe:	80 ec       	ldi	r24, 0xC0	; 192
 c00:	08 95       	ret

00000c02 <__fp_pscA>:
 c02:	00 24       	eor	r0, r0
 c04:	0a 94       	dec	r0
 c06:	16 16       	cp	r1, r22
 c08:	17 06       	cpc	r1, r23
 c0a:	18 06       	cpc	r1, r24
 c0c:	09 06       	cpc	r0, r25
 c0e:	08 95       	ret

00000c10 <__fp_pscB>:
 c10:	00 24       	eor	r0, r0
 c12:	0a 94       	dec	r0
 c14:	12 16       	cp	r1, r18
 c16:	13 06       	cpc	r1, r19
 c18:	14 06       	cpc	r1, r20
 c1a:	05 06       	cpc	r0, r21
 c1c:	08 95       	ret

00000c1e <__fp_round>:
 c1e:	09 2e       	mov	r0, r25
 c20:	03 94       	inc	r0
 c22:	00 0c       	add	r0, r0
 c24:	11 f4       	brne	.+4      	; 0xc2a <__fp_round+0xc>
 c26:	88 23       	and	r24, r24
 c28:	52 f0       	brmi	.+20     	; 0xc3e <__fp_round+0x20>
 c2a:	bb 0f       	add	r27, r27
 c2c:	40 f4       	brcc	.+16     	; 0xc3e <__fp_round+0x20>
 c2e:	bf 2b       	or	r27, r31
 c30:	11 f4       	brne	.+4      	; 0xc36 <__fp_round+0x18>
 c32:	60 ff       	sbrs	r22, 0
 c34:	04 c0       	rjmp	.+8      	; 0xc3e <__fp_round+0x20>
 c36:	6f 5f       	subi	r22, 0xFF	; 255
 c38:	7f 4f       	sbci	r23, 0xFF	; 255
 c3a:	8f 4f       	sbci	r24, 0xFF	; 255
 c3c:	9f 4f       	sbci	r25, 0xFF	; 255
 c3e:	08 95       	ret

00000c40 <__fp_split3>:
 c40:	57 fd       	sbrc	r21, 7
 c42:	90 58       	subi	r25, 0x80	; 128
 c44:	44 0f       	add	r20, r20
 c46:	55 1f       	adc	r21, r21
 c48:	59 f0       	breq	.+22     	; 0xc60 <__fp_splitA+0x10>
 c4a:	5f 3f       	cpi	r21, 0xFF	; 255
 c4c:	71 f0       	breq	.+28     	; 0xc6a <__fp_splitA+0x1a>
 c4e:	47 95       	ror	r20

00000c50 <__fp_splitA>:
 c50:	88 0f       	add	r24, r24
 c52:	97 fb       	bst	r25, 7
 c54:	99 1f       	adc	r25, r25
 c56:	61 f0       	breq	.+24     	; 0xc70 <__fp_splitA+0x20>
 c58:	9f 3f       	cpi	r25, 0xFF	; 255
 c5a:	79 f0       	breq	.+30     	; 0xc7a <__fp_splitA+0x2a>
 c5c:	87 95       	ror	r24
 c5e:	08 95       	ret
 c60:	12 16       	cp	r1, r18
 c62:	13 06       	cpc	r1, r19
 c64:	14 06       	cpc	r1, r20
 c66:	55 1f       	adc	r21, r21
 c68:	f2 cf       	rjmp	.-28     	; 0xc4e <__fp_split3+0xe>
 c6a:	46 95       	lsr	r20
 c6c:	f1 df       	rcall	.-30     	; 0xc50 <__fp_splitA>
 c6e:	08 c0       	rjmp	.+16     	; 0xc80 <__fp_splitA+0x30>
 c70:	16 16       	cp	r1, r22
 c72:	17 06       	cpc	r1, r23
 c74:	18 06       	cpc	r1, r24
 c76:	99 1f       	adc	r25, r25
 c78:	f1 cf       	rjmp	.-30     	; 0xc5c <__fp_splitA+0xc>
 c7a:	86 95       	lsr	r24
 c7c:	71 05       	cpc	r23, r1
 c7e:	61 05       	cpc	r22, r1
 c80:	08 94       	sec
 c82:	08 95       	ret

00000c84 <__fp_trunc>:
 c84:	0e 94 28 06 	call	0xc50	; 0xc50 <__fp_splitA>
 c88:	a0 f0       	brcs	.+40     	; 0xcb2 <__fp_trunc+0x2e>
 c8a:	be e7       	ldi	r27, 0x7E	; 126
 c8c:	b9 17       	cp	r27, r25
 c8e:	88 f4       	brcc	.+34     	; 0xcb2 <__fp_trunc+0x2e>
 c90:	bb 27       	eor	r27, r27
 c92:	9f 38       	cpi	r25, 0x8F	; 143
 c94:	60 f4       	brcc	.+24     	; 0xcae <__fp_trunc+0x2a>
 c96:	16 16       	cp	r1, r22
 c98:	b1 1d       	adc	r27, r1
 c9a:	67 2f       	mov	r22, r23
 c9c:	78 2f       	mov	r23, r24
 c9e:	88 27       	eor	r24, r24
 ca0:	98 5f       	subi	r25, 0xF8	; 248
 ca2:	f7 cf       	rjmp	.-18     	; 0xc92 <__fp_trunc+0xe>
 ca4:	86 95       	lsr	r24
 ca6:	77 95       	ror	r23
 ca8:	67 95       	ror	r22
 caa:	b1 1d       	adc	r27, r1
 cac:	93 95       	inc	r25
 cae:	96 39       	cpi	r25, 0x96	; 150
 cb0:	c8 f3       	brcs	.-14     	; 0xca4 <__fp_trunc+0x20>
 cb2:	08 95       	ret

00000cb4 <__fp_zero>:
 cb4:	e8 94       	clt

00000cb6 <__fp_szero>:
 cb6:	bb 27       	eor	r27, r27
 cb8:	66 27       	eor	r22, r22
 cba:	77 27       	eor	r23, r23
 cbc:	cb 01       	movw	r24, r22
 cbe:	97 f9       	bld	r25, 7
 cc0:	08 95       	ret

00000cc2 <__mulsf3>:
 cc2:	0e 94 74 06 	call	0xce8	; 0xce8 <__mulsf3x>
 cc6:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__fp_round>
 cca:	0e 94 01 06 	call	0xc02	; 0xc02 <__fp_pscA>
 cce:	38 f0       	brcs	.+14     	; 0xcde <__mulsf3+0x1c>
 cd0:	0e 94 08 06 	call	0xc10	; 0xc10 <__fp_pscB>
 cd4:	20 f0       	brcs	.+8      	; 0xcde <__mulsf3+0x1c>
 cd6:	95 23       	and	r25, r21
 cd8:	11 f0       	breq	.+4      	; 0xcde <__mulsf3+0x1c>
 cda:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>
 cde:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__fp_nan>
 ce2:	11 24       	eor	r1, r1
 ce4:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>

00000ce8 <__mulsf3x>:
 ce8:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_split3>
 cec:	70 f3       	brcs	.-36     	; 0xcca <__mulsf3+0x8>

00000cee <__mulsf3_pse>:
 cee:	95 9f       	mul	r25, r21
 cf0:	c1 f3       	breq	.-16     	; 0xce2 <__mulsf3+0x20>
 cf2:	95 0f       	add	r25, r21
 cf4:	50 e0       	ldi	r21, 0x00	; 0
 cf6:	55 1f       	adc	r21, r21
 cf8:	62 9f       	mul	r22, r18
 cfa:	f0 01       	movw	r30, r0
 cfc:	72 9f       	mul	r23, r18
 cfe:	bb 27       	eor	r27, r27
 d00:	f0 0d       	add	r31, r0
 d02:	b1 1d       	adc	r27, r1
 d04:	63 9f       	mul	r22, r19
 d06:	aa 27       	eor	r26, r26
 d08:	f0 0d       	add	r31, r0
 d0a:	b1 1d       	adc	r27, r1
 d0c:	aa 1f       	adc	r26, r26
 d0e:	64 9f       	mul	r22, r20
 d10:	66 27       	eor	r22, r22
 d12:	b0 0d       	add	r27, r0
 d14:	a1 1d       	adc	r26, r1
 d16:	66 1f       	adc	r22, r22
 d18:	82 9f       	mul	r24, r18
 d1a:	22 27       	eor	r18, r18
 d1c:	b0 0d       	add	r27, r0
 d1e:	a1 1d       	adc	r26, r1
 d20:	62 1f       	adc	r22, r18
 d22:	73 9f       	mul	r23, r19
 d24:	b0 0d       	add	r27, r0
 d26:	a1 1d       	adc	r26, r1
 d28:	62 1f       	adc	r22, r18
 d2a:	83 9f       	mul	r24, r19
 d2c:	a0 0d       	add	r26, r0
 d2e:	61 1d       	adc	r22, r1
 d30:	22 1f       	adc	r18, r18
 d32:	74 9f       	mul	r23, r20
 d34:	33 27       	eor	r19, r19
 d36:	a0 0d       	add	r26, r0
 d38:	61 1d       	adc	r22, r1
 d3a:	23 1f       	adc	r18, r19
 d3c:	84 9f       	mul	r24, r20
 d3e:	60 0d       	add	r22, r0
 d40:	21 1d       	adc	r18, r1
 d42:	82 2f       	mov	r24, r18
 d44:	76 2f       	mov	r23, r22
 d46:	6a 2f       	mov	r22, r26
 d48:	11 24       	eor	r1, r1
 d4a:	9f 57       	subi	r25, 0x7F	; 127
 d4c:	50 40       	sbci	r21, 0x00	; 0
 d4e:	9a f0       	brmi	.+38     	; 0xd76 <__mulsf3_pse+0x88>
 d50:	f1 f0       	breq	.+60     	; 0xd8e <__mulsf3_pse+0xa0>
 d52:	88 23       	and	r24, r24
 d54:	4a f0       	brmi	.+18     	; 0xd68 <__mulsf3_pse+0x7a>
 d56:	ee 0f       	add	r30, r30
 d58:	ff 1f       	adc	r31, r31
 d5a:	bb 1f       	adc	r27, r27
 d5c:	66 1f       	adc	r22, r22
 d5e:	77 1f       	adc	r23, r23
 d60:	88 1f       	adc	r24, r24
 d62:	91 50       	subi	r25, 0x01	; 1
 d64:	50 40       	sbci	r21, 0x00	; 0
 d66:	a9 f7       	brne	.-22     	; 0xd52 <__mulsf3_pse+0x64>
 d68:	9e 3f       	cpi	r25, 0xFE	; 254
 d6a:	51 05       	cpc	r21, r1
 d6c:	80 f0       	brcs	.+32     	; 0xd8e <__mulsf3_pse+0xa0>
 d6e:	0c 94 cf 05 	jmp	0xb9e	; 0xb9e <__fp_inf>
 d72:	0c 94 5b 06 	jmp	0xcb6	; 0xcb6 <__fp_szero>
 d76:	5f 3f       	cpi	r21, 0xFF	; 255
 d78:	e4 f3       	brlt	.-8      	; 0xd72 <__mulsf3_pse+0x84>
 d7a:	98 3e       	cpi	r25, 0xE8	; 232
 d7c:	d4 f3       	brlt	.-12     	; 0xd72 <__mulsf3_pse+0x84>
 d7e:	86 95       	lsr	r24
 d80:	77 95       	ror	r23
 d82:	67 95       	ror	r22
 d84:	b7 95       	ror	r27
 d86:	f7 95       	ror	r31
 d88:	e7 95       	ror	r30
 d8a:	9f 5f       	subi	r25, 0xFF	; 255
 d8c:	c1 f7       	brne	.-16     	; 0xd7e <__mulsf3_pse+0x90>
 d8e:	fe 2b       	or	r31, r30
 d90:	88 0f       	add	r24, r24
 d92:	91 1d       	adc	r25, r1
 d94:	96 95       	lsr	r25
 d96:	87 95       	ror	r24
 d98:	97 f9       	bld	r25, 7
 d9a:	08 95       	ret

00000d9c <__muluhisi3>:
 d9c:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <__umulhisi3>
 da0:	a5 9f       	mul	r26, r21
 da2:	90 0d       	add	r25, r0
 da4:	b4 9f       	mul	r27, r20
 da6:	90 0d       	add	r25, r0
 da8:	a4 9f       	mul	r26, r20
 daa:	80 0d       	add	r24, r0
 dac:	91 1d       	adc	r25, r1
 dae:	11 24       	eor	r1, r1
 db0:	08 95       	ret

00000db2 <__umulhisi3>:
 db2:	a2 9f       	mul	r26, r18
 db4:	b0 01       	movw	r22, r0
 db6:	b3 9f       	mul	r27, r19
 db8:	c0 01       	movw	r24, r0
 dba:	a3 9f       	mul	r26, r19
 dbc:	70 0d       	add	r23, r0
 dbe:	81 1d       	adc	r24, r1
 dc0:	11 24       	eor	r1, r1
 dc2:	91 1d       	adc	r25, r1
 dc4:	b2 9f       	mul	r27, r18
 dc6:	70 0d       	add	r23, r0
 dc8:	81 1d       	adc	r24, r1
 dca:	11 24       	eor	r1, r1
 dcc:	91 1d       	adc	r25, r1
 dce:	08 95       	ret

00000dd0 <_exit>:
 dd0:	f8 94       	cli

00000dd2 <__stop_program>:
 dd2:	ff cf       	rjmp	.-2      	; 0xdd2 <__stop_program>


TestHeatOnOff.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800100  00000d80  00000e14  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d80  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000029  00800102  00800102  00000e16  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000e16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e48  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000e88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fd8  00000000  00000000  00000f70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000955  00000000  00000000  00001f48  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000acb  00000000  00000000  0000289d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000030c  00000000  00000000  00003368  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007fb  00000000  00000000  00003674  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006bb  00000000  00000000  00003e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000452a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 02 02 	jmp	0x404	; 0x404 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 18 01 	jmp	0x230	; 0x230 <__vector_3>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 7e 03 	jmp	0x6fc	; 0x6fc <__vector_5>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 ae 03 	jmp	0x75c	; 0x75c <__vector_9>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 2e 01 	jmp	0x25c	; 0x25c <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 e8       	ldi	r30, 0x80	; 128
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 30       	cpi	r26, 0x02	; 2
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e0       	ldi	r26, 0x02	; 2
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ab 32       	cpi	r26, 0x2B	; 43
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 66 04 	call	0x8cc	; 0x8cc <main>
  9e:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_SLAVE_sendBit>:
	
}

static void startTimer2(){
	curr_time = 0;
	TCCR2B |= (1 << CS22) | (1 << CS20);
  a6:	90 91 20 01 	lds	r25, 0x0120	; 0x800120 <I2C_SLAVE_dataReady>
  aa:	91 30       	cpi	r25, 0x01	; 1
  ac:	41 f4       	brne	.+16     	; 0xbe <I2C_SLAVE_sendBit+0x18>
  ae:	90 91 22 01 	lds	r25, 0x0122	; 0x800122 <I2C_SLAVE_toSend>
  b2:	90 93 21 01 	sts	0x0121, r25	; 0x800121 <I2C_SLAVE_tempSave>
  b6:	92 e0       	ldi	r25, 0x02	; 2
  b8:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <I2C_SLAVE_dataReady>
  bc:	03 c0       	rjmp	.+6      	; 0xc4 <I2C_SLAVE_sendBit+0x1e>
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	90 93 20 01 	sts	0x0120, r25	; 0x800120 <I2C_SLAVE_dataReady>
  c4:	87 95       	ror	r24
  c6:	88 27       	eor	r24, r24
  c8:	87 95       	ror	r24
  ca:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <I2C_SLAVE_toSend>
  ce:	87 e0       	ldi	r24, 0x07	; 7
  d0:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <I2C_SLAVE_haveSended>
  d4:	08 95       	ret

000000d6 <I2C_SLAVE_beginSend>:
  d6:	e9 e6       	ldi	r30, 0x69	; 105
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	82 60       	ori	r24, 0x02	; 2
  de:	80 83       	st	Z, r24
  e0:	80 81       	ld	r24, Z
  e2:	8e 7f       	andi	r24, 0xFE	; 254
  e4:	80 83       	st	Z, r24
  e6:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <I2C_SLAVE_dataReady>
  ea:	82 30       	cpi	r24, 0x02	; 2
  ec:	21 f4       	brne	.+8      	; 0xf6 <I2C_SLAVE_beginSend+0x20>
  ee:	83 e0       	ldi	r24, 0x03	; 3
  f0:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <I2C_SLAVE_dataReady>
  f4:	08 95       	ret
  f6:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <I2C_SLAVE_dataReady>
  fa:	08 95       	ret

000000fc <setPWMLevel>:
  fc:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <curr_pan>
 100:	22 23       	and	r18, r18
 102:	f1 f0       	breq	.+60     	; 0x140 <setPWMLevel+0x44>
 104:	85 36       	cpi	r24, 0x65	; 101
 106:	91 05       	cpc	r25, r1
 108:	70 f4       	brcc	.+28     	; 0x126 <setPWMLevel+0x2a>
 10a:	dc 01       	movw	r26, r24
 10c:	20 e9       	ldi	r18, 0x90	; 144
 10e:	3d ef       	ldi	r19, 0xFD	; 253
 110:	4f ef       	ldi	r20, 0xFF	; 255
 112:	5f ef       	ldi	r21, 0xFF	; 255
 114:	0e 94 a4 06 	call	0xd48	; 0xd48 <__muluhisi3>
 118:	6d 5d       	subi	r22, 0xDD	; 221
 11a:	7b 40       	sbci	r23, 0x0B	; 11
 11c:	8f 4f       	sbci	r24, 0xFF	; 255
 11e:	9f 4f       	sbci	r25, 0xFF	; 255
 120:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
 124:	04 c0       	rjmp	.+8      	; 0x12e <setPWMLevel+0x32>
 126:	60 e0       	ldi	r22, 0x00	; 0
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	86 ec       	ldi	r24, 0xC6	; 198
 12c:	92 e4       	ldi	r25, 0x42	; 66
 12e:	0e 94 1b 05 	call	0xa36	; 0xa36 <ceil>
 132:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
 136:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
 13a:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
 13e:	08 95       	ret
 140:	85 36       	cpi	r24, 0x65	; 101
 142:	91 05       	cpc	r25, r1
 144:	70 f4       	brcc	.+28     	; 0x162 <setPWMLevel+0x66>
 146:	dc 01       	movw	r26, r24
 148:	20 e9       	ldi	r18, 0x90	; 144
 14a:	3d ef       	ldi	r19, 0xFD	; 253
 14c:	4f ef       	ldi	r20, 0xFF	; 255
 14e:	5f ef       	ldi	r21, 0xFF	; 255
 150:	0e 94 a4 06 	call	0xd48	; 0xd48 <__muluhisi3>
 154:	6d 5d       	subi	r22, 0xDD	; 221
 156:	7b 40       	sbci	r23, 0x0B	; 11
 158:	8f 4f       	sbci	r24, 0xFF	; 255
 15a:	9f 4f       	sbci	r25, 0xFF	; 255
 15c:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
 160:	04 c0       	rjmp	.+8      	; 0x16a <setPWMLevel+0x6e>
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	86 ec       	ldi	r24, 0xC6	; 198
 168:	92 e4       	ldi	r25, 0x42	; 66
 16a:	0e 94 1b 05 	call	0xa36	; 0xa36 <ceil>
 16e:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
 172:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 176:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 17a:	08 95       	ret

0000017c <setMotorPWM>:
 17c:	61 11       	cpse	r22, r1
 17e:	1f c0       	rjmp	.+62     	; 0x1be <setMotorPWM+0x42>
 180:	85 36       	cpi	r24, 0x65	; 101
 182:	58 f4       	brcc	.+22     	; 0x19a <setMotorPWM+0x1e>
 184:	68 2f       	mov	r22, r24
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	66 0f       	add	r22, r22
 18a:	77 1f       	adc	r23, r23
 18c:	07 2e       	mov	r0, r23
 18e:	00 0c       	add	r0, r0
 190:	88 0b       	sbc	r24, r24
 192:	99 0b       	sbc	r25, r25
 194:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
 198:	04 c0       	rjmp	.+8      	; 0x1a2 <setMotorPWM+0x26>
 19a:	60 e0       	ldi	r22, 0x00	; 0
 19c:	70 e0       	ldi	r23, 0x00	; 0
 19e:	88 e4       	ldi	r24, 0x48	; 72
 1a0:	93 e4       	ldi	r25, 0x43	; 67
 1a2:	0e 94 1b 05 	call	0xa36	; 0xa36 <ceil>
 1a6:	9b 01       	movw	r18, r22
 1a8:	ac 01       	movw	r20, r24
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	70 e0       	ldi	r23, 0x00	; 0
 1ae:	8f e7       	ldi	r24, 0x7F	; 127
 1b0:	93 e4       	ldi	r25, 0x43	; 67
 1b2:	0e 94 ae 04 	call	0x95c	; 0x95c <__subsf3>
 1b6:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
 1ba:	67 bd       	out	0x27, r22	; 39
 1bc:	08 95       	ret
 1be:	85 36       	cpi	r24, 0x65	; 101
 1c0:	58 f4       	brcc	.+22     	; 0x1d8 <setMotorPWM+0x5c>
 1c2:	68 2f       	mov	r22, r24
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	66 0f       	add	r22, r22
 1c8:	77 1f       	adc	r23, r23
 1ca:	07 2e       	mov	r0, r23
 1cc:	00 0c       	add	r0, r0
 1ce:	88 0b       	sbc	r24, r24
 1d0:	99 0b       	sbc	r25, r25
 1d2:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
 1d6:	04 c0       	rjmp	.+8      	; 0x1e0 <setMotorPWM+0x64>
 1d8:	60 e0       	ldi	r22, 0x00	; 0
 1da:	70 e0       	ldi	r23, 0x00	; 0
 1dc:	88 e4       	ldi	r24, 0x48	; 72
 1de:	93 e4       	ldi	r25, 0x43	; 67
 1e0:	0e 94 1b 05 	call	0xa36	; 0xa36 <ceil>
 1e4:	9b 01       	movw	r18, r22
 1e6:	ac 01       	movw	r20, r24
 1e8:	60 e0       	ldi	r22, 0x00	; 0
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	8f e7       	ldi	r24, 0x7F	; 127
 1ee:	93 e4       	ldi	r25, 0x43	; 67
 1f0:	0e 94 ae 04 	call	0x95c	; 0x95c <__subsf3>
 1f4:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
 1f8:	68 bd       	out	0x28, r22	; 40
 1fa:	08 95       	ret

000001fc <init_digital_comm>:
 1fc:	20 98       	cbi	0x04, 0	; 4
 1fe:	24 9a       	sbi	0x04, 4	; 4
 200:	85 b1       	in	r24, 0x05	; 5
 202:	8e 7e       	andi	r24, 0xEE	; 238
 204:	85 b9       	out	0x05, r24	; 5
 206:	e8 e6       	ldi	r30, 0x68	; 104
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	81 60       	ori	r24, 0x01	; 1
 20e:	80 83       	st	Z, r24
 210:	eb e6       	ldi	r30, 0x6B	; 107
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	80 81       	ld	r24, Z
 216:	81 60       	ori	r24, 0x01	; 1
 218:	80 83       	st	Z, r24
 21a:	08 95       	ret

0000021c <pancakeDone>:
 21c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <pancake_done>
 220:	88 23       	and	r24, r24
 222:	21 f0       	breq	.+8      	; 0x22c <pancakeDone+0x10>
 224:	2c 9a       	sbi	0x05, 4	; 5
 226:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <pancake_done>
 22a:	08 95       	ret
 22c:	2c 98       	cbi	0x05, 4	; 5
 22e:	08 95       	ret

00000230 <__vector_3>:
 230:	1f 92       	push	r1
 232:	0f 92       	push	r0
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	0f 92       	push	r0
 238:	11 24       	eor	r1, r1
 23a:	8f 93       	push	r24
 23c:	9f 93       	push	r25
 23e:	18 9b       	sbis	0x03, 0	; 3
 240:	06 c0       	rjmp	.+12     	; 0x24e <__vector_3+0x1e>
 242:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <heat_on_ctrl>
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	89 27       	eor	r24, r25
 24a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <heat_on_ctrl>
 24e:	9f 91       	pop	r25
 250:	8f 91       	pop	r24
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <__vector_21>:
 25c:	1f 92       	push	r1
 25e:	0f 92       	push	r0
 260:	0f b6       	in	r0, 0x3f	; 63
 262:	0f 92       	push	r0
 264:	11 24       	eor	r1, r1
 266:	8f 92       	push	r8
 268:	9f 92       	push	r9
 26a:	af 92       	push	r10
 26c:	bf 92       	push	r11
 26e:	cf 92       	push	r12
 270:	df 92       	push	r13
 272:	ef 92       	push	r14
 274:	ff 92       	push	r15
 276:	2f 93       	push	r18
 278:	3f 93       	push	r19
 27a:	4f 93       	push	r20
 27c:	5f 93       	push	r21
 27e:	6f 93       	push	r22
 280:	7f 93       	push	r23
 282:	8f 93       	push	r24
 284:	9f 93       	push	r25
 286:	af 93       	push	r26
 288:	bf 93       	push	r27
 28a:	ef 93       	push	r30
 28c:	ff 93       	push	r31
 28e:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
 292:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
 296:	83 70       	andi	r24, 0x03	; 3
 298:	90 e0       	ldi	r25, 0x00	; 0
 29a:	98 2f       	mov	r25, r24
 29c:	88 27       	eor	r24, r24
 29e:	82 0f       	add	r24, r18
 2a0:	91 1d       	adc	r25, r1
 2a2:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <curr_pan>
 2a6:	21 11       	cpse	r18, r1
 2a8:	0d c0       	rjmp	.+26     	; 0x2c4 <__vector_21+0x68>
 2aa:	9c 01       	movw	r18, r24
 2ac:	22 5a       	subi	r18, 0xA2	; 162
 2ae:	33 40       	sbci	r19, 0x03	; 3
 2b0:	2f 31       	cpi	r18, 0x1F	; 31
 2b2:	31 05       	cpc	r19, r1
 2b4:	20 f4       	brcc	.+8      	; 0x2be <__vector_21+0x62>
 2b6:	21 e0       	ldi	r18, 0x01	; 1
 2b8:	20 93 09 01 	sts	0x0109, r18	; 0x800109 <heat_ok_pan1>
 2bc:	0f c0       	rjmp	.+30     	; 0x2dc <__vector_21+0x80>
 2be:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <heat_ok_pan1>
 2c2:	0c c0       	rjmp	.+24     	; 0x2dc <__vector_21+0x80>
 2c4:	9c 01       	movw	r18, r24
 2c6:	22 5a       	subi	r18, 0xA2	; 162
 2c8:	33 40       	sbci	r19, 0x03	; 3
 2ca:	2f 31       	cpi	r18, 0x1F	; 31
 2cc:	31 05       	cpc	r19, r1
 2ce:	20 f4       	brcc	.+8      	; 0x2d8 <__vector_21+0x7c>
 2d0:	21 e0       	ldi	r18, 0x01	; 1
 2d2:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <heat_ok_pan2>
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <__vector_21+0x80>
 2d8:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <heat_ok_pan2>
 2dc:	20 91 09 01 	lds	r18, 0x0109	; 0x800109 <heat_ok_pan1>
 2e0:	22 23       	and	r18, r18
 2e2:	19 f0       	breq	.+6      	; 0x2ea <__vector_21+0x8e>
 2e4:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <heat_ok_pan2>
 2e8:	02 c0       	rjmp	.+4      	; 0x2ee <__vector_21+0x92>
 2ea:	20 e0       	ldi	r18, 0x00	; 0
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	21 70       	andi	r18, 0x01	; 1
 2f0:	20 93 07 01 	sts	0x0107, r18	; 0x800107 <heat_ok>
 2f4:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <heat_on_ctrl>
 2f8:	21 11       	cpse	r18, r1
 2fa:	0d c0       	rjmp	.+26     	; 0x316 <__vector_21+0xba>
 2fc:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <integral>
 300:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <integral+0x1>
 304:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <integral+0x2>
 308:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <integral+0x3>
 30c:	80 e0       	ldi	r24, 0x00	; 0
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	0e 94 7e 00 	call	0xfc	; 0xfc <setPWMLevel>
 314:	4e c0       	rjmp	.+156    	; 0x3b2 <__vector_21+0x156>
 316:	61 eb       	ldi	r22, 0xB1	; 177
 318:	73 e0       	ldi	r23, 0x03	; 3
 31a:	68 1b       	sub	r22, r24
 31c:	79 0b       	sbc	r23, r25
 31e:	07 2e       	mov	r0, r23
 320:	00 0c       	add	r0, r0
 322:	88 0b       	sbc	r24, r24
 324:	99 0b       	sbc	r25, r25
 326:	0e 94 6a 05 	call	0xad4	; 0xad4 <__floatsisf>
 32a:	6b 01       	movw	r12, r22
 32c:	7c 01       	movw	r14, r24
 32e:	80 90 26 01 	lds	r8, 0x0126	; 0x800126 <integral>
 332:	90 90 27 01 	lds	r9, 0x0127	; 0x800127 <integral+0x1>
 336:	a0 90 28 01 	lds	r10, 0x0128	; 0x800128 <integral+0x2>
 33a:	b0 90 29 01 	lds	r11, 0x0129	; 0x800129 <integral+0x3>
 33e:	20 e0       	ldi	r18, 0x00	; 0
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	a9 01       	movw	r20, r18
 344:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
 348:	a5 01       	movw	r20, r10
 34a:	94 01       	movw	r18, r8
 34c:	0e 94 af 04 	call	0x95e	; 0x95e <__addsf3>
 350:	60 93 26 01 	sts	0x0126, r22	; 0x800126 <integral>
 354:	70 93 27 01 	sts	0x0127, r23	; 0x800127 <integral+0x1>
 358:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <integral+0x2>
 35c:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <integral+0x3>
 360:	80 90 26 01 	lds	r8, 0x0126	; 0x800126 <integral>
 364:	90 90 27 01 	lds	r9, 0x0127	; 0x800127 <integral+0x1>
 368:	a0 90 28 01 	lds	r10, 0x0128	; 0x800128 <integral+0x2>
 36c:	b0 90 29 01 	lds	r11, 0x0129	; 0x800129 <integral+0x3>
 370:	25 ec       	ldi	r18, 0xC5	; 197
 372:	30 e2       	ldi	r19, 0x20	; 32
 374:	40 e8       	ldi	r20, 0x80	; 128
 376:	5f e3       	ldi	r21, 0x3F	; 63
 378:	c7 01       	movw	r24, r14
 37a:	b6 01       	movw	r22, r12
 37c:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
 380:	6b 01       	movw	r12, r22
 382:	7c 01       	movw	r14, r24
 384:	2f e6       	ldi	r18, 0x6F	; 111
 386:	32 e1       	ldi	r19, 0x12	; 18
 388:	43 e8       	ldi	r20, 0x83	; 131
 38a:	5a e3       	ldi	r21, 0x3A	; 58
 38c:	c5 01       	movw	r24, r10
 38e:	b4 01       	movw	r22, r8
 390:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
 394:	9b 01       	movw	r18, r22
 396:	ac 01       	movw	r20, r24
 398:	c7 01       	movw	r24, r14
 39a:	b6 01       	movw	r22, r12
 39c:	0e 94 af 04 	call	0x95e	; 0x95e <__addsf3>
 3a0:	0e 94 32 05 	call	0xa64	; 0xa64 <__fixsfsi>
 3a4:	cb 01       	movw	r24, r22
 3a6:	99 23       	and	r25, r25
 3a8:	14 f4       	brge	.+4      	; 0x3ae <__vector_21+0x152>
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 7e 00 	call	0xfc	; 0xfc <setPWMLevel>
 3b2:	90 91 2a 01 	lds	r25, 0x012A	; 0x80012a <curr_pan>
 3b6:	81 e0       	ldi	r24, 0x01	; 1
 3b8:	98 27       	eor	r25, r24
 3ba:	90 93 2a 01 	sts	0x012A, r25	; 0x80012a <curr_pan>
 3be:	ec e7       	ldi	r30, 0x7C	; 124
 3c0:	f0 e0       	ldi	r31, 0x00	; 0
 3c2:	90 81       	ld	r25, Z
 3c4:	89 27       	eor	r24, r25
 3c6:	80 83       	st	Z, r24
 3c8:	ea e7       	ldi	r30, 0x7A	; 122
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	80 64       	ori	r24, 0x40	; 64
 3d0:	80 83       	st	Z, r24
 3d2:	ff 91       	pop	r31
 3d4:	ef 91       	pop	r30
 3d6:	bf 91       	pop	r27
 3d8:	af 91       	pop	r26
 3da:	9f 91       	pop	r25
 3dc:	8f 91       	pop	r24
 3de:	7f 91       	pop	r23
 3e0:	6f 91       	pop	r22
 3e2:	5f 91       	pop	r21
 3e4:	4f 91       	pop	r20
 3e6:	3f 91       	pop	r19
 3e8:	2f 91       	pop	r18
 3ea:	ff 90       	pop	r15
 3ec:	ef 90       	pop	r14
 3ee:	df 90       	pop	r13
 3f0:	cf 90       	pop	r12
 3f2:	bf 90       	pop	r11
 3f4:	af 90       	pop	r10
 3f6:	9f 90       	pop	r9
 3f8:	8f 90       	pop	r8
 3fa:	0f 90       	pop	r0
 3fc:	0f be       	out	0x3f, r0	; 63
 3fe:	0f 90       	pop	r0
 400:	1f 90       	pop	r1
 402:	18 95       	reti

00000404 <__vector_1>:
 404:	1f 92       	push	r1
 406:	0f 92       	push	r0
 408:	0f b6       	in	r0, 0x3f	; 63
 40a:	0f 92       	push	r0
 40c:	11 24       	eor	r1, r1
 40e:	2f 93       	push	r18
 410:	3f 93       	push	r19
 412:	4f 93       	push	r20
 414:	5f 93       	push	r21
 416:	6f 93       	push	r22
 418:	7f 93       	push	r23
 41a:	8f 93       	push	r24
 41c:	9f 93       	push	r25
 41e:	af 93       	push	r26
 420:	bf 93       	push	r27
 422:	ef 93       	push	r30
 424:	ff 93       	push	r31
 426:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <I2C_SLAVE_startRecived>
 42a:	88 23       	and	r24, r24
 42c:	09 f4       	brne	.+2      	; 0x430 <__vector_1+0x2c>
 42e:	55 c1       	rjmp	.+682    	; 0x6da <__vector_1+0x2d6>
 430:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
 434:	83 70       	andi	r24, 0x03	; 3
 436:	83 30       	cpi	r24, 0x03	; 3
 438:	09 f0       	breq	.+2      	; 0x43c <__vector_1+0x38>
 43a:	af c0       	rjmp	.+350    	; 0x59a <__vector_1+0x196>
 43c:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <I2C_SLAVE_haveSended>
 440:	88 30       	cpi	r24, 0x08	; 8
 442:	40 f0       	brcs	.+16     	; 0x454 <__vector_1+0x50>
 444:	10 92 1f 01 	sts	0x011F, r1	; 0x80011f <I2C_SLAVE_haveSended>
 448:	8a b1       	in	r24, 0x0a	; 10
 44a:	8b 7e       	andi	r24, 0xEB	; 235
 44c:	8a b9       	out	0x0a, r24	; 10
 44e:	8b b1       	in	r24, 0x0b	; 11
 450:	84 61       	ori	r24, 0x14	; 20
 452:	8b b9       	out	0x0b, r24	; 11
 454:	80 91 23 01 	lds	r24, 0x0123	; 0x800123 <I2C_SLAVE_recevedBits>
 458:	87 30       	cpi	r24, 0x07	; 7
 45a:	20 f5       	brcc	.+72     	; 0x4a4 <__vector_1+0xa0>
 45c:	66 e0       	ldi	r22, 0x06	; 6
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	68 1b       	sub	r22, r24
 462:	71 09       	sbc	r23, r1
 464:	21 e0       	ldi	r18, 0x01	; 1
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	a9 01       	movw	r20, r18
 46a:	06 2e       	mov	r0, r22
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__vector_1+0x6e>
 46e:	44 0f       	add	r20, r20
 470:	55 1f       	adc	r21, r21
 472:	0a 94       	dec	r0
 474:	e2 f7       	brpl	.-8      	; 0x46e <__vector_1+0x6a>
 476:	99 b1       	in	r25, 0x09	; 9
 478:	54 2f       	mov	r21, r20
 47a:	50 95       	com	r21
 47c:	20 91 24 01 	lds	r18, 0x0124	; 0x800124 <I2C_SLAVE_recevedAddr>
 480:	52 23       	and	r21, r18
 482:	92 95       	swap	r25
 484:	9f 70       	andi	r25, 0x0F	; 15
 486:	29 2f       	mov	r18, r25
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	02 c0       	rjmp	.+4      	; 0x490 <__vector_1+0x8c>
 48c:	22 0f       	add	r18, r18
 48e:	33 1f       	adc	r19, r19
 490:	6a 95       	dec	r22
 492:	e2 f7       	brpl	.-8      	; 0x48c <__vector_1+0x88>
 494:	24 23       	and	r18, r20
 496:	25 0f       	add	r18, r21
 498:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <I2C_SLAVE_recevedAddr>
 49c:	8f 5f       	subi	r24, 0xFF	; 255
 49e:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <I2C_SLAVE_recevedBits>
 4a2:	1b c1       	rjmp	.+566    	; 0x6da <__vector_1+0x2d6>
 4a4:	90 91 24 01 	lds	r25, 0x0124	; 0x800124 <I2C_SLAVE_recevedAddr>
 4a8:	90 37       	cpi	r25, 0x70	; 112
 4aa:	09 f0       	breq	.+2      	; 0x4ae <__vector_1+0xaa>
 4ac:	16 c1       	rjmp	.+556    	; 0x6da <__vector_1+0x2d6>
 4ae:	88 30       	cpi	r24, 0x08	; 8
 4b0:	b8 f4       	brcc	.+46     	; 0x4e0 <__vector_1+0xdc>
 4b2:	8f 5f       	subi	r24, 0xFF	; 255
 4b4:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <I2C_SLAVE_recevedBits>
 4b8:	89 b1       	in	r24, 0x09	; 9
 4ba:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <I2C_SLAVE_shouldWrite>
 4be:	9e 7f       	andi	r25, 0xFE	; 254
 4c0:	82 95       	swap	r24
 4c2:	81 70       	andi	r24, 0x01	; 1
 4c4:	89 0f       	add	r24, r25
 4c6:	80 93 25 01 	sts	0x0125, r24	; 0x800125 <I2C_SLAVE_shouldWrite>
 4ca:	88 23       	and	r24, r24
 4cc:	19 f0       	breq	.+6      	; 0x4d4 <__vector_1+0xd0>
 4ce:	81 e0       	ldi	r24, 0x01	; 1
 4d0:	80 93 1b 01 	sts	0x011B, r24	; 0x80011b <I2C_SLAVE_beginHold>
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_SLAVE_sendBit>
 4da:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_SLAVE_beginSend>
 4de:	fd c0       	rjmp	.+506    	; 0x6da <__vector_1+0x2d6>
 4e0:	81 31       	cpi	r24, 0x11	; 17
 4e2:	08 f0       	brcs	.+2      	; 0x4e6 <__vector_1+0xe2>
 4e4:	fa c0       	rjmp	.+500    	; 0x6da <__vector_1+0x2d6>
 4e6:	6f e0       	ldi	r22, 0x0F	; 15
 4e8:	70 e0       	ldi	r23, 0x00	; 0
 4ea:	68 1b       	sub	r22, r24
 4ec:	71 09       	sbc	r23, r1
 4ee:	21 e0       	ldi	r18, 0x01	; 1
 4f0:	30 e0       	ldi	r19, 0x00	; 0
 4f2:	a9 01       	movw	r20, r18
 4f4:	06 2e       	mov	r0, r22
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <__vector_1+0xf8>
 4f8:	44 0f       	add	r20, r20
 4fa:	55 1f       	adc	r21, r21
 4fc:	0a 94       	dec	r0
 4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <__vector_1+0xf4>
 500:	99 b1       	in	r25, 0x09	; 9
 502:	54 2f       	mov	r21, r20
 504:	50 95       	com	r21
 506:	20 91 1e 01 	lds	r18, 0x011E	; 0x80011e <I2C_SLAVE_recevedData>
 50a:	52 23       	and	r21, r18
 50c:	92 95       	swap	r25
 50e:	9f 70       	andi	r25, 0x0F	; 15
 510:	29 2f       	mov	r18, r25
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__vector_1+0x116>
 516:	22 0f       	add	r18, r18
 518:	33 1f       	adc	r19, r19
 51a:	6a 95       	dec	r22
 51c:	e2 f7       	brpl	.-8      	; 0x516 <__vector_1+0x112>
 51e:	24 23       	and	r18, r20
 520:	25 0f       	add	r18, r21
 522:	20 93 1e 01 	sts	0x011E, r18	; 0x80011e <I2C_SLAVE_recevedData>
 526:	8f 5f       	subi	r24, 0xFF	; 255
 528:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <I2C_SLAVE_recevedBits>
 52c:	80 31       	cpi	r24, 0x10	; 16
 52e:	09 f0       	breq	.+2      	; 0x532 <__vector_1+0x12e>
 530:	d4 c0       	rjmp	.+424    	; 0x6da <__vector_1+0x2d6>
 532:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <I2C_SLAVE_full>
 536:	88 23       	and	r24, r24
 538:	69 f0       	breq	.+26     	; 0x554 <__vector_1+0x150>
 53a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_SLAVE_first>
 53e:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_SLAVE_first>
 542:	8f 5f       	subi	r24, 0xFF	; 255
 544:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <I2C_SLAVE_first>
 548:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_SLAVE_first>
 54c:	8a 30       	cpi	r24, 0x0A	; 10
 54e:	10 f0       	brcs	.+4      	; 0x554 <__vector_1+0x150>
 550:	10 92 1a 01 	sts	0x011A, r1	; 0x80011a <I2C_SLAVE_first>
 554:	e0 91 19 01 	lds	r30, 0x0119	; 0x800119 <I2C_SLAVE_last>
 558:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <I2C_SLAVE_last>
 55c:	8f 5f       	subi	r24, 0xFF	; 255
 55e:	80 93 19 01 	sts	0x0119, r24	; 0x800119 <I2C_SLAVE_last>
 562:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <I2C_SLAVE_last>
 566:	8a 30       	cpi	r24, 0x0A	; 10
 568:	10 f0       	brcs	.+4      	; 0x56e <__vector_1+0x16a>
 56a:	10 92 19 01 	sts	0x0119, r1	; 0x800119 <I2C_SLAVE_last>
 56e:	f0 e0       	ldi	r31, 0x00	; 0
 570:	e2 5f       	subi	r30, 0xF2	; 242
 572:	fe 4f       	sbci	r31, 0xFE	; 254
 574:	20 83       	st	Z, r18
 576:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <I2C_SLAVE_last>
 57a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <I2C_SLAVE_first>
 57e:	98 13       	cpse	r25, r24
 580:	03 c0       	rjmp	.+6      	; 0x588 <__vector_1+0x184>
 582:	81 e0       	ldi	r24, 0x01	; 1
 584:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <I2C_SLAVE_full>
 588:	80 e0       	ldi	r24, 0x00	; 0
 58a:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_SLAVE_sendBit>
 58e:	0e 94 6b 00 	call	0xd6	; 0xd6 <I2C_SLAVE_beginSend>
 592:	88 e0       	ldi	r24, 0x08	; 8
 594:	80 93 23 01 	sts	0x0123, r24	; 0x800123 <I2C_SLAVE_recevedBits>
 598:	a0 c0       	rjmp	.+320    	; 0x6da <__vector_1+0x2d6>
 59a:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <__DATA_REGION_ORIGIN__+0x9>
 59e:	83 70       	andi	r24, 0x03	; 3
 5a0:	82 30       	cpi	r24, 0x02	; 2
 5a2:	09 f0       	breq	.+2      	; 0x5a6 <__vector_1+0x1a2>
 5a4:	9a c0       	rjmp	.+308    	; 0x6da <__vector_1+0x2d6>
 5a6:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <I2C_SLAVE_haveSended>
 5aa:	38 30       	cpi	r19, 0x08	; 8
 5ac:	08 f4       	brcc	.+2      	; 0x5b0 <__vector_1+0x1ac>
 5ae:	5d c0       	rjmp	.+186    	; 0x66a <__vector_1+0x266>
 5b0:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <I2C_SLAVE_dataReady>
 5b4:	82 50       	subi	r24, 0x02	; 2
 5b6:	82 30       	cpi	r24, 0x02	; 2
 5b8:	c8 f5       	brcc	.+114    	; 0x62c <__vector_1+0x228>
 5ba:	81 e0       	ldi	r24, 0x01	; 1
 5bc:	80 93 20 01 	sts	0x0120, r24	; 0x800120 <I2C_SLAVE_dataReady>
 5c0:	80 91 21 01 	lds	r24, 0x0121	; 0x800121 <I2C_SLAVE_tempSave>
 5c4:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <I2C_SLAVE_toSend>
 5c8:	80 91 25 01 	lds	r24, 0x0125	; 0x800125 <I2C_SLAVE_shouldWrite>
 5cc:	88 23       	and	r24, r24
 5ce:	59 f1       	breq	.+86     	; 0x626 <__vector_1+0x222>
 5d0:	81 e0       	ldi	r24, 0x01	; 1
 5d2:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <I2C_SLAVE_haveSended>
 5d6:	2a b1       	in	r18, 0x0a	; 10
 5d8:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_toSend>
 5dc:	90 e0       	ldi	r25, 0x00	; 0
 5de:	80 95       	com	r24
 5e0:	90 95       	com	r25
 5e2:	88 0f       	add	r24, r24
 5e4:	89 2f       	mov	r24, r25
 5e6:	88 1f       	adc	r24, r24
 5e8:	99 0b       	sbc	r25, r25
 5ea:	82 95       	swap	r24
 5ec:	92 95       	swap	r25
 5ee:	90 7f       	andi	r25, 0xF0	; 240
 5f0:	98 27       	eor	r25, r24
 5f2:	80 7f       	andi	r24, 0xF0	; 240
 5f4:	98 27       	eor	r25, r24
 5f6:	80 71       	andi	r24, 0x10	; 16
 5f8:	92 2f       	mov	r25, r18
 5fa:	9f 7e       	andi	r25, 0xEF	; 239
 5fc:	89 0f       	add	r24, r25
 5fe:	8a b9       	out	0x0a, r24	; 10
 600:	2b b1       	in	r18, 0x0b	; 11
 602:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_toSend>
 606:	88 1f       	adc	r24, r24
 608:	88 27       	eor	r24, r24
 60a:	88 1f       	adc	r24, r24
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	82 95       	swap	r24
 610:	92 95       	swap	r25
 612:	90 7f       	andi	r25, 0xF0	; 240
 614:	98 27       	eor	r25, r24
 616:	80 7f       	andi	r24, 0xF0	; 240
 618:	98 27       	eor	r25, r24
 61a:	80 71       	andi	r24, 0x10	; 16
 61c:	92 2f       	mov	r25, r18
 61e:	9f 7e       	andi	r25, 0xEF	; 239
 620:	89 0f       	add	r24, r25
 622:	8b b9       	out	0x0b, r24	; 11
 624:	07 c0       	rjmp	.+14     	; 0x634 <__vector_1+0x230>
 626:	54 98       	cbi	0x0a, 4	; 10
 628:	5c 9a       	sbi	0x0b, 4	; 11
 62a:	04 c0       	rjmp	.+8      	; 0x634 <__vector_1+0x230>
 62c:	10 92 20 01 	sts	0x0120, r1	; 0x800120 <I2C_SLAVE_dataReady>
 630:	54 98       	cbi	0x0a, 4	; 10
 632:	5c 9a       	sbi	0x0b, 4	; 11
 634:	80 91 1b 01 	lds	r24, 0x011B	; 0x80011b <I2C_SLAVE_beginHold>
 638:	88 23       	and	r24, r24
 63a:	71 f0       	breq	.+28     	; 0x658 <__vector_1+0x254>
 63c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <I2C_SLAVE_dataReady>
 640:	81 50       	subi	r24, 0x01	; 1
 642:	82 30       	cpi	r24, 0x02	; 2
 644:	18 f4       	brcc	.+6      	; 0x64c <__vector_1+0x248>
 646:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <I2C_SLAVE_beginHold>
 64a:	47 c0       	rjmp	.+142    	; 0x6da <__vector_1+0x2d6>
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <I2C_SLAVE_canSend>
 652:	52 9a       	sbi	0x0a, 2	; 10
 654:	5a 98       	cbi	0x0b, 2	; 11
 656:	41 c0       	rjmp	.+130    	; 0x6da <__vector_1+0x2d6>
 658:	e9 e6       	ldi	r30, 0x69	; 105
 65a:	f0 e0       	ldi	r31, 0x00	; 0
 65c:	80 81       	ld	r24, Z
 65e:	82 60       	ori	r24, 0x02	; 2
 660:	80 83       	st	Z, r24
 662:	80 81       	ld	r24, Z
 664:	81 60       	ori	r24, 0x01	; 1
 666:	80 83       	st	Z, r24
 668:	38 c0       	rjmp	.+112    	; 0x6da <__vector_1+0x2d6>
 66a:	2a b1       	in	r18, 0x0a	; 10
 66c:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_toSend>
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	80 95       	com	r24
 674:	90 95       	com	r25
 676:	47 e0       	ldi	r20, 0x07	; 7
 678:	50 e0       	ldi	r21, 0x00	; 0
 67a:	ba 01       	movw	r22, r20
 67c:	63 1b       	sub	r22, r19
 67e:	71 09       	sbc	r23, r1
 680:	02 c0       	rjmp	.+4      	; 0x686 <__vector_1+0x282>
 682:	95 95       	asr	r25
 684:	87 95       	ror	r24
 686:	6a 95       	dec	r22
 688:	e2 f7       	brpl	.-8      	; 0x682 <__vector_1+0x27e>
 68a:	82 95       	swap	r24
 68c:	92 95       	swap	r25
 68e:	90 7f       	andi	r25, 0xF0	; 240
 690:	98 27       	eor	r25, r24
 692:	80 7f       	andi	r24, 0xF0	; 240
 694:	98 27       	eor	r25, r24
 696:	80 71       	andi	r24, 0x10	; 16
 698:	92 2f       	mov	r25, r18
 69a:	9f 7e       	andi	r25, 0xEF	; 239
 69c:	89 0f       	add	r24, r25
 69e:	8a b9       	out	0x0a, r24	; 10
 6a0:	2b b1       	in	r18, 0x0b	; 11
 6a2:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <I2C_SLAVE_toSend>
 6a6:	90 e0       	ldi	r25, 0x00	; 0
 6a8:	30 91 1f 01 	lds	r19, 0x011F	; 0x80011f <I2C_SLAVE_haveSended>
 6ac:	43 1b       	sub	r20, r19
 6ae:	51 09       	sbc	r21, r1
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <__vector_1+0x2b2>
 6b2:	95 95       	asr	r25
 6b4:	87 95       	ror	r24
 6b6:	4a 95       	dec	r20
 6b8:	e2 f7       	brpl	.-8      	; 0x6b2 <__vector_1+0x2ae>
 6ba:	82 95       	swap	r24
 6bc:	92 95       	swap	r25
 6be:	90 7f       	andi	r25, 0xF0	; 240
 6c0:	98 27       	eor	r25, r24
 6c2:	80 7f       	andi	r24, 0xF0	; 240
 6c4:	98 27       	eor	r25, r24
 6c6:	80 71       	andi	r24, 0x10	; 16
 6c8:	92 2f       	mov	r25, r18
 6ca:	9f 7e       	andi	r25, 0xEF	; 239
 6cc:	89 0f       	add	r24, r25
 6ce:	8b b9       	out	0x0b, r24	; 11
 6d0:	80 91 1f 01 	lds	r24, 0x011F	; 0x80011f <I2C_SLAVE_haveSended>
 6d4:	8f 5f       	subi	r24, 0xFF	; 255
 6d6:	80 93 1f 01 	sts	0x011F, r24	; 0x80011f <I2C_SLAVE_haveSended>
 6da:	ff 91       	pop	r31
 6dc:	ef 91       	pop	r30
 6de:	bf 91       	pop	r27
 6e0:	af 91       	pop	r26
 6e2:	9f 91       	pop	r25
 6e4:	8f 91       	pop	r24
 6e6:	7f 91       	pop	r23
 6e8:	6f 91       	pop	r22
 6ea:	5f 91       	pop	r21
 6ec:	4f 91       	pop	r20
 6ee:	3f 91       	pop	r19
 6f0:	2f 91       	pop	r18
 6f2:	0f 90       	pop	r0
 6f4:	0f be       	out	0x3f, r0	; 63
 6f6:	0f 90       	pop	r0
 6f8:	1f 90       	pop	r1
 6fa:	18 95       	reti

000006fc <__vector_5>:
 6fc:	1f 92       	push	r1
 6fe:	0f 92       	push	r0
 700:	0f b6       	in	r0, 0x3f	; 63
 702:	0f 92       	push	r0
 704:	11 24       	eor	r1, r1
 706:	8f 93       	push	r24
 708:	ef 93       	push	r30
 70a:	ff 93       	push	r31
 70c:	4a 9b       	sbis	0x09, 2	; 9
 70e:	1e c0       	rjmp	.+60     	; 0x74c <__vector_5+0x50>
 710:	4c 9b       	sbis	0x09, 4	; 9
 712:	03 c0       	rjmp	.+6      	; 0x71a <__vector_5+0x1e>
 714:	10 92 1d 01 	sts	0x011D, r1	; 0x80011d <I2C_SLAVE_startRecived>
 718:	03 c0       	rjmp	.+6      	; 0x720 <__vector_5+0x24>
 71a:	81 e0       	ldi	r24, 0x01	; 1
 71c:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <I2C_SLAVE_startRecived>
 720:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <I2C_SLAVE_startRecived>
 724:	81 11       	cpse	r24, r1
 726:	12 c0       	rjmp	.+36     	; 0x74c <__vector_5+0x50>
 728:	10 92 1b 01 	sts	0x011B, r1	; 0x80011b <I2C_SLAVE_beginHold>
 72c:	10 92 1c 01 	sts	0x011C, r1	; 0x80011c <I2C_SLAVE_canSend>
 730:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <I2C_SLAVE_recevedAddr>
 734:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <I2C_SLAVE_shouldWrite>
 738:	10 92 23 01 	sts	0x0123, r1	; 0x800123 <I2C_SLAVE_recevedBits>
 73c:	e9 e6       	ldi	r30, 0x69	; 105
 73e:	f0 e0       	ldi	r31, 0x00	; 0
 740:	80 81       	ld	r24, Z
 742:	82 60       	ori	r24, 0x02	; 2
 744:	80 83       	st	Z, r24
 746:	80 81       	ld	r24, Z
 748:	81 60       	ori	r24, 0x01	; 1
 74a:	80 83       	st	Z, r24
 74c:	ff 91       	pop	r31
 74e:	ef 91       	pop	r30
 750:	8f 91       	pop	r24
 752:	0f 90       	pop	r0
 754:	0f be       	out	0x3f, r0	; 63
 756:	0f 90       	pop	r0
 758:	1f 90       	pop	r1
 75a:	18 95       	reti

0000075c <__vector_9>:
	
	//Reset count
	TCNT2 = 0x00;
}

ISR(TIMER2_OVF_vect) {
 75c:	1f 92       	push	r1
 75e:	0f 92       	push	r0
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	0f 92       	push	r0
 764:	11 24       	eor	r1, r1
 766:	2f 93       	push	r18
 768:	3f 93       	push	r19
 76a:	4f 93       	push	r20
 76c:	5f 93       	push	r21
 76e:	6f 93       	push	r22
 770:	7f 93       	push	r23
 772:	8f 93       	push	r24
 774:	9f 93       	push	r25
 776:	af 93       	push	r26
 778:	bf 93       	push	r27
 77a:	ef 93       	push	r30
 77c:	ff 93       	push	r31
	
	switch (curr_time++) {
 77e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <curr_time>
 782:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <curr_time+0x1>
 786:	9c 01       	movw	r18, r24
 788:	2f 5f       	subi	r18, 0xFF	; 255
 78a:	3f 4f       	sbci	r19, 0xFF	; 255
 78c:	30 93 0d 01 	sts	0x010D, r19	; 0x80010d <curr_time+0x1>
 790:	20 93 0c 01 	sts	0x010C, r18	; 0x80010c <curr_time>
 794:	86 3d       	cpi	r24, 0xD6	; 214
 796:	26 e0       	ldi	r18, 0x06	; 6
 798:	92 07       	cpc	r25, r18
 79a:	71 f1       	breq	.+92     	; 0x7f8 <__vector_9+0x9c>
 79c:	20 f4       	brcc	.+8      	; 0x7a6 <__vector_9+0x4a>
 79e:	88 3e       	cpi	r24, 0xE8	; 232
 7a0:	93 40       	sbci	r25, 0x03	; 3
 7a2:	51 f0       	breq	.+20     	; 0x7b8 <__vector_9+0x5c>
 7a4:	6d c0       	rjmp	.+218    	; 0x880 <__vector_9+0x124>
 7a6:	8e 3b       	cpi	r24, 0xBE	; 190
 7a8:	2a e0       	ldi	r18, 0x0A	; 10
 7aa:	92 07       	cpc	r25, r18
 7ac:	29 f0       	breq	.+10     	; 0x7b8 <__vector_9+0x5c>
 7ae:	8c 3a       	cpi	r24, 0xAC	; 172
 7b0:	9d 40       	sbci	r25, 0x0D	; 13
 7b2:	09 f4       	brne	.+2      	; 0x7b6 <__vector_9+0x5a>
 7b4:	47 c0       	rjmp	.+142    	; 0x844 <__vector_9+0xe8>
 7b6:	64 c0       	rjmp	.+200    	; 0x880 <__vector_9+0x124>
		
		//Mid way time to break
		case MOTOR_FORWARD_TIME_S:
		case MOTOR_BACKWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 7b8:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 7bc:	81 11       	cpse	r24, r1
 7be:	0e c0       	rjmp	.+28     	; 0x7dc <__vector_9+0x80>
				MOTOR1_DISABLE();
 7c0:	84 b5       	in	r24, 0x24	; 36
 7c2:	8f 7c       	andi	r24, 0xCF	; 207
 7c4:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BREAK, motor_flipping);
 7c6:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 7ca:	84 e6       	ldi	r24, 0x64	; 100
 7cc:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR1_SETING(MOTOR_BREAK);
 7d0:	5b 98       	cbi	0x0b, 3	; 11
 7d2:	5f 98       	cbi	0x0b, 7	; 11
				MOTOR1_ENABLE();
 7d4:	84 b5       	in	r24, 0x24	; 36
 7d6:	80 63       	ori	r24, 0x30	; 48
 7d8:	84 bd       	out	0x24, r24	; 36
 7da:	52 c0       	rjmp	.+164    	; 0x880 <__vector_9+0x124>
			}
			else {
				MOTOR2_DISABLE();
 7dc:	84 b5       	in	r24, 0x24	; 36
 7de:	8f 73       	andi	r24, 0x3F	; 63
 7e0:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BREAK, motor_flipping);
 7e2:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 7e6:	84 e6       	ldi	r24, 0x64	; 100
 7e8:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR2_SETING(MOTOR_BREAK);
 7ec:	44 98       	cbi	0x08, 4	; 8
 7ee:	45 98       	cbi	0x08, 5	; 8
				MOTOR2_ENABLE();
 7f0:	84 b5       	in	r24, 0x24	; 36
 7f2:	80 6c       	ori	r24, 0xC0	; 192
 7f4:	84 bd       	out	0x24, r24	; 36
 7f6:	44 c0       	rjmp	.+136    	; 0x880 <__vector_9+0x124>
			}
			break;
		
		//We have stopped the pan at pancake destination time to go back
		case MOTOR_BREAK_FORWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 7f8:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 7fc:	81 11       	cpse	r24, r1
 7fe:	14 c0       	rjmp	.+40     	; 0x828 <__vector_9+0xcc>
				MOTOR1_DISABLE();
 800:	84 b5       	in	r24, 0x24	; 36
 802:	8f 7c       	andi	r24, 0xCF	; 207
 804:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BACKWARD, motor_flipping);
 806:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 80a:	82 e4       	ldi	r24, 0x42	; 66
 80c:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR1_SETING(MOTOR_BACKWARD);
 810:	5b 98       	cbi	0x0b, 3	; 11
 812:	5f 9a       	sbi	0x0b, 7	; 11
				MOTOR1_ENABLE();
 814:	84 b5       	in	r24, 0x24	; 36
 816:	80 63       	ori	r24, 0x30	; 48
 818:	84 bd       	out	0x24, r24	; 36
}

static void startTimePan2(){
	
	//Set internal flag
	pan2_cooking_time = 0;
 81a:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <__data_end+0x1>
 81e:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__data_end>
	pan2Free = false;
 822:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
 826:	2c c0       	rjmp	.+88     	; 0x880 <__vector_9+0x124>
				MOTOR1_SETING(MOTOR_BACKWARD);
				MOTOR1_ENABLE();
				startTimePan2();
			}
			else {
				MOTOR2_DISABLE();
 828:	84 b5       	in	r24, 0x24	; 36
 82a:	8f 73       	andi	r24, 0x3F	; 63
 82c:	84 bd       	out	0x24, r24	; 36
				setMotorPWM(MOTOR_OPTIMUM_PWM_BACKWARD, motor_flipping);
 82e:	60 91 0b 01 	lds	r22, 0x010B	; 0x80010b <motor_flipping>
 832:	82 e4       	ldi	r24, 0x42	; 66
 834:	0e 94 be 00 	call	0x17c	; 0x17c <setMotorPWM>
				MOTOR2_SETING(MOTOR_BACKWARD);
 838:	44 98       	cbi	0x08, 4	; 8
 83a:	45 9a       	sbi	0x08, 5	; 8
				MOTOR2_ENABLE();
 83c:	84 b5       	in	r24, 0x24	; 36
 83e:	80 6c       	ori	r24, 0xC0	; 192
 840:	84 bd       	out	0x24, r24	; 36
 842:	1e c0       	rjmp	.+60     	; 0x880 <__vector_9+0x124>
			}
			break;
		
		//We have reached the starting position set flags
		case MOTOR_BREAK_BACKWARD_TIME_S:
			if (motor_flipping == MOTOR1) {
 844:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <motor_flipping>
 848:	81 11       	cpse	r24, r1
 84a:	09 c0       	rjmp	.+18     	; 0x85e <__vector_9+0x102>
				MOTOR1_DISABLE();
 84c:	84 b5       	in	r24, 0x24	; 36
 84e:	8f 7c       	andi	r24, 0xCF	; 207
 850:	84 bd       	out	0x24, r24	; 36
				MOTOR1_SETING(MOTOR_OFF);
 852:	5b 9a       	sbi	0x0b, 3	; 11
 854:	5f 9a       	sbi	0x0b, 7	; 11
				pan1Free = true;
 856:	81 e0       	ldi	r24, 0x01	; 1
 858:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <pan1Free>
 85c:	0a c0       	rjmp	.+20     	; 0x872 <__vector_9+0x116>
			}
			else {
				MOTOR2_DISABLE();
 85e:	84 b5       	in	r24, 0x24	; 36
 860:	8f 73       	andi	r24, 0x3F	; 63
 862:	84 bd       	out	0x24, r24	; 36
				MOTOR2_SETING(MOTOR_OFF);
 864:	44 9a       	sbi	0x08, 4	; 8
 866:	45 9a       	sbi	0x08, 5	; 8
				pancake_done = true;
 868:	81 e0       	ldi	r24, 0x01	; 1
 86a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pancake_done>
				pan2Free = true;
 86e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	TCCR2B |= (1 << CS22) | (1 << CS20);
}

static void stopTimer2(){
	//Stop clock
	TCCR2B &= ~((1 << CS22) | (1 << CS20));
 872:	e1 eb       	ldi	r30, 0xB1	; 177
 874:	f0 e0       	ldi	r31, 0x00	; 0
 876:	80 81       	ld	r24, Z
 878:	8a 7f       	andi	r24, 0xFA	; 250
 87a:	80 83       	st	Z, r24
	
	//Reset count
	TCNT2 = 0x00;
 87c:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__DATA_REGION_ORIGIN__+0x52>
			}
			//Stop the timer
			stopTimer2();
			break;
	}
}
 880:	ff 91       	pop	r31
 882:	ef 91       	pop	r30
 884:	bf 91       	pop	r27
 886:	af 91       	pop	r26
 888:	9f 91       	pop	r25
 88a:	8f 91       	pop	r24
 88c:	7f 91       	pop	r23
 88e:	6f 91       	pop	r22
 890:	5f 91       	pop	r21
 892:	4f 91       	pop	r20
 894:	3f 91       	pop	r19
 896:	2f 91       	pop	r18
 898:	0f 90       	pop	r0
 89a:	0f be       	out	0x3f, r0	; 63
 89c:	0f 90       	pop	r0
 89e:	1f 90       	pop	r1
 8a0:	18 95       	reti

000008a2 <init_1Hz_timer>:
	
}

void init_1Hz_timer(){
	//Setup timer
	PRR &= ~(1 << PRTIM1);	//Enable timer 1
 8a2:	e4 e6       	ldi	r30, 0x64	; 100
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	80 81       	ld	r24, Z
 8a8:	87 7f       	andi	r24, 0xF7	; 247
 8aa:	80 83       	st	Z, r24
	
	 
	//Timer is in fast PWM mode, TOP is ICR1 and prescaler is 256
	TCCR1A = (1 << WGM11);
 8ac:	82 e0       	ldi	r24, 0x02	; 2
 8ae:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
	TCCR1B = (1 << WGM13) | (1 << WGM12) | (1 << CS12);
 8b2:	8c e1       	ldi	r24, 0x1C	; 28
 8b4:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
	
	//Set TOP value
	ICR1 = TIMER_1HZ_TOP;
 8b8:	83 e2       	ldi	r24, 0x23	; 35
 8ba:	94 ef       	ldi	r25, 0xF4	; 244
 8bc:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__DATA_REGION_ORIGIN__+0x27>
 8c0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__DATA_REGION_ORIGIN__+0x26>
	
	//Overflow interrupt enabled
	TIMSK1 = (1 << TOIE1);
 8c4:	81 e0       	ldi	r24, 0x01	; 1
 8c6:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__DATA_REGION_ORIGIN__+0xf>
 8ca:	08 95       	ret

000008cc <main>:
void init_1Hz_timer();

int main(void)
{
	//Enable interrupts
	sei();
 8cc:	78 94       	sei
	
	init_1Hz_timer();
 8ce:	0e 94 51 04 	call	0x8a2	; 0x8a2 <init_1Hz_timer>
	init_digital_comm();		//Initialize the digital communication
 8d2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <init_digital_comm>
	
	DDRB |= (1 << 5);
 8d6:	25 9a       	sbi	0x04, 5	; 4

    while (1) 
    {
		if (heat_on_ctrl) {
 8d8:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <heat_on_ctrl>
 8dc:	88 23       	and	r24, r24
 8de:	11 f0       	breq	.+4      	; 0x8e4 <main+0x18>
			PORTB |= (1 << PORTB5);
 8e0:	2d 9a       	sbi	0x05, 5	; 5
 8e2:	fa cf       	rjmp	.-12     	; 0x8d8 <main+0xc>
		} else {
			PORTB &= ~(1 << PORTB5);
 8e4:	2d 98       	cbi	0x05, 5	; 5
 8e6:	f8 cf       	rjmp	.-16     	; 0x8d8 <main+0xc>

000008e8 <__vector_13>:
	
	//Overflow interrupt enabled
	TIMSK1 = (1 << TOIE1);
}

ISR(TIMER1_OVF_vect){
 8e8:	1f 92       	push	r1
 8ea:	0f 92       	push	r0
 8ec:	0f b6       	in	r0, 0x3f	; 63
 8ee:	0f 92       	push	r0
 8f0:	11 24       	eor	r1, r1
 8f2:	2f 93       	push	r18
 8f4:	3f 93       	push	r19
 8f6:	4f 93       	push	r20
 8f8:	5f 93       	push	r21
 8fa:	6f 93       	push	r22
 8fc:	7f 93       	push	r23
 8fe:	8f 93       	push	r24
 900:	9f 93       	push	r25
 902:	af 93       	push	r26
 904:	bf 93       	push	r27
 906:	ef 93       	push	r30
 908:	ff 93       	push	r31
	
	//Control cooking time
	pan1_cooking_time += 1;
 90a:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 90e:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 912:	01 96       	adiw	r24, 0x01	; 1
 914:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <pan1_cooking_time+0x1>
 918:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <pan1_cooking_time>
	
	if (pan1_cooking_time == 4){
 91c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <pan1_cooking_time>
 920:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <pan1_cooking_time+0x1>
 924:	04 97       	sbiw	r24, 0x04	; 4
 926:	39 f4       	brne	.+14     	; 0x936 <__stack+0x37>
		pancake_done = true;
 928:	81 e0       	ldi	r24, 0x01	; 1
 92a:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <pancake_done>
		pan1_cooking_time = 0;
 92e:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <pan1_cooking_time+0x1>
 932:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <pan1_cooking_time>
	}
	
	//Pancake Done
	pancakeDone();
 936:	0e 94 0e 01 	call	0x21c	; 0x21c <pancakeDone>
	
}
 93a:	ff 91       	pop	r31
 93c:	ef 91       	pop	r30
 93e:	bf 91       	pop	r27
 940:	af 91       	pop	r26
 942:	9f 91       	pop	r25
 944:	8f 91       	pop	r24
 946:	7f 91       	pop	r23
 948:	6f 91       	pop	r22
 94a:	5f 91       	pop	r21
 94c:	4f 91       	pop	r20
 94e:	3f 91       	pop	r19
 950:	2f 91       	pop	r18
 952:	0f 90       	pop	r0
 954:	0f be       	out	0x3f, r0	; 63
 956:	0f 90       	pop	r0
 958:	1f 90       	pop	r1
 95a:	18 95       	reti

0000095c <__subsf3>:
 95c:	50 58       	subi	r21, 0x80	; 128

0000095e <__addsf3>:
 95e:	bb 27       	eor	r27, r27
 960:	aa 27       	eor	r26, r26
 962:	0e 94 c6 04 	call	0x98c	; 0x98c <__addsf3x>
 966:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_round>
 96a:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_pscA>
 96e:	38 f0       	brcs	.+14     	; 0x97e <__addsf3+0x20>
 970:	0e 94 de 05 	call	0xbbc	; 0xbbc <__fp_pscB>
 974:	20 f0       	brcs	.+8      	; 0x97e <__addsf3+0x20>
 976:	39 f4       	brne	.+14     	; 0x986 <__addsf3+0x28>
 978:	9f 3f       	cpi	r25, 0xFF	; 255
 97a:	19 f4       	brne	.+6      	; 0x982 <__addsf3+0x24>
 97c:	26 f4       	brtc	.+8      	; 0x986 <__addsf3+0x28>
 97e:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_nan>
 982:	0e f4       	brtc	.+2      	; 0x986 <__addsf3+0x28>
 984:	e0 95       	com	r30
 986:	e7 fb       	bst	r30, 7
 988:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>

0000098c <__addsf3x>:
 98c:	e9 2f       	mov	r30, r25
 98e:	0e 94 f6 05 	call	0xbec	; 0xbec <__fp_split3>
 992:	58 f3       	brcs	.-42     	; 0x96a <__addsf3+0xc>
 994:	ba 17       	cp	r27, r26
 996:	62 07       	cpc	r22, r18
 998:	73 07       	cpc	r23, r19
 99a:	84 07       	cpc	r24, r20
 99c:	95 07       	cpc	r25, r21
 99e:	20 f0       	brcs	.+8      	; 0x9a8 <__addsf3x+0x1c>
 9a0:	79 f4       	brne	.+30     	; 0x9c0 <__addsf3x+0x34>
 9a2:	a6 f5       	brtc	.+104    	; 0xa0c <__addsf3x+0x80>
 9a4:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_zero>
 9a8:	0e f4       	brtc	.+2      	; 0x9ac <__addsf3x+0x20>
 9aa:	e0 95       	com	r30
 9ac:	0b 2e       	mov	r0, r27
 9ae:	ba 2f       	mov	r27, r26
 9b0:	a0 2d       	mov	r26, r0
 9b2:	0b 01       	movw	r0, r22
 9b4:	b9 01       	movw	r22, r18
 9b6:	90 01       	movw	r18, r0
 9b8:	0c 01       	movw	r0, r24
 9ba:	ca 01       	movw	r24, r20
 9bc:	a0 01       	movw	r20, r0
 9be:	11 24       	eor	r1, r1
 9c0:	ff 27       	eor	r31, r31
 9c2:	59 1b       	sub	r21, r25
 9c4:	99 f0       	breq	.+38     	; 0x9ec <__addsf3x+0x60>
 9c6:	59 3f       	cpi	r21, 0xF9	; 249
 9c8:	50 f4       	brcc	.+20     	; 0x9de <__addsf3x+0x52>
 9ca:	50 3e       	cpi	r21, 0xE0	; 224
 9cc:	68 f1       	brcs	.+90     	; 0xa28 <__addsf3x+0x9c>
 9ce:	1a 16       	cp	r1, r26
 9d0:	f0 40       	sbci	r31, 0x00	; 0
 9d2:	a2 2f       	mov	r26, r18
 9d4:	23 2f       	mov	r18, r19
 9d6:	34 2f       	mov	r19, r20
 9d8:	44 27       	eor	r20, r20
 9da:	58 5f       	subi	r21, 0xF8	; 248
 9dc:	f3 cf       	rjmp	.-26     	; 0x9c4 <__addsf3x+0x38>
 9de:	46 95       	lsr	r20
 9e0:	37 95       	ror	r19
 9e2:	27 95       	ror	r18
 9e4:	a7 95       	ror	r26
 9e6:	f0 40       	sbci	r31, 0x00	; 0
 9e8:	53 95       	inc	r21
 9ea:	c9 f7       	brne	.-14     	; 0x9de <__addsf3x+0x52>
 9ec:	7e f4       	brtc	.+30     	; 0xa0c <__addsf3x+0x80>
 9ee:	1f 16       	cp	r1, r31
 9f0:	ba 0b       	sbc	r27, r26
 9f2:	62 0b       	sbc	r22, r18
 9f4:	73 0b       	sbc	r23, r19
 9f6:	84 0b       	sbc	r24, r20
 9f8:	ba f0       	brmi	.+46     	; 0xa28 <__addsf3x+0x9c>
 9fa:	91 50       	subi	r25, 0x01	; 1
 9fc:	a1 f0       	breq	.+40     	; 0xa26 <__addsf3x+0x9a>
 9fe:	ff 0f       	add	r31, r31
 a00:	bb 1f       	adc	r27, r27
 a02:	66 1f       	adc	r22, r22
 a04:	77 1f       	adc	r23, r23
 a06:	88 1f       	adc	r24, r24
 a08:	c2 f7       	brpl	.-16     	; 0x9fa <__addsf3x+0x6e>
 a0a:	0e c0       	rjmp	.+28     	; 0xa28 <__addsf3x+0x9c>
 a0c:	ba 0f       	add	r27, r26
 a0e:	62 1f       	adc	r22, r18
 a10:	73 1f       	adc	r23, r19
 a12:	84 1f       	adc	r24, r20
 a14:	48 f4       	brcc	.+18     	; 0xa28 <__addsf3x+0x9c>
 a16:	87 95       	ror	r24
 a18:	77 95       	ror	r23
 a1a:	67 95       	ror	r22
 a1c:	b7 95       	ror	r27
 a1e:	f7 95       	ror	r31
 a20:	9e 3f       	cpi	r25, 0xFE	; 254
 a22:	08 f0       	brcs	.+2      	; 0xa26 <__addsf3x+0x9a>
 a24:	b0 cf       	rjmp	.-160    	; 0x986 <__addsf3+0x28>
 a26:	93 95       	inc	r25
 a28:	88 0f       	add	r24, r24
 a2a:	08 f0       	brcs	.+2      	; 0xa2e <__addsf3x+0xa2>
 a2c:	99 27       	eor	r25, r25
 a2e:	ee 0f       	add	r30, r30
 a30:	97 95       	ror	r25
 a32:	87 95       	ror	r24
 a34:	08 95       	ret

00000a36 <ceil>:
 a36:	0e 94 18 06 	call	0xc30	; 0xc30 <__fp_trunc>
 a3a:	90 f0       	brcs	.+36     	; 0xa60 <ceil+0x2a>
 a3c:	9f 37       	cpi	r25, 0x7F	; 127
 a3e:	48 f4       	brcc	.+18     	; 0xa52 <ceil+0x1c>
 a40:	91 11       	cpse	r25, r1
 a42:	16 f4       	brtc	.+4      	; 0xa48 <ceil+0x12>
 a44:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__fp_szero>
 a48:	60 e0       	ldi	r22, 0x00	; 0
 a4a:	70 e0       	ldi	r23, 0x00	; 0
 a4c:	80 e8       	ldi	r24, 0x80	; 128
 a4e:	9f e3       	ldi	r25, 0x3F	; 63
 a50:	08 95       	ret
 a52:	26 f0       	brts	.+8      	; 0xa5c <ceil+0x26>
 a54:	1b 16       	cp	r1, r27
 a56:	61 1d       	adc	r22, r1
 a58:	71 1d       	adc	r23, r1
 a5a:	81 1d       	adc	r24, r1
 a5c:	0c 94 ab 05 	jmp	0xb56	; 0xb56 <__fp_mintl>
 a60:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <__fp_mpack>

00000a64 <__fixsfsi>:
 a64:	0e 94 39 05 	call	0xa72	; 0xa72 <__fixunssfsi>
 a68:	68 94       	set
 a6a:	b1 11       	cpse	r27, r1
 a6c:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__fp_szero>
 a70:	08 95       	ret

00000a72 <__fixunssfsi>:
 a72:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__fp_splitA>
 a76:	88 f0       	brcs	.+34     	; 0xa9a <__fixunssfsi+0x28>
 a78:	9f 57       	subi	r25, 0x7F	; 127
 a7a:	98 f0       	brcs	.+38     	; 0xaa2 <__fixunssfsi+0x30>
 a7c:	b9 2f       	mov	r27, r25
 a7e:	99 27       	eor	r25, r25
 a80:	b7 51       	subi	r27, 0x17	; 23
 a82:	b0 f0       	brcs	.+44     	; 0xab0 <__fixunssfsi+0x3e>
 a84:	e1 f0       	breq	.+56     	; 0xabe <__fixunssfsi+0x4c>
 a86:	66 0f       	add	r22, r22
 a88:	77 1f       	adc	r23, r23
 a8a:	88 1f       	adc	r24, r24
 a8c:	99 1f       	adc	r25, r25
 a8e:	1a f0       	brmi	.+6      	; 0xa96 <__fixunssfsi+0x24>
 a90:	ba 95       	dec	r27
 a92:	c9 f7       	brne	.-14     	; 0xa86 <__fixunssfsi+0x14>
 a94:	14 c0       	rjmp	.+40     	; 0xabe <__fixunssfsi+0x4c>
 a96:	b1 30       	cpi	r27, 0x01	; 1
 a98:	91 f0       	breq	.+36     	; 0xabe <__fixunssfsi+0x4c>
 a9a:	0e 94 30 06 	call	0xc60	; 0xc60 <__fp_zero>
 a9e:	b1 e0       	ldi	r27, 0x01	; 1
 aa0:	08 95       	ret
 aa2:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_zero>
 aa6:	67 2f       	mov	r22, r23
 aa8:	78 2f       	mov	r23, r24
 aaa:	88 27       	eor	r24, r24
 aac:	b8 5f       	subi	r27, 0xF8	; 248
 aae:	39 f0       	breq	.+14     	; 0xabe <__fixunssfsi+0x4c>
 ab0:	b9 3f       	cpi	r27, 0xF9	; 249
 ab2:	cc f3       	brlt	.-14     	; 0xaa6 <__fixunssfsi+0x34>
 ab4:	86 95       	lsr	r24
 ab6:	77 95       	ror	r23
 ab8:	67 95       	ror	r22
 aba:	b3 95       	inc	r27
 abc:	d9 f7       	brne	.-10     	; 0xab4 <__fixunssfsi+0x42>
 abe:	3e f4       	brtc	.+14     	; 0xace <__fixunssfsi+0x5c>
 ac0:	90 95       	com	r25
 ac2:	80 95       	com	r24
 ac4:	70 95       	com	r23
 ac6:	61 95       	neg	r22
 ac8:	7f 4f       	sbci	r23, 0xFF	; 255
 aca:	8f 4f       	sbci	r24, 0xFF	; 255
 acc:	9f 4f       	sbci	r25, 0xFF	; 255
 ace:	08 95       	ret

00000ad0 <__floatunsisf>:
 ad0:	e8 94       	clt
 ad2:	09 c0       	rjmp	.+18     	; 0xae6 <__floatsisf+0x12>

00000ad4 <__floatsisf>:
 ad4:	97 fb       	bst	r25, 7
 ad6:	3e f4       	brtc	.+14     	; 0xae6 <__floatsisf+0x12>
 ad8:	90 95       	com	r25
 ada:	80 95       	com	r24
 adc:	70 95       	com	r23
 ade:	61 95       	neg	r22
 ae0:	7f 4f       	sbci	r23, 0xFF	; 255
 ae2:	8f 4f       	sbci	r24, 0xFF	; 255
 ae4:	9f 4f       	sbci	r25, 0xFF	; 255
 ae6:	99 23       	and	r25, r25
 ae8:	a9 f0       	breq	.+42     	; 0xb14 <__floatsisf+0x40>
 aea:	f9 2f       	mov	r31, r25
 aec:	96 e9       	ldi	r25, 0x96	; 150
 aee:	bb 27       	eor	r27, r27
 af0:	93 95       	inc	r25
 af2:	f6 95       	lsr	r31
 af4:	87 95       	ror	r24
 af6:	77 95       	ror	r23
 af8:	67 95       	ror	r22
 afa:	b7 95       	ror	r27
 afc:	f1 11       	cpse	r31, r1
 afe:	f8 cf       	rjmp	.-16     	; 0xaf0 <__floatsisf+0x1c>
 b00:	fa f4       	brpl	.+62     	; 0xb40 <__floatsisf+0x6c>
 b02:	bb 0f       	add	r27, r27
 b04:	11 f4       	brne	.+4      	; 0xb0a <__floatsisf+0x36>
 b06:	60 ff       	sbrs	r22, 0
 b08:	1b c0       	rjmp	.+54     	; 0xb40 <__floatsisf+0x6c>
 b0a:	6f 5f       	subi	r22, 0xFF	; 255
 b0c:	7f 4f       	sbci	r23, 0xFF	; 255
 b0e:	8f 4f       	sbci	r24, 0xFF	; 255
 b10:	9f 4f       	sbci	r25, 0xFF	; 255
 b12:	16 c0       	rjmp	.+44     	; 0xb40 <__floatsisf+0x6c>
 b14:	88 23       	and	r24, r24
 b16:	11 f0       	breq	.+4      	; 0xb1c <__floatsisf+0x48>
 b18:	96 e9       	ldi	r25, 0x96	; 150
 b1a:	11 c0       	rjmp	.+34     	; 0xb3e <__floatsisf+0x6a>
 b1c:	77 23       	and	r23, r23
 b1e:	21 f0       	breq	.+8      	; 0xb28 <__floatsisf+0x54>
 b20:	9e e8       	ldi	r25, 0x8E	; 142
 b22:	87 2f       	mov	r24, r23
 b24:	76 2f       	mov	r23, r22
 b26:	05 c0       	rjmp	.+10     	; 0xb32 <__floatsisf+0x5e>
 b28:	66 23       	and	r22, r22
 b2a:	71 f0       	breq	.+28     	; 0xb48 <__floatsisf+0x74>
 b2c:	96 e8       	ldi	r25, 0x86	; 134
 b2e:	86 2f       	mov	r24, r22
 b30:	70 e0       	ldi	r23, 0x00	; 0
 b32:	60 e0       	ldi	r22, 0x00	; 0
 b34:	2a f0       	brmi	.+10     	; 0xb40 <__floatsisf+0x6c>
 b36:	9a 95       	dec	r25
 b38:	66 0f       	add	r22, r22
 b3a:	77 1f       	adc	r23, r23
 b3c:	88 1f       	adc	r24, r24
 b3e:	da f7       	brpl	.-10     	; 0xb36 <__floatsisf+0x62>
 b40:	88 0f       	add	r24, r24
 b42:	96 95       	lsr	r25
 b44:	87 95       	ror	r24
 b46:	97 f9       	bld	r25, 7
 b48:	08 95       	ret

00000b4a <__fp_inf>:
 b4a:	97 f9       	bld	r25, 7
 b4c:	9f 67       	ori	r25, 0x7F	; 127
 b4e:	80 e8       	ldi	r24, 0x80	; 128
 b50:	70 e0       	ldi	r23, 0x00	; 0
 b52:	60 e0       	ldi	r22, 0x00	; 0
 b54:	08 95       	ret

00000b56 <__fp_mintl>:
 b56:	88 23       	and	r24, r24
 b58:	71 f4       	brne	.+28     	; 0xb76 <__fp_mintl+0x20>
 b5a:	77 23       	and	r23, r23
 b5c:	21 f0       	breq	.+8      	; 0xb66 <__fp_mintl+0x10>
 b5e:	98 50       	subi	r25, 0x08	; 8
 b60:	87 2b       	or	r24, r23
 b62:	76 2f       	mov	r23, r22
 b64:	07 c0       	rjmp	.+14     	; 0xb74 <__fp_mintl+0x1e>
 b66:	66 23       	and	r22, r22
 b68:	11 f4       	brne	.+4      	; 0xb6e <__fp_mintl+0x18>
 b6a:	99 27       	eor	r25, r25
 b6c:	0d c0       	rjmp	.+26     	; 0xb88 <__fp_mintl+0x32>
 b6e:	90 51       	subi	r25, 0x10	; 16
 b70:	86 2b       	or	r24, r22
 b72:	70 e0       	ldi	r23, 0x00	; 0
 b74:	60 e0       	ldi	r22, 0x00	; 0
 b76:	2a f0       	brmi	.+10     	; 0xb82 <__fp_mintl+0x2c>
 b78:	9a 95       	dec	r25
 b7a:	66 0f       	add	r22, r22
 b7c:	77 1f       	adc	r23, r23
 b7e:	88 1f       	adc	r24, r24
 b80:	da f7       	brpl	.-10     	; 0xb78 <__fp_mintl+0x22>
 b82:	88 0f       	add	r24, r24
 b84:	96 95       	lsr	r25
 b86:	87 95       	ror	r24
 b88:	97 f9       	bld	r25, 7
 b8a:	08 95       	ret

00000b8c <__fp_mpack>:
 b8c:	9f 3f       	cpi	r25, 0xFF	; 255
 b8e:	31 f0       	breq	.+12     	; 0xb9c <__fp_mpack_finite+0xc>

00000b90 <__fp_mpack_finite>:
 b90:	91 50       	subi	r25, 0x01	; 1
 b92:	20 f4       	brcc	.+8      	; 0xb9c <__fp_mpack_finite+0xc>
 b94:	87 95       	ror	r24
 b96:	77 95       	ror	r23
 b98:	67 95       	ror	r22
 b9a:	b7 95       	ror	r27
 b9c:	88 0f       	add	r24, r24
 b9e:	91 1d       	adc	r25, r1
 ba0:	96 95       	lsr	r25
 ba2:	87 95       	ror	r24
 ba4:	97 f9       	bld	r25, 7
 ba6:	08 95       	ret

00000ba8 <__fp_nan>:
 ba8:	9f ef       	ldi	r25, 0xFF	; 255
 baa:	80 ec       	ldi	r24, 0xC0	; 192
 bac:	08 95       	ret

00000bae <__fp_pscA>:
 bae:	00 24       	eor	r0, r0
 bb0:	0a 94       	dec	r0
 bb2:	16 16       	cp	r1, r22
 bb4:	17 06       	cpc	r1, r23
 bb6:	18 06       	cpc	r1, r24
 bb8:	09 06       	cpc	r0, r25
 bba:	08 95       	ret

00000bbc <__fp_pscB>:
 bbc:	00 24       	eor	r0, r0
 bbe:	0a 94       	dec	r0
 bc0:	12 16       	cp	r1, r18
 bc2:	13 06       	cpc	r1, r19
 bc4:	14 06       	cpc	r1, r20
 bc6:	05 06       	cpc	r0, r21
 bc8:	08 95       	ret

00000bca <__fp_round>:
 bca:	09 2e       	mov	r0, r25
 bcc:	03 94       	inc	r0
 bce:	00 0c       	add	r0, r0
 bd0:	11 f4       	brne	.+4      	; 0xbd6 <__fp_round+0xc>
 bd2:	88 23       	and	r24, r24
 bd4:	52 f0       	brmi	.+20     	; 0xbea <__fp_round+0x20>
 bd6:	bb 0f       	add	r27, r27
 bd8:	40 f4       	brcc	.+16     	; 0xbea <__fp_round+0x20>
 bda:	bf 2b       	or	r27, r31
 bdc:	11 f4       	brne	.+4      	; 0xbe2 <__fp_round+0x18>
 bde:	60 ff       	sbrs	r22, 0
 be0:	04 c0       	rjmp	.+8      	; 0xbea <__fp_round+0x20>
 be2:	6f 5f       	subi	r22, 0xFF	; 255
 be4:	7f 4f       	sbci	r23, 0xFF	; 255
 be6:	8f 4f       	sbci	r24, 0xFF	; 255
 be8:	9f 4f       	sbci	r25, 0xFF	; 255
 bea:	08 95       	ret

00000bec <__fp_split3>:
 bec:	57 fd       	sbrc	r21, 7
 bee:	90 58       	subi	r25, 0x80	; 128
 bf0:	44 0f       	add	r20, r20
 bf2:	55 1f       	adc	r21, r21
 bf4:	59 f0       	breq	.+22     	; 0xc0c <__fp_splitA+0x10>
 bf6:	5f 3f       	cpi	r21, 0xFF	; 255
 bf8:	71 f0       	breq	.+28     	; 0xc16 <__fp_splitA+0x1a>
 bfa:	47 95       	ror	r20

00000bfc <__fp_splitA>:
 bfc:	88 0f       	add	r24, r24
 bfe:	97 fb       	bst	r25, 7
 c00:	99 1f       	adc	r25, r25
 c02:	61 f0       	breq	.+24     	; 0xc1c <__fp_splitA+0x20>
 c04:	9f 3f       	cpi	r25, 0xFF	; 255
 c06:	79 f0       	breq	.+30     	; 0xc26 <__fp_splitA+0x2a>
 c08:	87 95       	ror	r24
 c0a:	08 95       	ret
 c0c:	12 16       	cp	r1, r18
 c0e:	13 06       	cpc	r1, r19
 c10:	14 06       	cpc	r1, r20
 c12:	55 1f       	adc	r21, r21
 c14:	f2 cf       	rjmp	.-28     	; 0xbfa <__fp_split3+0xe>
 c16:	46 95       	lsr	r20
 c18:	f1 df       	rcall	.-30     	; 0xbfc <__fp_splitA>
 c1a:	08 c0       	rjmp	.+16     	; 0xc2c <__fp_splitA+0x30>
 c1c:	16 16       	cp	r1, r22
 c1e:	17 06       	cpc	r1, r23
 c20:	18 06       	cpc	r1, r24
 c22:	99 1f       	adc	r25, r25
 c24:	f1 cf       	rjmp	.-30     	; 0xc08 <__fp_splitA+0xc>
 c26:	86 95       	lsr	r24
 c28:	71 05       	cpc	r23, r1
 c2a:	61 05       	cpc	r22, r1
 c2c:	08 94       	sec
 c2e:	08 95       	ret

00000c30 <__fp_trunc>:
 c30:	0e 94 fe 05 	call	0xbfc	; 0xbfc <__fp_splitA>
 c34:	a0 f0       	brcs	.+40     	; 0xc5e <__fp_trunc+0x2e>
 c36:	be e7       	ldi	r27, 0x7E	; 126
 c38:	b9 17       	cp	r27, r25
 c3a:	88 f4       	brcc	.+34     	; 0xc5e <__fp_trunc+0x2e>
 c3c:	bb 27       	eor	r27, r27
 c3e:	9f 38       	cpi	r25, 0x8F	; 143
 c40:	60 f4       	brcc	.+24     	; 0xc5a <__fp_trunc+0x2a>
 c42:	16 16       	cp	r1, r22
 c44:	b1 1d       	adc	r27, r1
 c46:	67 2f       	mov	r22, r23
 c48:	78 2f       	mov	r23, r24
 c4a:	88 27       	eor	r24, r24
 c4c:	98 5f       	subi	r25, 0xF8	; 248
 c4e:	f7 cf       	rjmp	.-18     	; 0xc3e <__fp_trunc+0xe>
 c50:	86 95       	lsr	r24
 c52:	77 95       	ror	r23
 c54:	67 95       	ror	r22
 c56:	b1 1d       	adc	r27, r1
 c58:	93 95       	inc	r25
 c5a:	96 39       	cpi	r25, 0x96	; 150
 c5c:	c8 f3       	brcs	.-14     	; 0xc50 <__fp_trunc+0x20>
 c5e:	08 95       	ret

00000c60 <__fp_zero>:
 c60:	e8 94       	clt

00000c62 <__fp_szero>:
 c62:	bb 27       	eor	r27, r27
 c64:	66 27       	eor	r22, r22
 c66:	77 27       	eor	r23, r23
 c68:	cb 01       	movw	r24, r22
 c6a:	97 f9       	bld	r25, 7
 c6c:	08 95       	ret

00000c6e <__mulsf3>:
 c6e:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3x>
 c72:	0c 94 e5 05 	jmp	0xbca	; 0xbca <__fp_round>
 c76:	0e 94 d7 05 	call	0xbae	; 0xbae <__fp_pscA>
 c7a:	38 f0       	brcs	.+14     	; 0xc8a <__mulsf3+0x1c>
 c7c:	0e 94 de 05 	call	0xbbc	; 0xbbc <__fp_pscB>
 c80:	20 f0       	brcs	.+8      	; 0xc8a <__mulsf3+0x1c>
 c82:	95 23       	and	r25, r21
 c84:	11 f0       	breq	.+4      	; 0xc8a <__mulsf3+0x1c>
 c86:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
 c8a:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_nan>
 c8e:	11 24       	eor	r1, r1
 c90:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__fp_szero>

00000c94 <__mulsf3x>:
 c94:	0e 94 f6 05 	call	0xbec	; 0xbec <__fp_split3>
 c98:	70 f3       	brcs	.-36     	; 0xc76 <__mulsf3+0x8>

00000c9a <__mulsf3_pse>:
 c9a:	95 9f       	mul	r25, r21
 c9c:	c1 f3       	breq	.-16     	; 0xc8e <__mulsf3+0x20>
 c9e:	95 0f       	add	r25, r21
 ca0:	50 e0       	ldi	r21, 0x00	; 0
 ca2:	55 1f       	adc	r21, r21
 ca4:	62 9f       	mul	r22, r18
 ca6:	f0 01       	movw	r30, r0
 ca8:	72 9f       	mul	r23, r18
 caa:	bb 27       	eor	r27, r27
 cac:	f0 0d       	add	r31, r0
 cae:	b1 1d       	adc	r27, r1
 cb0:	63 9f       	mul	r22, r19
 cb2:	aa 27       	eor	r26, r26
 cb4:	f0 0d       	add	r31, r0
 cb6:	b1 1d       	adc	r27, r1
 cb8:	aa 1f       	adc	r26, r26
 cba:	64 9f       	mul	r22, r20
 cbc:	66 27       	eor	r22, r22
 cbe:	b0 0d       	add	r27, r0
 cc0:	a1 1d       	adc	r26, r1
 cc2:	66 1f       	adc	r22, r22
 cc4:	82 9f       	mul	r24, r18
 cc6:	22 27       	eor	r18, r18
 cc8:	b0 0d       	add	r27, r0
 cca:	a1 1d       	adc	r26, r1
 ccc:	62 1f       	adc	r22, r18
 cce:	73 9f       	mul	r23, r19
 cd0:	b0 0d       	add	r27, r0
 cd2:	a1 1d       	adc	r26, r1
 cd4:	62 1f       	adc	r22, r18
 cd6:	83 9f       	mul	r24, r19
 cd8:	a0 0d       	add	r26, r0
 cda:	61 1d       	adc	r22, r1
 cdc:	22 1f       	adc	r18, r18
 cde:	74 9f       	mul	r23, r20
 ce0:	33 27       	eor	r19, r19
 ce2:	a0 0d       	add	r26, r0
 ce4:	61 1d       	adc	r22, r1
 ce6:	23 1f       	adc	r18, r19
 ce8:	84 9f       	mul	r24, r20
 cea:	60 0d       	add	r22, r0
 cec:	21 1d       	adc	r18, r1
 cee:	82 2f       	mov	r24, r18
 cf0:	76 2f       	mov	r23, r22
 cf2:	6a 2f       	mov	r22, r26
 cf4:	11 24       	eor	r1, r1
 cf6:	9f 57       	subi	r25, 0x7F	; 127
 cf8:	50 40       	sbci	r21, 0x00	; 0
 cfa:	9a f0       	brmi	.+38     	; 0xd22 <__mulsf3_pse+0x88>
 cfc:	f1 f0       	breq	.+60     	; 0xd3a <__mulsf3_pse+0xa0>
 cfe:	88 23       	and	r24, r24
 d00:	4a f0       	brmi	.+18     	; 0xd14 <__mulsf3_pse+0x7a>
 d02:	ee 0f       	add	r30, r30
 d04:	ff 1f       	adc	r31, r31
 d06:	bb 1f       	adc	r27, r27
 d08:	66 1f       	adc	r22, r22
 d0a:	77 1f       	adc	r23, r23
 d0c:	88 1f       	adc	r24, r24
 d0e:	91 50       	subi	r25, 0x01	; 1
 d10:	50 40       	sbci	r21, 0x00	; 0
 d12:	a9 f7       	brne	.-22     	; 0xcfe <__mulsf3_pse+0x64>
 d14:	9e 3f       	cpi	r25, 0xFE	; 254
 d16:	51 05       	cpc	r21, r1
 d18:	80 f0       	brcs	.+32     	; 0xd3a <__mulsf3_pse+0xa0>
 d1a:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__fp_inf>
 d1e:	0c 94 31 06 	jmp	0xc62	; 0xc62 <__fp_szero>
 d22:	5f 3f       	cpi	r21, 0xFF	; 255
 d24:	e4 f3       	brlt	.-8      	; 0xd1e <__mulsf3_pse+0x84>
 d26:	98 3e       	cpi	r25, 0xE8	; 232
 d28:	d4 f3       	brlt	.-12     	; 0xd1e <__mulsf3_pse+0x84>
 d2a:	86 95       	lsr	r24
 d2c:	77 95       	ror	r23
 d2e:	67 95       	ror	r22
 d30:	b7 95       	ror	r27
 d32:	f7 95       	ror	r31
 d34:	e7 95       	ror	r30
 d36:	9f 5f       	subi	r25, 0xFF	; 255
 d38:	c1 f7       	brne	.-16     	; 0xd2a <__mulsf3_pse+0x90>
 d3a:	fe 2b       	or	r31, r30
 d3c:	88 0f       	add	r24, r24
 d3e:	91 1d       	adc	r25, r1
 d40:	96 95       	lsr	r25
 d42:	87 95       	ror	r24
 d44:	97 f9       	bld	r25, 7
 d46:	08 95       	ret

00000d48 <__muluhisi3>:
 d48:	0e 94 af 06 	call	0xd5e	; 0xd5e <__umulhisi3>
 d4c:	a5 9f       	mul	r26, r21
 d4e:	90 0d       	add	r25, r0
 d50:	b4 9f       	mul	r27, r20
 d52:	90 0d       	add	r25, r0
 d54:	a4 9f       	mul	r26, r20
 d56:	80 0d       	add	r24, r0
 d58:	91 1d       	adc	r25, r1
 d5a:	11 24       	eor	r1, r1
 d5c:	08 95       	ret

00000d5e <__umulhisi3>:
 d5e:	a2 9f       	mul	r26, r18
 d60:	b0 01       	movw	r22, r0
 d62:	b3 9f       	mul	r27, r19
 d64:	c0 01       	movw	r24, r0
 d66:	a3 9f       	mul	r26, r19
 d68:	70 0d       	add	r23, r0
 d6a:	81 1d       	adc	r24, r1
 d6c:	11 24       	eor	r1, r1
 d6e:	91 1d       	adc	r25, r1
 d70:	b2 9f       	mul	r27, r18
 d72:	70 0d       	add	r23, r0
 d74:	81 1d       	adc	r24, r1
 d76:	11 24       	eor	r1, r1
 d78:	91 1d       	adc	r25, r1
 d7a:	08 95       	ret

00000d7c <_exit>:
 d7c:	f8 94       	cli

00000d7e <__stop_program>:
 d7e:	ff cf       	rjmp	.-2      	; 0xd7e <__stop_program>

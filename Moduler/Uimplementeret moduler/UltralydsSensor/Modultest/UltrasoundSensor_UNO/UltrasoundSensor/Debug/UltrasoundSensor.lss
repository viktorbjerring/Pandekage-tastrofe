
UltrasoundSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000006ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000065a  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000006ce  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006ce  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000700  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000740  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d1b  00000000  00000000  000007e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a12  00000000  00000000  000014fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000612  00000000  00000000  00001f0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000164  00000000  00000000  00002520  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006c6  00000000  00000000  00002684  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003e9  00000000  00000000  00002d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003133  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 4f 01 	jmp	0x29e	; 0x29e <__vector_1>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a6 30       	cpi	r26, 0x06	; 6
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 48 00 	call	0x90	; 0x90 <main>
  88:	0c 94 2b 03 	jmp	0x656	; 0x656 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <main>:
int main(void)
{
	char buffer[256];
	
	/* Enable interrupts */
	sei();
  90:	78 94       	sei
	
	DDRB |= (1<<5);
  92:	25 9a       	sbi	0x04, 5	; 4
	bool isEmpty = false;
	
	InitUART(57600, 8, 'N');
  94:	2e e4       	ldi	r18, 0x4E	; 78
  96:	48 e0       	ldi	r20, 0x08	; 8
  98:	60 e0       	ldi	r22, 0x00	; 0
  9a:	71 ee       	ldi	r23, 0xE1	; 225
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	0e 94 94 00 	call	0x128	; 0x128 <_Z8InitUARTmhc>
	
	/* Enable interrupts */
	sei();
	
	DDRB |= (1<<5);
	bool isEmpty = false;
  a4:	c0 e0       	ldi	r28, 0x00	; 0
			isEmpty = true;
			PORTB |= (1<<5);
		}
		else if (Ultrasound::GetDist() < 10 && isEmpty)
		{
			isEmpty = false;
  a6:	10 e0       	ldi	r17, 0x00	; 0
    /* Replace with your application code */
    while (1) 
    {
		if (Ultrasound::GetDist() > 25 && !isEmpty)
		{
			isEmpty = true;
  a8:	d1 e0       	ldi	r29, 0x01	; 1
	static void StartReading();
	
	static void Init();
	static void Interrupt();
	
	static float GetDist() { return dist_; }
  aa:	c0 90 02 01 	lds	r12, 0x0102	; 0x800102 <_ZN10Ultrasound5dist_E>
  ae:	d0 90 03 01 	lds	r13, 0x0103	; 0x800103 <_ZN10Ultrasound5dist_E+0x1>
  b2:	e0 90 04 01 	lds	r14, 0x0104	; 0x800104 <_ZN10Ultrasound5dist_E+0x2>
  b6:	f0 90 05 01 	lds	r15, 0x0105	; 0x800105 <_ZN10Ultrasound5dist_E+0x3>
	InitUART(57600, 8, 'N');
	
    /* Replace with your application code */
    while (1) 
    {
		if (Ultrasound::GetDist() > 25 && !isEmpty)
  ba:	20 e0       	ldi	r18, 0x00	; 0
  bc:	30 e0       	ldi	r19, 0x00	; 0
  be:	48 ec       	ldi	r20, 0xC8	; 200
  c0:	51 e4       	ldi	r21, 0x41	; 65
  c2:	c7 01       	movw	r24, r14
  c4:	b6 01       	movw	r22, r12
  c6:	0e 94 97 02 	call	0x52e	; 0x52e <__gesf2>
  ca:	18 16       	cp	r1, r24
  cc:	a4 f4       	brge	.+40     	; 0xf6 <main+0x66>
  ce:	c1 11       	cpse	r28, r1
  d0:	20 c0       	rjmp	.+64     	; 0x112 <main+0x82>
  d2:	0e c0       	rjmp	.+28     	; 0xf0 <main+0x60>
		{
			isEmpty = true;
			PORTB |= (1<<5);
		}
		else if (Ultrasound::GetDist() < 10 && isEmpty)
  d4:	c1 11       	cpse	r28, r1
  d6:	1a c0       	rjmp	.+52     	; 0x10c <main+0x7c>
		{
			isEmpty = false;
			PORTB &= ~(1<<5);
		}
		
		Ultrasound::StartReading();
  d8:	0e 94 12 01 	call	0x224	; 0x224 <_ZN10Ultrasound12StartReadingEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  dc:	2f ef       	ldi	r18, 0xFF	; 255
  de:	81 ee       	ldi	r24, 0xE1	; 225
  e0:	94 e0       	ldi	r25, 0x04	; 4
  e2:	21 50       	subi	r18, 0x01	; 1
  e4:	80 40       	sbci	r24, 0x00	; 0
  e6:	90 40       	sbci	r25, 0x00	; 0
  e8:	e1 f7       	brne	.-8      	; 0xe2 <main+0x52>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x5c>
  ec:	00 00       	nop
  ee:	dd cf       	rjmp	.-70     	; 0xaa <main+0x1a>
    while (1) 
    {
		if (Ultrasound::GetDist() > 25 && !isEmpty)
		{
			isEmpty = true;
			PORTB |= (1<<5);
  f0:	2d 9a       	sbi	0x05, 5	; 5
    /* Replace with your application code */
    while (1) 
    {
		if (Ultrasound::GetDist() > 25 && !isEmpty)
		{
			isEmpty = true;
  f2:	cd 2f       	mov	r28, r29
  f4:	f1 cf       	rjmp	.-30     	; 0xd8 <main+0x48>
			PORTB |= (1<<5);
		}
		else if (Ultrasound::GetDist() < 10 && isEmpty)
  f6:	20 e0       	ldi	r18, 0x00	; 0
  f8:	30 e0       	ldi	r19, 0x00	; 0
  fa:	40 e2       	ldi	r20, 0x20	; 32
  fc:	51 e4       	ldi	r21, 0x41	; 65
  fe:	c7 01       	movw	r24, r14
 100:	b6 01       	movw	r22, r12
 102:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__cmpsf2>
 106:	88 23       	and	r24, r24
 108:	2c f3       	brlt	.-54     	; 0xd4 <main+0x44>
 10a:	e6 cf       	rjmp	.-52     	; 0xd8 <main+0x48>
		{
			isEmpty = false;
			PORTB &= ~(1<<5);
 10c:	2d 98       	cbi	0x05, 5	; 5
			isEmpty = true;
			PORTB |= (1<<5);
		}
		else if (Ultrasound::GetDist() < 10 && isEmpty)
		{
			isEmpty = false;
 10e:	c1 2f       	mov	r28, r17
 110:	e3 cf       	rjmp	.-58     	; 0xd8 <main+0x48>
		if (Ultrasound::GetDist() > 25 && !isEmpty)
		{
			isEmpty = true;
			PORTB |= (1<<5);
		}
		else if (Ultrasound::GetDist() < 10 && isEmpty)
 112:	20 e0       	ldi	r18, 0x00	; 0
 114:	30 e0       	ldi	r19, 0x00	; 0
 116:	40 e2       	ldi	r20, 0x20	; 32
 118:	51 e4       	ldi	r21, 0x41	; 65
 11a:	c7 01       	movw	r24, r14
 11c:	b6 01       	movw	r22, r12
 11e:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__cmpsf2>
 122:	88 23       	and	r24, r24
 124:	9c f3       	brlt	.-26     	; 0x10c <main+0x7c>
 126:	d8 cf       	rjmp	.-80     	; 0xd8 <main+0x48>

00000128 <_Z8InitUARTmhc>:
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	c4 2f       	mov	r28, r20
 132:	d2 2f       	mov	r29, r18
 134:	8b 01       	movw	r16, r22
 136:	9c 01       	movw	r18, r24
 138:	0c 52       	subi	r16, 0x2C	; 44
 13a:	11 40       	sbci	r17, 0x01	; 1
 13c:	21 09       	sbc	r18, r1
 13e:	31 09       	sbc	r19, r1
 140:	05 3d       	cpi	r16, 0xD5	; 213
 142:	10 4c       	sbci	r17, 0xC0	; 192
 144:	21 40       	sbci	r18, 0x01	; 1
 146:	31 05       	cpc	r19, r1
 148:	08 f0       	brcs	.+2      	; 0x14c <_Z8InitUARTmhc+0x24>
 14a:	67 c0       	rjmp	.+206    	; 0x21a <_Z8InitUARTmhc+0xf2>
 14c:	2b ef       	ldi	r18, 0xFB	; 251
 14e:	2c 0f       	add	r18, r28
 150:	24 30       	cpi	r18, 0x04	; 4
 152:	08 f0       	brcs	.+2      	; 0x156 <_Z8InitUARTmhc+0x2e>
 154:	62 c0       	rjmp	.+196    	; 0x21a <_Z8InitUARTmhc+0xf2>
 156:	e0 ec       	ldi	r30, 0xC0	; 192
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	20 81       	ld	r18, Z
 15c:	2c 7f       	andi	r18, 0xFC	; 252
 15e:	20 83       	st	Z, r18
 160:	28 e1       	ldi	r18, 0x18	; 24
 162:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
 166:	e2 ec       	ldi	r30, 0xC2	; 194
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	20 81       	ld	r18, Z
 16c:	10 82       	st	Z, r1
 16e:	dc 01       	movw	r26, r24
 170:	cb 01       	movw	r24, r22
 172:	88 0f       	add	r24, r24
 174:	99 1f       	adc	r25, r25
 176:	aa 1f       	adc	r26, r26
 178:	bb 1f       	adc	r27, r27
 17a:	88 0f       	add	r24, r24
 17c:	99 1f       	adc	r25, r25
 17e:	aa 1f       	adc	r26, r26
 180:	bb 1f       	adc	r27, r27
 182:	9c 01       	movw	r18, r24
 184:	ad 01       	movw	r20, r26
 186:	22 0f       	add	r18, r18
 188:	33 1f       	adc	r19, r19
 18a:	44 1f       	adc	r20, r20
 18c:	55 1f       	adc	r21, r21
 18e:	22 0f       	add	r18, r18
 190:	33 1f       	adc	r19, r19
 192:	44 1f       	adc	r20, r20
 194:	55 1f       	adc	r21, r21
 196:	60 e0       	ldi	r22, 0x00	; 0
 198:	74 e2       	ldi	r23, 0x24	; 36
 19a:	84 ef       	ldi	r24, 0xF4	; 244
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 09 03 	call	0x612	; 0x612 <__udivmodsi4>
 1a2:	21 50       	subi	r18, 0x01	; 1
 1a4:	31 09       	sbc	r19, r1
 1a6:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
 1aa:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
 1ae:	c6 30       	cpi	r28, 0x06	; 6
 1b0:	71 f0       	breq	.+28     	; 0x1ce <_Z8InitUARTmhc+0xa6>
 1b2:	18 f4       	brcc	.+6      	; 0x1ba <_Z8InitUARTmhc+0x92>
 1b4:	c5 30       	cpi	r28, 0x05	; 5
 1b6:	31 f0       	breq	.+12     	; 0x1c4 <_Z8InitUARTmhc+0x9c>
 1b8:	1b c0       	rjmp	.+54     	; 0x1f0 <_Z8InitUARTmhc+0xc8>
 1ba:	c7 30       	cpi	r28, 0x07	; 7
 1bc:	71 f0       	breq	.+28     	; 0x1da <_Z8InitUARTmhc+0xb2>
 1be:	c8 30       	cpi	r28, 0x08	; 8
 1c0:	91 f0       	breq	.+36     	; 0x1e6 <_Z8InitUARTmhc+0xbe>
 1c2:	16 c0       	rjmp	.+44     	; 0x1f0 <_Z8InitUARTmhc+0xc8>
 1c4:	e2 ec       	ldi	r30, 0xC2	; 194
 1c6:	f0 e0       	ldi	r31, 0x00	; 0
 1c8:	80 81       	ld	r24, Z
 1ca:	80 83       	st	Z, r24
 1cc:	11 c0       	rjmp	.+34     	; 0x1f0 <_Z8InitUARTmhc+0xc8>
 1ce:	e2 ec       	ldi	r30, 0xC2	; 194
 1d0:	f0 e0       	ldi	r31, 0x00	; 0
 1d2:	80 81       	ld	r24, Z
 1d4:	82 60       	ori	r24, 0x02	; 2
 1d6:	80 83       	st	Z, r24
 1d8:	0b c0       	rjmp	.+22     	; 0x1f0 <_Z8InitUARTmhc+0xc8>
 1da:	e2 ec       	ldi	r30, 0xC2	; 194
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	80 81       	ld	r24, Z
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	80 83       	st	Z, r24
 1e4:	05 c0       	rjmp	.+10     	; 0x1f0 <_Z8InitUARTmhc+0xc8>
 1e6:	e2 ec       	ldi	r30, 0xC2	; 194
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	86 60       	ori	r24, 0x06	; 6
 1ee:	80 83       	st	Z, r24
 1f0:	d5 34       	cpi	r29, 0x45	; 69
 1f2:	19 f0       	breq	.+6      	; 0x1fa <_Z8InitUARTmhc+0xd2>
 1f4:	df 34       	cpi	r29, 0x4F	; 79
 1f6:	39 f0       	breq	.+14     	; 0x206 <_Z8InitUARTmhc+0xde>
 1f8:	0c c0       	rjmp	.+24     	; 0x212 <_Z8InitUARTmhc+0xea>
 1fa:	e2 ec       	ldi	r30, 0xC2	; 194
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	80 81       	ld	r24, Z
 200:	80 62       	ori	r24, 0x20	; 32
 202:	80 83       	st	Z, r24
 204:	0a c0       	rjmp	.+20     	; 0x21a <_Z8InitUARTmhc+0xf2>
 206:	e2 ec       	ldi	r30, 0xC2	; 194
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	80 81       	ld	r24, Z
 20c:	80 63       	ori	r24, 0x30	; 48
 20e:	80 83       	st	Z, r24
 210:	04 c0       	rjmp	.+8      	; 0x21a <_Z8InitUARTmhc+0xf2>
 212:	e2 ec       	ldi	r30, 0xC2	; 194
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	80 83       	st	Z, r24
 21a:	df 91       	pop	r29
 21c:	cf 91       	pop	r28
 21e:	1f 91       	pop	r17
 220:	0f 91       	pop	r16
 222:	08 95       	ret

00000224 <_ZN10Ultrasound12StartReadingEv>:
	
	/* Setup trigger pin direction */
	DDRD &= ~(1<<2);
	
	/* Clear timer0 register A */
	TCCR0A = 0;
 224:	5e 9a       	sbi	0x0b, 6	; 11
 226:	85 e3       	ldi	r24, 0x35	; 53
 228:	8a 95       	dec	r24
 22a:	f1 f7       	brne	.-4      	; 0x228 <_ZN10Ultrasound12StartReadingEv+0x4>
 22c:	00 00       	nop
 22e:	5e 98       	cbi	0x0b, 6	; 11
 230:	08 95       	ret

00000232 <_ZN10Ultrasound9InterruptEv>:
}

void Ultrasound::Interrupt()
{
	/* If currently timing PW */
	if (isEcho_)
 232:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
 236:	88 23       	and	r24, r24
 238:	31 f1       	breq	.+76     	; 0x286 <_ZN10Ultrasound9InterruptEv+0x54>
	{
		/* Turn off timer0 */
		TCCR0B = 0;
 23a:	15 bc       	out	0x25, r1	; 37
		
		/* Calculate and save distance */
		count_ = TCNT0;
 23c:	86 b5       	in	r24, 0x26	; 38
 23e:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <_ZN10Ultrasound6count_E>
		float dist = REGRESSION(TCNT0); // Distance in cm
 242:	66 b5       	in	r22, 0x26	; 38
		dist_ = dist;
 244:	70 e0       	ldi	r23, 0x00	; 0
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__floatsisf>
 24e:	29 ee       	ldi	r18, 0xE9	; 233
 250:	38 e4       	ldi	r19, 0x48	; 72
 252:	4e e8       	ldi	r20, 0x8E	; 142
 254:	5e e3       	ldi	r21, 0x3E	; 62
 256:	0e 94 9c 02 	call	0x538	; 0x538 <__mulsf3>
 25a:	25 ec       	ldi	r18, 0xC5	; 197
 25c:	3e ef       	ldi	r19, 0xFE	; 254
 25e:	42 e7       	ldi	r20, 0x72	; 114
 260:	5e e3       	ldi	r21, 0x3E	; 62
 262:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__subsf3>
 266:	60 93 02 01 	sts	0x0102, r22	; 0x800102 <_ZN10Ultrasound5dist_E>
 26a:	70 93 03 01 	sts	0x0103, r23	; 0x800103 <_ZN10Ultrasound5dist_E+0x1>
 26e:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <_ZN10Ultrasound5dist_E+0x2>
 272:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <_ZN10Ultrasound5dist_E+0x3>
		
		isEcho_ = false;
 276:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <_edata>
		/* Switch to rising edge */
		EICRA |= 0b1;
 27a:	e9 e6       	ldi	r30, 0x69	; 105
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	81 60       	ori	r24, 0x01	; 1
 282:	80 83       	st	Z, r24
 284:	08 95       	ret
	}
	else
	{
		/* Reset and start timer0 */
		TCNT0 = 0;
 286:	16 bc       	out	0x26, r1	; 38
		TCCR0B = 0b00000100;
 288:	84 e0       	ldi	r24, 0x04	; 4
 28a:	85 bd       	out	0x25, r24	; 37
		
		isEcho_ = true;;
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
		/* Switch to falling edge */
		EICRA &= ~0b1;
 292:	e9 e6       	ldi	r30, 0x69	; 105
 294:	f0 e0       	ldi	r31, 0x00	; 0
 296:	80 81       	ld	r24, Z
 298:	8e 7f       	andi	r24, 0xFE	; 254
 29a:	80 83       	st	Z, r24
 29c:	08 95       	ret

0000029e <__vector_1>:

#include "Ultrasound.h"
#include "uart.h"

ISR(INT0_vect)
{
 29e:	1f 92       	push	r1
 2a0:	0f 92       	push	r0
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	0f 92       	push	r0
 2a6:	11 24       	eor	r1, r1
 2a8:	2f 93       	push	r18
 2aa:	3f 93       	push	r19
 2ac:	4f 93       	push	r20
 2ae:	5f 93       	push	r21
 2b0:	6f 93       	push	r22
 2b2:	7f 93       	push	r23
 2b4:	8f 93       	push	r24
 2b6:	9f 93       	push	r25
 2b8:	af 93       	push	r26
 2ba:	bf 93       	push	r27
 2bc:	ef 93       	push	r30
 2be:	ff 93       	push	r31
	Ultrasound::Interrupt();
 2c0:	0e 94 19 01 	call	0x232	; 0x232 <_ZN10Ultrasound9InterruptEv>
}
 2c4:	ff 91       	pop	r31
 2c6:	ef 91       	pop	r30
 2c8:	bf 91       	pop	r27
 2ca:	af 91       	pop	r26
 2cc:	9f 91       	pop	r25
 2ce:	8f 91       	pop	r24
 2d0:	7f 91       	pop	r23
 2d2:	6f 91       	pop	r22
 2d4:	5f 91       	pop	r21
 2d6:	4f 91       	pop	r20
 2d8:	3f 91       	pop	r19
 2da:	2f 91       	pop	r18
 2dc:	0f 90       	pop	r0
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	0f 90       	pop	r0
 2e2:	1f 90       	pop	r1
 2e4:	18 95       	reti

000002e6 <__subsf3>:
 2e6:	50 58       	subi	r21, 0x80	; 128

000002e8 <__addsf3>:
 2e8:	bb 27       	eor	r27, r27
 2ea:	aa 27       	eor	r26, r26
 2ec:	0e 94 8b 01 	call	0x316	; 0x316 <__addsf3x>
 2f0:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_round>
 2f4:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_pscA>
 2f8:	38 f0       	brcs	.+14     	; 0x308 <__addsf3+0x20>
 2fa:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fp_pscB>
 2fe:	20 f0       	brcs	.+8      	; 0x308 <__addsf3+0x20>
 300:	39 f4       	brne	.+14     	; 0x310 <__addsf3+0x28>
 302:	9f 3f       	cpi	r25, 0xFF	; 255
 304:	19 f4       	brne	.+6      	; 0x30c <__addsf3+0x24>
 306:	26 f4       	brtc	.+8      	; 0x310 <__addsf3+0x28>
 308:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_nan>
 30c:	0e f4       	brtc	.+2      	; 0x310 <__addsf3+0x28>
 30e:	e0 95       	com	r30
 310:	e7 fb       	bst	r30, 7
 312:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_inf>

00000316 <__addsf3x>:
 316:	e9 2f       	mov	r30, r25
 318:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__fp_split3>
 31c:	58 f3       	brcs	.-42     	; 0x2f4 <__addsf3+0xc>
 31e:	ba 17       	cp	r27, r26
 320:	62 07       	cpc	r22, r18
 322:	73 07       	cpc	r23, r19
 324:	84 07       	cpc	r24, r20
 326:	95 07       	cpc	r25, r21
 328:	20 f0       	brcs	.+8      	; 0x332 <__addsf3x+0x1c>
 32a:	79 f4       	brne	.+30     	; 0x34a <__addsf3x+0x34>
 32c:	a6 f5       	brtc	.+104    	; 0x396 <__addsf3x+0x80>
 32e:	0c 94 90 02 	jmp	0x520	; 0x520 <__fp_zero>
 332:	0e f4       	brtc	.+2      	; 0x336 <__addsf3x+0x20>
 334:	e0 95       	com	r30
 336:	0b 2e       	mov	r0, r27
 338:	ba 2f       	mov	r27, r26
 33a:	a0 2d       	mov	r26, r0
 33c:	0b 01       	movw	r0, r22
 33e:	b9 01       	movw	r22, r18
 340:	90 01       	movw	r18, r0
 342:	0c 01       	movw	r0, r24
 344:	ca 01       	movw	r24, r20
 346:	a0 01       	movw	r20, r0
 348:	11 24       	eor	r1, r1
 34a:	ff 27       	eor	r31, r31
 34c:	59 1b       	sub	r21, r25
 34e:	99 f0       	breq	.+38     	; 0x376 <__addsf3x+0x60>
 350:	59 3f       	cpi	r21, 0xF9	; 249
 352:	50 f4       	brcc	.+20     	; 0x368 <__addsf3x+0x52>
 354:	50 3e       	cpi	r21, 0xE0	; 224
 356:	68 f1       	brcs	.+90     	; 0x3b2 <__addsf3x+0x9c>
 358:	1a 16       	cp	r1, r26
 35a:	f0 40       	sbci	r31, 0x00	; 0
 35c:	a2 2f       	mov	r26, r18
 35e:	23 2f       	mov	r18, r19
 360:	34 2f       	mov	r19, r20
 362:	44 27       	eor	r20, r20
 364:	58 5f       	subi	r21, 0xF8	; 248
 366:	f3 cf       	rjmp	.-26     	; 0x34e <__addsf3x+0x38>
 368:	46 95       	lsr	r20
 36a:	37 95       	ror	r19
 36c:	27 95       	ror	r18
 36e:	a7 95       	ror	r26
 370:	f0 40       	sbci	r31, 0x00	; 0
 372:	53 95       	inc	r21
 374:	c9 f7       	brne	.-14     	; 0x368 <__addsf3x+0x52>
 376:	7e f4       	brtc	.+30     	; 0x396 <__addsf3x+0x80>
 378:	1f 16       	cp	r1, r31
 37a:	ba 0b       	sbc	r27, r26
 37c:	62 0b       	sbc	r22, r18
 37e:	73 0b       	sbc	r23, r19
 380:	84 0b       	sbc	r24, r20
 382:	ba f0       	brmi	.+46     	; 0x3b2 <__addsf3x+0x9c>
 384:	91 50       	subi	r25, 0x01	; 1
 386:	a1 f0       	breq	.+40     	; 0x3b0 <__addsf3x+0x9a>
 388:	ff 0f       	add	r31, r31
 38a:	bb 1f       	adc	r27, r27
 38c:	66 1f       	adc	r22, r22
 38e:	77 1f       	adc	r23, r23
 390:	88 1f       	adc	r24, r24
 392:	c2 f7       	brpl	.-16     	; 0x384 <__addsf3x+0x6e>
 394:	0e c0       	rjmp	.+28     	; 0x3b2 <__addsf3x+0x9c>
 396:	ba 0f       	add	r27, r26
 398:	62 1f       	adc	r22, r18
 39a:	73 1f       	adc	r23, r19
 39c:	84 1f       	adc	r24, r20
 39e:	48 f4       	brcc	.+18     	; 0x3b2 <__addsf3x+0x9c>
 3a0:	87 95       	ror	r24
 3a2:	77 95       	ror	r23
 3a4:	67 95       	ror	r22
 3a6:	b7 95       	ror	r27
 3a8:	f7 95       	ror	r31
 3aa:	9e 3f       	cpi	r25, 0xFE	; 254
 3ac:	08 f0       	brcs	.+2      	; 0x3b0 <__addsf3x+0x9a>
 3ae:	b0 cf       	rjmp	.-160    	; 0x310 <__addsf3+0x28>
 3b0:	93 95       	inc	r25
 3b2:	88 0f       	add	r24, r24
 3b4:	08 f0       	brcs	.+2      	; 0x3b8 <__addsf3x+0xa2>
 3b6:	99 27       	eor	r25, r25
 3b8:	ee 0f       	add	r30, r30
 3ba:	97 95       	ror	r25
 3bc:	87 95       	ror	r24
 3be:	08 95       	ret

000003c0 <__cmpsf2>:
 3c0:	0e 94 22 02 	call	0x444	; 0x444 <__fp_cmp>
 3c4:	08 f4       	brcc	.+2      	; 0x3c8 <__cmpsf2+0x8>
 3c6:	81 e0       	ldi	r24, 0x01	; 1
 3c8:	08 95       	ret

000003ca <__floatunsisf>:
 3ca:	e8 94       	clt
 3cc:	09 c0       	rjmp	.+18     	; 0x3e0 <__floatsisf+0x12>

000003ce <__floatsisf>:
 3ce:	97 fb       	bst	r25, 7
 3d0:	3e f4       	brtc	.+14     	; 0x3e0 <__floatsisf+0x12>
 3d2:	90 95       	com	r25
 3d4:	80 95       	com	r24
 3d6:	70 95       	com	r23
 3d8:	61 95       	neg	r22
 3da:	7f 4f       	sbci	r23, 0xFF	; 255
 3dc:	8f 4f       	sbci	r24, 0xFF	; 255
 3de:	9f 4f       	sbci	r25, 0xFF	; 255
 3e0:	99 23       	and	r25, r25
 3e2:	a9 f0       	breq	.+42     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3e4:	f9 2f       	mov	r31, r25
 3e6:	96 e9       	ldi	r25, 0x96	; 150
 3e8:	bb 27       	eor	r27, r27
 3ea:	93 95       	inc	r25
 3ec:	f6 95       	lsr	r31
 3ee:	87 95       	ror	r24
 3f0:	77 95       	ror	r23
 3f2:	67 95       	ror	r22
 3f4:	b7 95       	ror	r27
 3f6:	f1 11       	cpse	r31, r1
 3f8:	f8 cf       	rjmp	.-16     	; 0x3ea <__floatsisf+0x1c>
 3fa:	fa f4       	brpl	.+62     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3fc:	bb 0f       	add	r27, r27
 3fe:	11 f4       	brne	.+4      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 400:	60 ff       	sbrs	r22, 0
 402:	1b c0       	rjmp	.+54     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 404:	6f 5f       	subi	r22, 0xFF	; 255
 406:	7f 4f       	sbci	r23, 0xFF	; 255
 408:	8f 4f       	sbci	r24, 0xFF	; 255
 40a:	9f 4f       	sbci	r25, 0xFF	; 255
 40c:	16 c0       	rjmp	.+44     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 40e:	88 23       	and	r24, r24
 410:	11 f0       	breq	.+4      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 412:	96 e9       	ldi	r25, 0x96	; 150
 414:	11 c0       	rjmp	.+34     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 416:	77 23       	and	r23, r23
 418:	21 f0       	breq	.+8      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 41a:	9e e8       	ldi	r25, 0x8E	; 142
 41c:	87 2f       	mov	r24, r23
 41e:	76 2f       	mov	r23, r22
 420:	05 c0       	rjmp	.+10     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 422:	66 23       	and	r22, r22
 424:	71 f0       	breq	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	96 e8       	ldi	r25, 0x86	; 134
 428:	86 2f       	mov	r24, r22
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	60 e0       	ldi	r22, 0x00	; 0
 42e:	2a f0       	brmi	.+10     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 430:	9a 95       	dec	r25
 432:	66 0f       	add	r22, r22
 434:	77 1f       	adc	r23, r23
 436:	88 1f       	adc	r24, r24
 438:	da f7       	brpl	.-10     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 43a:	88 0f       	add	r24, r24
 43c:	96 95       	lsr	r25
 43e:	87 95       	ror	r24
 440:	97 f9       	bld	r25, 7
 442:	08 95       	ret

00000444 <__fp_cmp>:
 444:	99 0f       	add	r25, r25
 446:	00 08       	sbc	r0, r0
 448:	55 0f       	add	r21, r21
 44a:	aa 0b       	sbc	r26, r26
 44c:	e0 e8       	ldi	r30, 0x80	; 128
 44e:	fe ef       	ldi	r31, 0xFE	; 254
 450:	16 16       	cp	r1, r22
 452:	17 06       	cpc	r1, r23
 454:	e8 07       	cpc	r30, r24
 456:	f9 07       	cpc	r31, r25
 458:	c0 f0       	brcs	.+48     	; 0x48a <__fp_cmp+0x46>
 45a:	12 16       	cp	r1, r18
 45c:	13 06       	cpc	r1, r19
 45e:	e4 07       	cpc	r30, r20
 460:	f5 07       	cpc	r31, r21
 462:	98 f0       	brcs	.+38     	; 0x48a <__fp_cmp+0x46>
 464:	62 1b       	sub	r22, r18
 466:	73 0b       	sbc	r23, r19
 468:	84 0b       	sbc	r24, r20
 46a:	95 0b       	sbc	r25, r21
 46c:	39 f4       	brne	.+14     	; 0x47c <__fp_cmp+0x38>
 46e:	0a 26       	eor	r0, r26
 470:	61 f0       	breq	.+24     	; 0x48a <__fp_cmp+0x46>
 472:	23 2b       	or	r18, r19
 474:	24 2b       	or	r18, r20
 476:	25 2b       	or	r18, r21
 478:	21 f4       	brne	.+8      	; 0x482 <__fp_cmp+0x3e>
 47a:	08 95       	ret
 47c:	0a 26       	eor	r0, r26
 47e:	09 f4       	brne	.+2      	; 0x482 <__fp_cmp+0x3e>
 480:	a1 40       	sbci	r26, 0x01	; 1
 482:	a6 95       	lsr	r26
 484:	8f ef       	ldi	r24, 0xFF	; 255
 486:	81 1d       	adc	r24, r1
 488:	81 1d       	adc	r24, r1
 48a:	08 95       	ret

0000048c <__fp_inf>:
 48c:	97 f9       	bld	r25, 7
 48e:	9f 67       	ori	r25, 0x7F	; 127
 490:	80 e8       	ldi	r24, 0x80	; 128
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	60 e0       	ldi	r22, 0x00	; 0
 496:	08 95       	ret

00000498 <__fp_nan>:
 498:	9f ef       	ldi	r25, 0xFF	; 255
 49a:	80 ec       	ldi	r24, 0xC0	; 192
 49c:	08 95       	ret

0000049e <__fp_pscA>:
 49e:	00 24       	eor	r0, r0
 4a0:	0a 94       	dec	r0
 4a2:	16 16       	cp	r1, r22
 4a4:	17 06       	cpc	r1, r23
 4a6:	18 06       	cpc	r1, r24
 4a8:	09 06       	cpc	r0, r25
 4aa:	08 95       	ret

000004ac <__fp_pscB>:
 4ac:	00 24       	eor	r0, r0
 4ae:	0a 94       	dec	r0
 4b0:	12 16       	cp	r1, r18
 4b2:	13 06       	cpc	r1, r19
 4b4:	14 06       	cpc	r1, r20
 4b6:	05 06       	cpc	r0, r21
 4b8:	08 95       	ret

000004ba <__fp_round>:
 4ba:	09 2e       	mov	r0, r25
 4bc:	03 94       	inc	r0
 4be:	00 0c       	add	r0, r0
 4c0:	11 f4       	brne	.+4      	; 0x4c6 <__fp_round+0xc>
 4c2:	88 23       	and	r24, r24
 4c4:	52 f0       	brmi	.+20     	; 0x4da <__fp_round+0x20>
 4c6:	bb 0f       	add	r27, r27
 4c8:	40 f4       	brcc	.+16     	; 0x4da <__fp_round+0x20>
 4ca:	bf 2b       	or	r27, r31
 4cc:	11 f4       	brne	.+4      	; 0x4d2 <__fp_round+0x18>
 4ce:	60 ff       	sbrs	r22, 0
 4d0:	04 c0       	rjmp	.+8      	; 0x4da <__fp_round+0x20>
 4d2:	6f 5f       	subi	r22, 0xFF	; 255
 4d4:	7f 4f       	sbci	r23, 0xFF	; 255
 4d6:	8f 4f       	sbci	r24, 0xFF	; 255
 4d8:	9f 4f       	sbci	r25, 0xFF	; 255
 4da:	08 95       	ret

000004dc <__fp_split3>:
 4dc:	57 fd       	sbrc	r21, 7
 4de:	90 58       	subi	r25, 0x80	; 128
 4e0:	44 0f       	add	r20, r20
 4e2:	55 1f       	adc	r21, r21
 4e4:	59 f0       	breq	.+22     	; 0x4fc <__fp_splitA+0x10>
 4e6:	5f 3f       	cpi	r21, 0xFF	; 255
 4e8:	71 f0       	breq	.+28     	; 0x506 <__fp_splitA+0x1a>
 4ea:	47 95       	ror	r20

000004ec <__fp_splitA>:
 4ec:	88 0f       	add	r24, r24
 4ee:	97 fb       	bst	r25, 7
 4f0:	99 1f       	adc	r25, r25
 4f2:	61 f0       	breq	.+24     	; 0x50c <__fp_splitA+0x20>
 4f4:	9f 3f       	cpi	r25, 0xFF	; 255
 4f6:	79 f0       	breq	.+30     	; 0x516 <__fp_splitA+0x2a>
 4f8:	87 95       	ror	r24
 4fa:	08 95       	ret
 4fc:	12 16       	cp	r1, r18
 4fe:	13 06       	cpc	r1, r19
 500:	14 06       	cpc	r1, r20
 502:	55 1f       	adc	r21, r21
 504:	f2 cf       	rjmp	.-28     	; 0x4ea <__fp_split3+0xe>
 506:	46 95       	lsr	r20
 508:	f1 df       	rcall	.-30     	; 0x4ec <__fp_splitA>
 50a:	08 c0       	rjmp	.+16     	; 0x51c <__fp_splitA+0x30>
 50c:	16 16       	cp	r1, r22
 50e:	17 06       	cpc	r1, r23
 510:	18 06       	cpc	r1, r24
 512:	99 1f       	adc	r25, r25
 514:	f1 cf       	rjmp	.-30     	; 0x4f8 <__fp_splitA+0xc>
 516:	86 95       	lsr	r24
 518:	71 05       	cpc	r23, r1
 51a:	61 05       	cpc	r22, r1
 51c:	08 94       	sec
 51e:	08 95       	ret

00000520 <__fp_zero>:
 520:	e8 94       	clt

00000522 <__fp_szero>:
 522:	bb 27       	eor	r27, r27
 524:	66 27       	eor	r22, r22
 526:	77 27       	eor	r23, r23
 528:	cb 01       	movw	r24, r22
 52a:	97 f9       	bld	r25, 7
 52c:	08 95       	ret

0000052e <__gesf2>:
 52e:	0e 94 22 02 	call	0x444	; 0x444 <__fp_cmp>
 532:	08 f4       	brcc	.+2      	; 0x536 <__gesf2+0x8>
 534:	8f ef       	ldi	r24, 0xFF	; 255
 536:	08 95       	ret

00000538 <__mulsf3>:
 538:	0e 94 af 02 	call	0x55e	; 0x55e <__mulsf3x>
 53c:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__fp_round>
 540:	0e 94 4f 02 	call	0x49e	; 0x49e <__fp_pscA>
 544:	38 f0       	brcs	.+14     	; 0x554 <__mulsf3+0x1c>
 546:	0e 94 56 02 	call	0x4ac	; 0x4ac <__fp_pscB>
 54a:	20 f0       	brcs	.+8      	; 0x554 <__mulsf3+0x1c>
 54c:	95 23       	and	r25, r21
 54e:	11 f0       	breq	.+4      	; 0x554 <__mulsf3+0x1c>
 550:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_inf>
 554:	0c 94 4c 02 	jmp	0x498	; 0x498 <__fp_nan>
 558:	11 24       	eor	r1, r1
 55a:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_szero>

0000055e <__mulsf3x>:
 55e:	0e 94 6e 02 	call	0x4dc	; 0x4dc <__fp_split3>
 562:	70 f3       	brcs	.-36     	; 0x540 <__mulsf3+0x8>

00000564 <__mulsf3_pse>:
 564:	95 9f       	mul	r25, r21
 566:	c1 f3       	breq	.-16     	; 0x558 <__mulsf3+0x20>
 568:	95 0f       	add	r25, r21
 56a:	50 e0       	ldi	r21, 0x00	; 0
 56c:	55 1f       	adc	r21, r21
 56e:	62 9f       	mul	r22, r18
 570:	f0 01       	movw	r30, r0
 572:	72 9f       	mul	r23, r18
 574:	bb 27       	eor	r27, r27
 576:	f0 0d       	add	r31, r0
 578:	b1 1d       	adc	r27, r1
 57a:	63 9f       	mul	r22, r19
 57c:	aa 27       	eor	r26, r26
 57e:	f0 0d       	add	r31, r0
 580:	b1 1d       	adc	r27, r1
 582:	aa 1f       	adc	r26, r26
 584:	64 9f       	mul	r22, r20
 586:	66 27       	eor	r22, r22
 588:	b0 0d       	add	r27, r0
 58a:	a1 1d       	adc	r26, r1
 58c:	66 1f       	adc	r22, r22
 58e:	82 9f       	mul	r24, r18
 590:	22 27       	eor	r18, r18
 592:	b0 0d       	add	r27, r0
 594:	a1 1d       	adc	r26, r1
 596:	62 1f       	adc	r22, r18
 598:	73 9f       	mul	r23, r19
 59a:	b0 0d       	add	r27, r0
 59c:	a1 1d       	adc	r26, r1
 59e:	62 1f       	adc	r22, r18
 5a0:	83 9f       	mul	r24, r19
 5a2:	a0 0d       	add	r26, r0
 5a4:	61 1d       	adc	r22, r1
 5a6:	22 1f       	adc	r18, r18
 5a8:	74 9f       	mul	r23, r20
 5aa:	33 27       	eor	r19, r19
 5ac:	a0 0d       	add	r26, r0
 5ae:	61 1d       	adc	r22, r1
 5b0:	23 1f       	adc	r18, r19
 5b2:	84 9f       	mul	r24, r20
 5b4:	60 0d       	add	r22, r0
 5b6:	21 1d       	adc	r18, r1
 5b8:	82 2f       	mov	r24, r18
 5ba:	76 2f       	mov	r23, r22
 5bc:	6a 2f       	mov	r22, r26
 5be:	11 24       	eor	r1, r1
 5c0:	9f 57       	subi	r25, 0x7F	; 127
 5c2:	50 40       	sbci	r21, 0x00	; 0
 5c4:	9a f0       	brmi	.+38     	; 0x5ec <__mulsf3_pse+0x88>
 5c6:	f1 f0       	breq	.+60     	; 0x604 <__mulsf3_pse+0xa0>
 5c8:	88 23       	and	r24, r24
 5ca:	4a f0       	brmi	.+18     	; 0x5de <__mulsf3_pse+0x7a>
 5cc:	ee 0f       	add	r30, r30
 5ce:	ff 1f       	adc	r31, r31
 5d0:	bb 1f       	adc	r27, r27
 5d2:	66 1f       	adc	r22, r22
 5d4:	77 1f       	adc	r23, r23
 5d6:	88 1f       	adc	r24, r24
 5d8:	91 50       	subi	r25, 0x01	; 1
 5da:	50 40       	sbci	r21, 0x00	; 0
 5dc:	a9 f7       	brne	.-22     	; 0x5c8 <__mulsf3_pse+0x64>
 5de:	9e 3f       	cpi	r25, 0xFE	; 254
 5e0:	51 05       	cpc	r21, r1
 5e2:	80 f0       	brcs	.+32     	; 0x604 <__mulsf3_pse+0xa0>
 5e4:	0c 94 46 02 	jmp	0x48c	; 0x48c <__fp_inf>
 5e8:	0c 94 91 02 	jmp	0x522	; 0x522 <__fp_szero>
 5ec:	5f 3f       	cpi	r21, 0xFF	; 255
 5ee:	e4 f3       	brlt	.-8      	; 0x5e8 <__mulsf3_pse+0x84>
 5f0:	98 3e       	cpi	r25, 0xE8	; 232
 5f2:	d4 f3       	brlt	.-12     	; 0x5e8 <__mulsf3_pse+0x84>
 5f4:	86 95       	lsr	r24
 5f6:	77 95       	ror	r23
 5f8:	67 95       	ror	r22
 5fa:	b7 95       	ror	r27
 5fc:	f7 95       	ror	r31
 5fe:	e7 95       	ror	r30
 600:	9f 5f       	subi	r25, 0xFF	; 255
 602:	c1 f7       	brne	.-16     	; 0x5f4 <__mulsf3_pse+0x90>
 604:	fe 2b       	or	r31, r30
 606:	88 0f       	add	r24, r24
 608:	91 1d       	adc	r25, r1
 60a:	96 95       	lsr	r25
 60c:	87 95       	ror	r24
 60e:	97 f9       	bld	r25, 7
 610:	08 95       	ret

00000612 <__udivmodsi4>:
 612:	a1 e2       	ldi	r26, 0x21	; 33
 614:	1a 2e       	mov	r1, r26
 616:	aa 1b       	sub	r26, r26
 618:	bb 1b       	sub	r27, r27
 61a:	fd 01       	movw	r30, r26
 61c:	0d c0       	rjmp	.+26     	; 0x638 <__udivmodsi4_ep>

0000061e <__udivmodsi4_loop>:
 61e:	aa 1f       	adc	r26, r26
 620:	bb 1f       	adc	r27, r27
 622:	ee 1f       	adc	r30, r30
 624:	ff 1f       	adc	r31, r31
 626:	a2 17       	cp	r26, r18
 628:	b3 07       	cpc	r27, r19
 62a:	e4 07       	cpc	r30, r20
 62c:	f5 07       	cpc	r31, r21
 62e:	20 f0       	brcs	.+8      	; 0x638 <__udivmodsi4_ep>
 630:	a2 1b       	sub	r26, r18
 632:	b3 0b       	sbc	r27, r19
 634:	e4 0b       	sbc	r30, r20
 636:	f5 0b       	sbc	r31, r21

00000638 <__udivmodsi4_ep>:
 638:	66 1f       	adc	r22, r22
 63a:	77 1f       	adc	r23, r23
 63c:	88 1f       	adc	r24, r24
 63e:	99 1f       	adc	r25, r25
 640:	1a 94       	dec	r1
 642:	69 f7       	brne	.-38     	; 0x61e <__udivmodsi4_loop>
 644:	60 95       	com	r22
 646:	70 95       	com	r23
 648:	80 95       	com	r24
 64a:	90 95       	com	r25
 64c:	9b 01       	movw	r18, r22
 64e:	ac 01       	movw	r20, r24
 650:	bd 01       	movw	r22, r26
 652:	cf 01       	movw	r24, r30
 654:	08 95       	ret

00000656 <_exit>:
 656:	f8 94       	cli

00000658 <__stop_program>:
 658:	ff cf       	rjmp	.-2      	; 0x658 <__stop_program>
